package com.indra.pjsf.tf.workflows;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.Driver;
import com.indra.pjsf.tf.MESA_Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosTestigo;
import com.indra.pjsf.tf.paginas.MESA_PgnAperturaCierreCargos;
import com.indra.pjsf.tf.paginas.MESA_PgnNuevoCargo;
import com.indra.pjsf.tf.paginas.PgnCambioDeRadicacion;
import com.indra.pjsf.tf.paginas.PgnCargosBandeja;
import com.indra.pjsf.tf.paginas.PgnDevolucionCorte;
import com.indra.pjsf.tf.paginas.PgnElevarACorteSuprema;
import com.indra.pjsf.tf.paginas.PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.PgnInformePendientesInicio;
import com.indra.pjsf.tf.paginas.PgnNuevoCargo;
import com.indra.pjsf.tf.paginas.PgnPaseAOtroOrganismo;


public class GestorDeCargos extends GestorBase {
	
	private static WebElement lnkBuscar;
	private static WebElement observaciones;
	private static WebElement lupaEnviarA;
	private static WebElement codigo;
	private static Select wSelector;
	
	public static void abrirLibroCargos(){
		irAlFramePorDefecto();
		
		WebElement btnAbrir =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnAbrir.click();
		
		WebElement fechaLibro =  Driver.Instance.findElement(By.id("form11:selectInputDate1"));
		fechaLibro.clear();
		fechaLibro.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaLibro());
		
		WebElement horaApertura =  Driver.Instance.findElement(By.id("form11:inputText3"));
		horaApertura.clear();
		horaApertura.sendKeys(GestorDeDatosDePrueba.Cargo.getHoraApertura());
		
		WebElement observacionesLibro =  Driver.Instance.findElement(By.id("form11:inputText1"));
		observacionesLibro.sendKeys(GestorDeDatosDePrueba.Cargo.getComentarios());
		
		WebElement btnGuardar =  Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1"));
		btnGuardar.click();
		
		WebElement btnConfirmaSI =  Driver.Instance.findElement(By.id("form11:commandButton11"));
		btnConfirmaSI.click();
		
	}
	
	public static boolean verificarCargoAbierto() {
		boolean blnCargoAbierto = false;
		irAlFramePorDefecto();
			
		if (Driver.Instance.findElement(By.id("form2:table1:0:outputText7")).getText()
				.contains(GestorDeDatosDePrueba.Cargo.FechaHoraAperturaLibro()))
		{
			if (Driver.Instance.findElement(By.id("form2:table1:0:outputText1")).getText() == null)
				blnCargoAbierto = true;
			else
				if (Driver.Instance.findElement(By.id("form2:table1:0:outputText1")).getText().trim().equals(""))
					blnCargoAbierto = true;
		}
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Libro de Cargos Abierto", GestorDeDatosDePrueba.Cargo.getComentarios());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha y Hora", GestorDeDatosDePrueba.Cargo.FechaHoraAperturaLibro());
		
		return blnCargoAbierto;
	}

	public static void NuevoCargoSR(){
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnNuevo.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		
		WebElement grupoClase =  Driver.Instance.findElement(By.id("selectOneChoice21"));
		wSelector = new Select(grupoClase);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getGrupoClase());
		
		Driver.EsperarDisponible(By.id("selectOneChoice3"));
		
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipo());
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));
		
		WebElement btnConfirmaSI =  Driver.Instance.findElement(By.id("commandButton11"));
		btnConfirmaSI.click();
		
		Driver.EsperarDisponible(By.id("form111:outputFormatted1"));
	}
	
	public static boolean verificarCargoCreado() {
		boolean blnCargoCreado = false;
		final String fraseConfirmaParcial = "Se ha generado exitosamente el cargo";
				
		irAlFramePorDefecto();
		
		WebElement fraseConfirma = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
		
		if (fraseConfirma.getText().contains(fraseConfirmaParcial))
			blnCargoCreado = true;
		
		// Esta parte se usa para guardar el cargo que despu'es se eliminará en la prueba 002.012
		// A partir de la versión 4.1.31 se añade la fecha en la paginade confirmación de creacion:
		// ANTES: Se ha generado exitosamente el cargo Nº 283
		// AHORA: Se ha generado exitosamente el cargo Nº 737 Fecha: 13/07/2018 12:06
		// Se realiza la modificacion para el substring no tenga en cuenta esa fecha, 
		// suponemos que siempre sera con formato dd/mm/aaaa hh:mm, por lo que siempre son 24 caracteres
		int i = fraseConfirma.getText().length();
		//String cargo = fraseConfirma.getText().substring(40, i);
		String cargo = fraseConfirma.getText().substring(40, i-24);
		
		if (GestorDeDatosTestigo.getNumeroDeCargoAEliminar().trim().equals("0")) {
			GestorDeDatosTestigo.setNumeroDeCargoAEliminar(cargo);
		} 
		// -----------------
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Nuevo Cargo Nro.", cargo);
			
		return blnCargoCreado;
	}

	public static void NuevoCargoCR() {
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnNuevo.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipo());
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
		
		WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
		btnBuscarExpediente.click();
	
		irAlPopup();
		
		WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		cuij.clear();
		cuij.sendKeys(GestorDeDatosDePrueba.Cargo.getCUIJ());
		
		WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("commandButton2"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));		
		
		Driver.Instance.findElement(By.id("commandButton11")).click();
		
	}

	public static void ConsultarCargosPF() {
		irAlFramePorDefecto();
		
		WebElement fechaDesde =  Driver.Instance.findElement(By.id("form2:selectInputDate1"));
		fechaDesde.clear();
		fechaDesde.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaDesde());
	
		WebElement fechaHasta =  Driver.Instance.findElement(By.id("form2:selectInputDate11"));
		fechaHasta.clear();
		fechaHasta.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaHasta());
		
		WebElement lnkBuscar =  Driver.Instance.findElement(By.id("form2:commandLink1"));
		lnkBuscar.click();
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha Desde", GestorDeDatosDePrueba.Cargo.getFechaDesde());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha Hasta", GestorDeDatosDePrueba.Cargo.getFechaHasta());

	}
	
	public static void ConsultarCargosPFYE() {
		irAlFramePorDefecto();
		
		WebElement fechaDesde =  Driver.Instance.findElement(By.id("form2:selectInputDate1"));
		fechaDesde.clear();
		fechaDesde.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaDesde());
	
		WebElement fechaHasta =  Driver.Instance.findElement(By.id("form2:selectInputDate11"));
		fechaHasta.clear();
		fechaHasta.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaHasta());
			
		WebElement btnBuscarAvanzada =  Driver.Instance.findElement(By.id("form2:showDetail1"));
		btnBuscarAvanzada.click();
				
		WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("form2:objectImage2"));
		btnBuscarExpediente.click();
		
		irAlPopup();
		
		WebElement cuij= null;
		//WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		try {
			cuij =  Popup.findElement(By.xpath("id('inputText1')"));	
		
		}  catch(NoSuchElementException e) {
			System.out.println(e.getMessage());
			Popup.switchTo().frame(0);
			cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		}
		
		cuij.clear();
		cuij.sendKeys(GestorDeDatosDePrueba.Cargo.getExpediente());
		
		WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("form2:commandLink1"));

		WebElement lnkBuscarLista = Driver.Instance.findElement(By.id("form2:commandLink1"));
        lnkBuscarLista.click();
        
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha Desde", GestorDeDatosDePrueba.Cargo.getFechaDesde());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha Hasta", GestorDeDatosDePrueba.Cargo.getFechaHasta());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente", GestorDeDatosDePrueba.Cargo.getExpediente());

	}
	
	public static boolean verificarListadoOK() {
		boolean blnListadoOK = false;
		final String fraseNoHayCargos = "Seleccionar y";
		
		irAlFramePorDefecto();
				
		WebElement fraseConfirma = Driver.Instance.findElement(By.cssSelector("td.x63"));
		if (fraseConfirma.getText().equals(fraseNoHayCargos))blnListadoOK = true;
		
		return blnListadoOK;
		
	}

	public static void CrearExpedienteNuevo() {
		
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnNuevo.click();
		
		crearExpedienteNuevoPagina1();
		
		crearExpedienteNuevoPagina2();
		
		crearExpedienteNuevoPagina3();
		
	    crearExpedienteNuevoPagina4();
	    
	    WebElement btnFinalizar = Driver.Instance.findElement(By.id("form1:commandButton3111"));
	    btnFinalizar.click();
		
	}

	public static void CrearExpedienteEnBandeja() {
		
		
		crearExpedienteNuevoEnBandejaPagina1();
		
		crearExpedienteNuevoEnBandejaPagina2();
		
		//crearExpedienteNuevoPagina3();
		
	    //crearExpedienteNuevoPagina4();
	    
	    //WebElement btnFinalizar = Driver.Instance.findElement(By.id("form1:commandButton3111"));
	    //btnFinalizar.click();
		irAlFramePorDefecto();
		//Driver.Instance.findElement(By.id("commandButton2")).click();
		WebElement btnFinalizar = Driver.Instance.findElement(By.id("commandButton2"));
	    btnFinalizar.click();
	    WebElement btnSiVincular = Driver.Instance.findElement(By.id("commandButton11"));
	    btnSiVincular.click();
	    WebElement btnFila = Driver.Instance.findElement(By.cssSelector("input[name = 'table1:_s']"));
	    btnFila.click();
	    irAlFramePorDefecto();
	    WebElement btnFinalizar1 = Driver.Instance.findElement(By.id("commandButton2"));
	    btnFinalizar1.click();
	    WebElement btnSiVincular1 = Driver.Instance.findElement(By.id("commandButton11"));
	    btnSiVincular1.click();
	    irAlFramePorDefecto();
	    WebElement btnFinalizar2 = Driver.Instance.findElement(By.id("form111:commandButton2"));
	    btnFinalizar2.click();
	}
	
	public static void crearExpedienteNuevoEnBandejaPagina2() {
		//Pantalla final de carga del expediente
		irAlFramePorDefecto();
		
		WebElement Ubicacion = Driver.Instance.findElement(By.id("selectOneChoice6"));
		wSelector = new Select(Ubicacion);
		wSelector.selectByIndex(2);
		
		WebElement Categoria = Driver.Instance.findElement(By.id("selectOneChoice8"));
		wSelector = new Select(Categoria);
		wSelector.selectByIndex(4);
		
		WebElement Materia = Driver.Instance.findElement(By.id("selectOneChoice51"));
		wSelector = new Select(Materia);
		wSelector.selectByIndex(3);
				
	}

	
	
	public static void crearExpedienteNuevoPagina4() {
		//Pantalla final de carga del expediente
		
		new Select(Driver.Instance.findElement(By.id("form1:selectOneChoice2")))
		.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getUbicacion());
		
		Driver.Instance.findElement(By.id("form1:commandButton31")).click();
				
	}

	public static void crearExpedienteNuevoPagina3() {
		//Pantalla de datos del Actor
				
		Select wSelector = null;
		
		WebElement modo = Driver.Instance.findElement(By.id("form1:selectOneChoice1"));
		wSelector = new Select(modo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getModo());
		
		WebElement materia = Driver.Instance.findElement(By.id("form1:selectOneChoice2"));
		wSelector = new Select(materia);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getMateria());
		
		WebElement vinculo = Driver.Instance.findElement(By.id("form1:selectOneChoice4"));
		wSelector = new Select(vinculo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getVinculo());
		
		WebElement lupaActor =  Driver.Instance.findElement(By.id("form1:objectImage21"));
		lupaActor.click();
		
		//Pantalla de selección del Actor
		
		irAlPopup();
		
		//Modificado JFC
		WebElement actor =  Popup.findElement(By.id("form2:inputNombre"));
		//WebElement actor = obtenerPrimerObjetoAUsarEnElPopup("form2:inputNombre");
		actor.clear();
		actor.sendKeys(GestorDeDatosDePrueba.Cargo.getActor());
		
		WebElement lnkBuscarActor =  Popup.findElement(By.id("form2:commandLink1"));
		lnkBuscarActor.click();
		
		//Añadido
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		WebElement bntSeleccionar =  Popup.findElement(By.id("form2:table1:menuBar2:commandButton31"));
		bntSeleccionar.click();
			
		volverDelPopup();
		
		WebElement mostrarDomicilio = Driver.Instance.findElement(By.id("form1:showDetail1__xc_"));
		if (mostrarDomicilio.findElement(By.tagName("img")).getAttribute("title").contains("mostrar"))
		{
			mostrarDomicilio.click();
		}
		
		Driver.EsperarDisponible(By.id("form1:inputText1"));
		
		//Pantalla de datos del Actor (nuevamente)
		
		Driver.Instance.findElement(By.id("form1:inputText1")).clear();
		Driver.Instance.findElement(By.id("form1:inputText1")).sendKeys(GestorDeDatosDePrueba.Cargo.getDomicilio());
		


		Driver.Instance.findElement(By.id("form1:commandButton31")).click(); 
        Driver.Instance.findElement(By.id("form1:commandButton31")).click();

	}

	public static void crearExpedienteNuevoPagina2() {
		//Pantalla de datos de Secretaría
							
		WebElement btnSiguienteSecretaria =  Driver.Instance.findElement(By.id("form1:commandButton31"));
		btnSiguienteSecretaria.click();
	}

	public static void crearExpedienteNuevoPagina1() {
		
	
		//Pantalla Inicial de Nuevo Cargo
		
		WebElement solicita = Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
				
		new Select(Driver.Instance.findElement(By.id("selectOneChoice21")))
		.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getGrupoClase());

		Driver.EsperarDisponible(By.id("selectOneChoice3"));
		
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		new Select(tipo).selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipo());
		
		WebElement lupaPresentante =  Driver.Instance.findElement(By.id("objectImage23"));
		lupaPresentante.click();
		
		irAlPopup();
		
		//Búsqueda de Presentante por matrícula
		
		//Modificado JFC
		WebElement matricula =  Popup.findElement(By.id("inputText3"));
		//WebElement matricula = obtenerPrimerObjetoAUsarEnElPopup("inputText3");
		matricula.clear();
		matricula.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
		
		Popup.findElement(By.id("commandLink1")).click();
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("commandButton13"));
		
		//Pantalla Inicial de Nuevo Cargo (nuevamente)
		
		Driver.Instance.findElement(By.id("commandButton13")).click();
	}
	
	public static void crearExpedienteNuevoEnBandejaPagina1() {
		
		
		//Pantalla Inicial de Nuevo Cargo
		
		WebElement solicita = Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
				
		//new Select(Driver.Instance.findElement(By.id("selectOneChoice21")))
		//.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getGrupoClase());

		Driver.EsperarDisponible(By.id("selectOneChoice3"));
		
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		//new Select(tipo).selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipo());
		
		wSelector = new Select(tipo);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoInst2());
		wSelector.selectByIndex(1);
		
		WebElement lupaPresentante =  Driver.Instance.findElement(By.id("objectImage23"));
		lupaPresentante.click();
		
		irAlPopup();
		
		//Búsqueda de Presentante por matrícula
		
		//Modificado JFC
		WebElement matricula =  Popup.findElement(By.id("inputText3"));
		//WebElement matricula = obtenerPrimerObjetoAUsarEnElPopup("inputText3");
		matricula.clear();
		matricula.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
		
		Popup.findElement(By.id("commandLink1")).click();
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("commandButton13"));
		
		//Pantalla Inicial de Nuevo Cargo (nuevamente)
		
		Driver.Instance.findElement(By.id("commandButton13")).click();
	}
	
	public static boolean verificarExpedienteNuevoCreado() {
		boolean blnExpedienteNuevo = false;
		final String fraseConfirmaParcial = "correctamente";
		irAlFramePorDefecto();
		
		WebElement fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[contains(.,'Nuevo expediente registrado correctamente')]"));
		if (fraseConfirma.getText().contains(fraseConfirmaParcial))
			blnExpedienteNuevo = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Nro. de CUIJ asignado"
				,Driver.Instance.findElement(By.id("form1:inputText1")).getText().toString());
			
		//WebElement tabla = Driver.Instance.findElement(By.id("form1:inputText3__xc_"));
		//GestorDeDatosTestigo.agregarTextoDatosTestigo(""
		//		,tabla.findElement(By.className("xc")).getText().toString());
		WebElement tabla = Driver.Instance.findElement(By.id("form1:outputFormatted1"));
		GestorDeDatosTestigo.agregarTextoDatosTestigo(""
				,tabla.getText().toString());
		return blnExpedienteNuevo;
	}

	public static void IniciarExpedienteMEU() {
		irAlFramePorDefecto();
		
		//Pantalla Listado de Expedientes
		
		WebElement fechaInicio = Driver.Instance.findElement(By.id("form2:selectInputDate11"));
		fechaInicio.clear();
		fechaInicio.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaInicio());
				
		WebElement lnkBuscar =  Driver.Instance.findElement(By.id("form2:commandLink1"));
		lnkBuscar.click();

		Driver.EsperarDisponible(By.className("x2f"));
		
		WebElement iniciar = Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2"));
		iniciar.click();
		
		Driver.EsperarDisponible(By.id("form111:menuBar11:commandButton112"));

		WebElement guardar = Driver.Instance.findElement(By.id("form111:menuBar11:commandButton112"));
		guardar.click();
			
	}
	
	public static boolean verificarExpedienteMEUIniciado() {
		boolean blnExpedienteIniciado = false;
		irAlFramePorDefecto();
		
		final String fraseConfirmaParcial = "Cargo";
				
		WebElement fraseConfirma = Driver.Instance.findElement(By.id("form111:outputFormatted111"));
		
		if (fraseConfirma.getText().contains(fraseConfirmaParcial))
			blnExpedienteIniciado = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente iniciado",fraseConfirma.getText());
		
		return blnExpedienteIniciado;
	}

	public static void ModificarCargo() {
		
		irAlFramePorDefecto();
		
		WebElement fechaDesde =  Driver.Instance.findElement(By.id("form2:selectInputDate1"));
		fechaDesde.clear();
		fechaDesde.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaDesde());
	
		WebElement fechaHasta =  Driver.Instance.findElement(By.id("form2:selectInputDate11"));
		fechaHasta.clear();
		fechaHasta.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaHasta());
		
		WebElement lnkBuscar =  Driver.Instance.findElement(By.id("form2:commandLink1"));
		lnkBuscar.click();
		
		Driver.EsperarDisponible(By.id("form2:menuBar1:commandButton1"));
		
		WebElement bntEditar =  Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2"));
		bntEditar.click();
		
		Driver.EsperarDisponible(By.id("inputText5"));
		
		WebElement observaciones =  Driver.Instance.findElement(By.id("inputText5"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo(""
				,Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']")).getText());
	
		WebElement btnGuardar =  Driver.Instance.findElement(By.id("menuBar111:commandButton1121"));
		btnGuardar.click();
		
	}
	
	public static boolean verificarCargoModificado() {

		boolean blnCargoModificado = false;
		irAlFramePorDefecto();
		
		String titulo = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']")).getText().toString();
		String fecha = Driver.Instance.findElement(By.id("form2:selectInputDate1")).getAttribute("value").toString();
		String fechaUsada = GestorDeDatosDePrueba.Cargo.getFechaDesde().toString();
				
		if (titulo.contains("Lista de cargos") && fechaUsada.contains(fecha))
			blnCargoModificado = true;

		
		return blnCargoModificado;
	}
	
	public static void eliminarCargo() {

		irAlFramePorDefecto();
		
		//Link Limpiar
		Driver.Instance.findElement(By.id("form2:commandLink11")).click();

		//Número de Cargo
		Driver.Instance.findElement(By.id("form2:inputText1")).clear();
		Driver.Instance.findElement(By.id("form2:inputText1"))
		.sendKeys(GestorDeDatosTestigo.getNumeroDeCargoAEliminar().trim());
		
		//Link Buscar
		Driver.Instance.findElement(By.id("form2:commandLink1")).click();
		
		//Botón Eliminar
		Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton3"));
		Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton3")).click();
		
		//Observaciones
		Driver.EsperarDisponible(By.id("form111:inputText1"));
		Driver.Instance.findElement(By.id("form111:inputText1")).clear();
		Driver.Instance.findElement(By.id("form111:inputText1"))
		.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
				, GestorDeDatosDePrueba.Cargo.getObservaciones().trim().toString());
	
		//Botón Aceptar
		Driver.Instance.findElement(By.id("form111:commandButton2")).click();
		
		//Dialogo de confirmación
		irAlDialogo();
		Dialogo.accept();
		volverDelDialogo();
		
	}

	public static boolean verificarCargoEliminado() {
		
		boolean blnVerificado = false;
		irAlFramePorDefecto();
		
		Driver.Instance.findElement(By.id("form2:selectBooleanCheckbox1")).click();
		Driver.Instance.findElement(By.id("form2:commandLink1")).click();
		Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButtonActivar"));
		
		if (Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButtonActivar")).isDisplayed()) 
			blnVerificado = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Cargo Eliminado", GestorDeDatosTestigo.getNumeroDeCargoAEliminar());
		
		return blnVerificado;
	}
	
	public static void cerrarLibroCargos() {
		
		irAlFramePorDefecto();
		
		WebElement btnCerrar = Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton21"));
		btnCerrar.click();
		
		Driver.EsperarDisponible(By.id("form11:inputText3"));	
		
		WebElement horaCierre= Driver.Instance.findElement(By.id("form11:inputText3"));
		horaCierre.clear();
		horaCierre.sendKeys(GestorDeDatosDePrueba.Cargo.getHoraCierre());
		
		WebElement txtObservacion = Driver.Instance.findElement(By.id("form11:inputText1"));
		txtObservacion.sendKeys("   -   Cierre   -   " + GestorDeDatosDePrueba.Cargo.getComentarios());
				
		WebElement btnGuardar = Driver.Instance.findElement(By.id("form11:menuBar11:commandButton12"));
		btnGuardar.click();
		
		Driver.EsperarDisponible(By.id("form11:commandButton11"));
		
		WebElement btnConfirmar = Driver.Instance.findElement(By.id("form11:commandButton11"));
		btnConfirmar.click();
	}
	
	public static boolean verificarLibroCargosCerrado() {
		// Temporal para pasar OK la prueba de cerrar
		//boolean blnCargoCerrado = true;
		
		boolean blnCargoCerrado = false;
		if (!(Driver.Instance.findElement(By.id("form2:table1:0:outputText1"))).getText().isEmpty()) {
			blnCargoCerrado = true;
		}

		GestorDeDatosTestigo.agregarTextoDatosTestigo("Libro de Cargos Cerrado", GestorDeDatosDePrueba.Cargo.getComentarios());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Fecha y Hora", GestorDeDatosDePrueba.Cargo.getHoraCierre());
		
		return blnCargoCerrado;
	}

	public static void imprimirControlCargos() {
		
		irAlFramePorDefecto();
		
		
		Driver.EsperarDisponible(By.id("form111:selectInputDate1"));	
		WebElement fechaDesde= Driver.Instance.findElement(By.id("form111:selectInputDate1"));
		fechaDesde.clear();
		fechaDesde.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaDesde());
		
		Driver.EsperarDisponible(By.id("form111:selectInputDate1"));	
		WebElement fechaHasta= Driver.Instance.findElement(By.id("form111:selectInputDate11"));
		fechaHasta.clear();
		fechaHasta.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaHasta());
		
		Driver.Instance.findElement(By.id("form111:commandLink1")).click();
		
	}

	public static boolean verificarImprimirControlCargos() {
		boolean blnCargoCerrado = true;
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Imprimir Listado Control de cargos desde ", 	GestorDeDatosDePrueba.Cargo.getFechaDesde());
		GestorDeDatosTestigo.agregarTextoDatosTestigo(" hasta ", GestorDeDatosDePrueba.Cargo.getFechaHasta());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Se realizó una verificación manual de esta prueba. ", " ");
		
		return blnCargoCerrado;
	}

	public static void imprimirInformeEscritosSueltos() {
		irAlFramePorDefecto();
		
		
		Driver.EsperarDisponible(By.id("form2:selectInputDate12"));	
		WebElement fechaDesde= Driver.Instance.findElement(By.id("form2:selectInputDate12"));
		fechaDesde.clear();
		fechaDesde.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaDesde());
		
		Driver.EsperarDisponible(By.id("form2:selectInputDate21"));	
		WebElement fechaHasta= Driver.Instance.findElement(By.id("form2:selectInputDate21"));
		fechaHasta.clear();
		fechaHasta.sendKeys(GestorDeDatosDePrueba.Cargo.getFechaHasta());
		
		Driver.Instance.findElement(By.id("form2:commandLink1")).click();
		
	}

	public static boolean verificarImprimirInformeEscritosSueltos() {
		boolean blnCargoCerrado = true;
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Imprimir Listado de Escritos Sueltos desde ", 	GestorDeDatosDePrueba.Cargo.getFechaDesde());
		GestorDeDatosTestigo.agregarTextoDatosTestigo(" hasta ", GestorDeDatosDePrueba.Cargo.getFechaHasta());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Se realizó una verificación manual de esta prueba. ", " ");
		
		return blnCargoCerrado;
	}

	public static String getCUIJCreado() {
		String cUIJCreado;
		
		irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("form1:inputText1"));	
		cUIJCreado = Driver.Instance.findElement(By.id("form1:inputText1")).getText().toString();
		
		return cUIJCreado; 
	}
	
	public static String getCUIJCreadoEnBandeja() {
		String cUIJCreado;
		
		irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("inputText1"));	
		cUIJCreado = Driver.Instance.findElement(By.id("inputText1")).getText().toString();
		
		return cUIJCreado; 
	}
	
	public static void irAExpediente(String CUIJ) {
		irAlFrameBuscador();
		
		WebElement cajaDeBusqueda = Driver.Instance.findElement(By.id("inputText1"));
		cajaDeBusqueda.clear();
		cajaDeBusqueda.sendKeys(CUIJ);
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}
	
	

	public static void nuevoCambioDeRadicacionParaTransferencias(String codigoEnvio) {
		irAlFramePorDefecto();
		
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		Driver.Instance.findElement(By.id("form2:commandLink121211122")).click();

		Select wSelector = null;
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		WebElement lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
		lupaRemitirA.click();
		
		irAlPopup();
		
		WebElement codigo =  Popup.findElement(By.id("form1:inputText11"));
		codigo.clear();
		//codigo.sendKeys(GestorDeDatosDePrueba.Cargo.getEnviarA());
		codigo.sendKeys(codigoEnvio);
		
		Popup.findElement(By.id("form1:commandLink1")).click();
		
		volverDelPopup();
		
		Driver.EsperarDisponible(By.id("selectOneChoice1"));
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice1")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getSeccion());
		
		
		Driver.EsperarDisponible(By.id("selectOneChoice31"));
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getMotivo());
		
		
		Driver.EsperarDisponible(By.id("inputText3"));
		
		WebElement observaciones = Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
					
		Driver.Instance.findElement(By.id("commandButton2")).click();
	}

	public static void nuevoCambioDeRadicacionParaTransferenciasConDescargas(String codigoEnvio) {
		irAlFramePorDefecto();
		
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		Driver.Instance.findElement(By.id("form2:commandLink121211122")).click();

		Select wSelector = null;
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		WebElement lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
		lupaRemitirA.click();
		
		irAlPopupConDescarga();
		
		WebElement codigo =  Popup.findElement(By.id("form1:inputText11"));
		codigo.clear();
		//codigo.sendKeys(GestorDeDatosDePrueba.Cargo.getEnviarA());
		codigo.sendKeys(codigoEnvio);
		
		Popup.findElement(By.id("form1:commandLink1")).click();
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("selectOneChoice31"));
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getMotivo());
		
		volverDelPopup();
		Driver.EsperarDisponible(By.id("inputText3"));
		
		WebElement observaciones = Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
					
		Driver.Instance.findElement(By.id("commandButton2")).click();
	}
	
	public static void nuevaElevacionACorteLOTE(String CUIJ) {
		irAlFramePorDefecto();

		Driver.EsperarDisponible(By.id("helper1"));
		Driver.Instance.findElement(By.id("helper1")).click();
		buscarExpedientePopup(CUIJ);
		
		Driver.EsperarDisponible(By.id("selectOneChoice3"));
		Select wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
				
		Driver.EsperarDisponible(By.id("inputText3"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
	}
	
	public static void buscarExpedientePopup(String cuij) {
		irAlPopup();
		
		WebElement CUIJ =  Popup.findElement(By.id("inputText1"));
		CUIJ.clear();
		CUIJ.sendKeys(cuij);
		
		Popup.findElement(By.id("commandLink1")).click();
		
		
		volverDelPopup();
	}
	
	public static void buscarExpedientePopupConDescarga(String cuij) {
		irAlPopupConDescarga();
		
		WebElement CUIJ =  Popup.findElement(By.id("inputText1"));
		CUIJ.clear();
		CUIJ.sendKeys(cuij);
		
		Popup.findElement(By.id("commandLink1")).click();
		
		
		volverDelPopup();
	}
	
	
	

	public static void NuevoCargoCRconCUIJ(String cUIJ) {
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2"));
		btnNuevo.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoInst2());
		wSelector.selectByIndex(1);
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
		
		WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
		btnBuscarExpediente.click();
	
		irAlPopup();
		
		WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		cuij.clear();
		cuij.sendKeys(cUIJ);
		
		WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		
		wSelector = null;
		WebElement ubicacion = Driver.Instance.findElement(By.id("selectOneChoice6"));
		wSelector = new Select(ubicacion);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getUbicacionInst2());
		wSelector.selectByIndex(1);
		
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice8"));
		WebElement categoria = Driver.Instance.findElement(By.id("selectOneChoice8"));
		wSelector = new Select(categoria);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getCatMatInst2());
		wSelector.selectByIndex(1);
		
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice51"));
		WebElement materia = Driver.Instance.findElement(By.id("selectOneChoice51"));
		wSelector = new Select(materia);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getCatMatInst2());
		wSelector.selectByIndex(1);
		
		Driver.EsperarDisponible(By.id("commandButton2"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));		
		
		Driver.Instance.findElement(By.id("commandButton11")).click();
	}

	public static void NuevoCargoCRconCUIJDevoluciones(String cUIJ) {
		irAlFramePorDefecto();
		
		//WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		//btnNuevo.click();
		
		WebElement btnIniciar =  Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2"));
		btnIniciar.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoInst2());
		wSelector.selectByIndex(1);
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
		
		//WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
		//btnBuscarExpediente.click();
	
		//irAlPopup();
		
		//WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		//cuij.clear();
		//cuij.sendKeys(cUIJ);
		
		//WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		//lnkBuscar.click();
		
		//volverDelPopup();
		
		wSelector = null;
		WebElement ubicacion = Driver.Instance.findElement(By.id("selectOneChoice6"));
		wSelector = new Select(ubicacion);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getUbicacionInst2());
		wSelector.selectByIndex(1);
		/*
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice8"));
		WebElement categoria = Driver.Instance.findElement(By.id("selectOneChoice8"));
		wSelector = new Select(categoria);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getCatMatInst2());
		wSelector.selectByIndex(1);
		
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice51"));
		WebElement materia = Driver.Instance.findElement(By.id("selectOneChoice51"));
		wSelector = new Select(materia);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getCatMatInst2());
		wSelector.selectByIndex(1);
		*/
		Driver.EsperarDisponible(By.id("commandButton2"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));		
		
		Driver.Instance.findElement(By.id("commandButton11")).click();
	}
	
	public static void NuevoCargoCRconCUIJInst3(String cUIJ) {
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnNuevo.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoInst2());
		wSelector.selectByIndex(1);
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
		
		WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
		btnBuscarExpediente.click();
	
		irAlPopup();
		
		WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		cuij.clear();
		cuij.sendKeys(cUIJ);
		
		WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		
		wSelector = null;
		WebElement ubicacion = Driver.Instance.findElement(By.id("selectOneChoice6"));
		wSelector = new Select(ubicacion);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getUbicacionInst2());
		wSelector.selectByIndex(1);
		
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice8"));
		WebElement categoria = Driver.Instance.findElement(By.id("selectOneChoice8"));
		wSelector = new Select(categoria);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getMateria());
		//wSelector.selectByIndex(1);
		
		wSelector = null;
		Driver.EsperarDisponible(By.id("selectOneChoice51"));
		WebElement materia = Driver.Instance.findElement(By.id("selectOneChoice51"));
		wSelector = new Select(materia);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getMateria());
		//wSelector.selectByIndex(1);
		
		Driver.EsperarDisponible(By.id("commandButton2"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));		
		
		Driver.Instance.findElement(By.id("commandButton11")).click();
	}

	public static void nuevaDevolucionCorte(String CUIJ) {
		irAlFramePorDefecto();
		
		// Tipo
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoDevolucion());
		
		
		// CUIJ
		Driver.EsperarDisponible(By.id("helper1"));
		Driver.Instance.findElement(By.id("helper1")).click();
		buscarExpedientePopupConDescarga(CUIJ);
		
		
		// Devolver A
		Driver.EsperarDisponible(By.id("helper"));
		WebElement lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
		lupaRemitirA.click();
		
		irAlPopupConDescarga();
		//irAlPopup();
		
		WebElement codigo =  Popup.findElement(By.id("form1:inputText11"));
		codigo.clear();
		codigo.sendKeys(GestorDeDatosDePrueba.Cargo.getEnviarADevolucion());
		
		Popup.findElement(By.id("form1:commandLink1")).click();
		
		volverDelPopup();
		
		// Seccion
		Driver.EsperarDisponible(By.id("selectOneChoice1"));
		WebElement seccion = Driver.Instance.findElement(By.id("selectOneChoice1"));
		wSelector = new Select(seccion);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getSeccion());
				
		
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
		
	}

	public static void nuevaDevolucionCorteMismoOrganismo(String CUIJ) {
		irAlFramePorDefecto();
		
		// Tipo
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoDevolucion());
		
		
		// CUIJ
		Driver.EsperarDisponible(By.id("helper1"));
		Driver.Instance.findElement(By.id("helper1")).click();
		buscarExpedientePopupConDescarga(CUIJ);
		
			
		// Seccion
		Driver.EsperarDisponible(By.id("selectOneChoice1"));
		WebElement seccion = Driver.Instance.findElement(By.id("selectOneChoice1"));
		wSelector = new Select(seccion);
		wSelector.selectByVisibleText("SEC.UNICA");
				
		Driver.Instance.findElement(By.id("commandButton2")).click();
		
	}
	
	public static void imprimirInformePendientesInicio() {
		irAlFramePorDefecto();

		String Fecha = GestorDeDatosDePrueba.Cargo.getFechaDesde();
			
		Driver.EsperarDisponible(By.id("form111:selectInputDate1"));	
		WebElement FechaDesde = Driver.Instance.findElement(By.id("form111:selectInputDate1"));
		FechaDesde.clear();
		FechaDesde.sendKeys(Fecha);
		
		Driver.EsperarDisponible(By.id("form111:selectInputDate11"));	
		WebElement FechaHasta = Driver.Instance.findElement(By.id("form111:selectInputDate11"));
		FechaHasta.clear();
		FechaHasta.sendKeys(Fecha);
		
		Driver.EsperarDisponible(By.id("form111:commandLink1"));
		Driver.Instance.findElement(By.id("form111:commandLink1")).click();
	}

	
	public static void TransferenciaElevacionCorteDisintoOrganismo() {
		
		String CUIJCreado = null;
		
		// Cambio a Organismo para prueba
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
		
		
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
		
		// Recuperamos el CUIJ generado para elevar a Corte Suprema
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
		
		// Hacemos una elevación a la Corte Suprema del CUIJ generado
		PgnElevarACorteSuprema.Ir();
		PgnElevarACorteSuprema.nuevaElevacionACorteLOTE(CUIJCreado);
		
		// Esperamos un minuto opara crear el cargo
		try {
            Thread.sleep(60000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
        
		// Cerramos la pagina para cambiar a la Corte en Segundo entorno
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		
		// Abrimos segunda instancia del driver para ir al segundo entorno
		Driver.IniciarInst2();
		PgnNuevoCargo.IrDesdePrincipalInst2();
		
		
		// Cambio a Corte Suprema
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getCorte());

		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en la corte
		PgnNuevoCargo.CrearCargoCRconCUIJ(CUIJCreado);
		
		// Generamos una actuacion Auto, firmamos y protocolizamos en el expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		PgnFichaExpediente.creaYFirmaAuto();
		
		// Ir a Expedientes/Devolucion de la corte
		PgnDevolucionCorte.Ir();
		PgnDevolucionCorte.nuevaDevolucionCorte(CUIJCreado);
		
		// Cerramos instancia2
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		// Abrimos instancia3
		Driver.Iniciar();
		
		// Vamos a Menu Informes
		PgnInformePendientesInicio.IrDesdePrincipal();
		
		// Ir a  organismo final
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgadoInst3());
		
		// Imprimir Informe Expedientes Pendientes de Inicio (Verficar manualmente que se encuentra el expediente)
		PgnInformePendientesInicio.imprimirInformePendientesInicio();
		
		// Vamos a Cargos
		PgnNuevoCargo.Ir();
		
		// Esperamos un minuto para crear el cargo
		try {
		      Thread.sleep(60000);
		} catch (InterruptedException e) {
		      e.printStackTrace();
		}
		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en la inst3
		PgnNuevoCargo.CrearCargoCRconCUIJ(CUIJCreado);
		
		// Vamos al expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		
		
	}
	
	public static boolean verificaTransferenciaDistintoOrganismo() {
		boolean blnExpedienteNuevo = false;
		
		String orgExcel = GestorDeDatosDePrueba.Cargo.getCorte().toString();
			
		irAlFramePorDefecto();
		
		// Recuperamos datos para informar en Testlink
		String CUIJ =  Driver.Instance.findElement(By.id("form1:cellFormat31")).getText().toString();
		String JuzgadoInicial = GestorDeDatosDePrueba.Cargo.getJuzgado().toString();
		String Corte = orgExcel;
		String JuzgadoFinal = GestorDeDatosDePrueba.Cargo.getJuzgadoInst3().toString();
			
		// Link Actuaciones
        Driver.EsperarDisponible(By.id("form1:commandLink121211"));
        Driver.Instance.findElement(By.id("form1:commandLink121211")).click();
        
        irAlFramePorDefecto();
        
        WebElement orgPagina = Driver.Instance.findElement(By.id("form1:table1:0:outputText61"));
                
        String strOrgPagina = orgPagina.getText().toString();
        
        // El Organismo de la actuacion es un substring del campo Corte del excel
		if (orgExcel.contains(strOrgPagina))
				blnExpedienteNuevo = true;
		
		
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Transferencia del expediente "+CUIJ+" por Elevación a "
				+Corte+" desde el Organismo "+JuzgadoInicial+" y devuelto al Organismo "+JuzgadoFinal+"."
				,"Creado Auto en Corte Suprema.");
			
		
		return blnExpedienteNuevo;
	}


	public static void TransferenciaElevacionCorteMismoOrganismo() {
		
		String CUIJCreado = null;
		
		// Cambio a Organismo para prueba
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
		
		
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
		
		// Recuperamos el CUIJ generado para elevar a Corte Suprema
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
		
		// Hacemos una elevación a la Corte Suprema del CUIJ generado
		PgnElevarACorteSuprema.Ir();
		PgnElevarACorteSuprema.nuevaElevacionACorteLOTE(CUIJCreado);
		
		// Esperamos un minuto opara crear el cargo
		try {
            Thread.sleep(60000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
        
		// Cerramos la pagina para cambiar a la Corte en Segundo entorno
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		
		// Abrimos segunda instancia del driver para ir al segundo entorno
		Driver.IniciarInst2();
		PgnNuevoCargo.IrDesdePrincipalInst2();
		
		
		// Cambio a Corte Suprema
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getCorte());

		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en la corte
		PgnNuevoCargo.CrearCargoCRconCUIJ(CUIJCreado);
		
		// Generamos una actuacion Auto, firmamos y protocolizamos en el expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		PgnFichaExpediente.creaYFirmaAuto();
		
		// Ir a Expedientes/Devolucion de la corte
		PgnDevolucionCorte.Ir();
		PgnDevolucionCorte.nuevaDevolucionCorteMismoOrganismo(CUIJCreado);
		
		// Cerramos instancia2
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		// Abrimos instancia3
		Driver.Iniciar();
		
		// Vamos a Menu Informes
		PgnInformePendientesInicio.IrDesdePrincipal();
		
		// Ir a  organismo final
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgadoInst3());
		
		// Imprimir Informe Expedientes Pendientes de Inicio (Verficar manualmente que se encuentra el expediente)
		PgnInformePendientesInicio.imprimirInformePendientesInicio();
		
		// Vamos a Cargos
		PgnNuevoCargo.Ir();
		
		// Esperamos un minuto para crear el cargo
		try {
		      Thread.sleep(60000);
		} catch (InterruptedException e) {
		      e.printStackTrace();
		}
		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en la inst3
		PgnNuevoCargo.CrearCargoCRconCUIJInst3(CUIJCreado);
		
		// Vamos al expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		
		
	}

	public static boolean verificaTransferenciaMismoOrganismo() {
		boolean blnExpedienteNuevo = false;
		
		String orgExcel = GestorDeDatosDePrueba.Cargo.getCorte().toString();
			
		irAlFramePorDefecto();
		
		// Recuperamos datos para informar en Testlink
		String CUIJ =  Driver.Instance.findElement(By.id("form1:cellFormat31")).getText().toString();
		String JuzgadoInicial = GestorDeDatosDePrueba.Cargo.getJuzgado().toString();
		String Corte = orgExcel;
		String JuzgadoFinal = GestorDeDatosDePrueba.Cargo.getJuzgadoInst3().toString();
			
		// Link Actuaciones
        Driver.EsperarDisponible(By.id("form1:commandLink121211"));
        Driver.Instance.findElement(By.id("form1:commandLink121211")).click();
        
        irAlFramePorDefecto();
        
        WebElement orgPagina = Driver.Instance.findElement(By.id("form1:table1:0:outputText61"));
                
        String strOrgPagina = orgPagina.getText().toString();
        
        // El Organismo de la actuacion es un substring del campo Corte del excel
		if (orgExcel.contains(strOrgPagina))
				blnExpedienteNuevo = true;
		
		
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Transferencia del expediente "+CUIJ+" por Elevación a "
				+Corte+" desde el Organismo "+JuzgadoInicial+" y devuelto al mismo Organismo ","Creado Auto en Corte Suprema.");
			
		
		return blnExpedienteNuevo;
	}

	public static void TransferenciaAMesa() {
		
		String CUIJCreado = null;
		String codigoEnvio = null;
		
		// Cambio a Organismo para prueba
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
				
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
				
		// Recuperamos el CUIJ generado para transferir a Mesa
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
				
		// Hacemos un cambio de radicacion del expediente generado al Organismo de MESA
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarA();
		PgnCambioDeRadicacion.nuevoCambioDeRadicacionParaTransferencias(codigoEnvio);
		
		// Esperamos un minuto opara crear el cargo
		try {
		      Thread.sleep(60000);
		} catch (InterruptedException e) {
		      e.printStackTrace();
		}
				
		// Abrimmos aplicacion MESA
		MESA_Driver.Iniciar();
		MESA_PgnNuevoCargo.irDesdePrincipal();
		
				   
		// Creamos un cargo con relacion al CUIJ creado 
		MESA_PgnNuevoCargo.MESA_CrearCargoCR(CUIJCreado);
			
		// Vamos al CUIJ en MESA
		MESA_GestorDeCargos.MESA_irAExpediente(CUIJCreado);
			
		
	}

	public static void TransferenciaCambioRadicacionEntreSedes() {
		
		String CUIJCreado = null;
		String codigoEnvio = null;
		
		// Cambio a Organismo para prueba
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
		
		
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
		
		// Recuperamos el CUIJ generado para enviar al segundo juzgado
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
		
			
		// Hacemos un cambio de radicacion del expediente generado al segundo juzgado
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarA();
		PgnCambioDeRadicacion.nuevoCambioDeRadicacionParaTransferencias(codigoEnvio);
		
		// Esperamos un minuto opara crear el cargo
		try {
            Thread.sleep(60000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
        
		// Cerramos la pagina para cambiar a la Corte en Segundo entorno
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		
		// Abrimos segunda instancia del driver para ir al segundo entorno
		Driver.IniciarInst2();
		//Cambio para entrar por bandeja
		//PgnNuevoCargo.IrDesdePrincipalInst2();
		PgnNuevoCargo.IrDesdePrincipalInst2Bandeja();
		
		//Busqueda del boton iniciar
		irAlFramePorDefecto();
		Driver.Instance.findElement(By.cssSelector("a[id='form2:table1:menuBar2:commandButton2']")).click();
		
		PgnNuevoCargo.CrearExpedienteEnBandeja();
		
		// Cambio a Segundo Juzgado (usamos el campo Corte por comodidad)
		//GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getCorte());

		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en el segundo juzgado
		//PgnNuevoCargo.CrearCargoCRconCUIJ(CUIJCreado);
		
		//Creamos un cargo atravez de la bandeja de entrada
		//PgnCargosBandeja.Ir();
		//irAlFramePorDefecto();
		//Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
		
		// Recuperamos el CUIJ generado para crear una actuacion
		//CUIJCreado = PgnNuevoCargo.getCUIJCreadoEnBandeja();
				
		// Hacemos un cambio de radicacion del expediente generado al segundo juzgado
		GestorDeCargos.irAExpediente(CUIJCreado);
				
		// Generamos una actuacion Auto, firmamos y protocolizamos en el expediente
		//GestorDeCargos.irAExpediente(CUIJCreado);
		PgnFichaExpediente.creaYFirmaAuto();
	
			
		// ---- //
		// Hacemos un cambio de radicacion del expediente generado al juzgado origen
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarADevolucion();
		PgnCambioDeRadicacion.nuevoCambioDeRadicacionParaTransferenciasConDescargas(codigoEnvio);
				
		// Cerramos instancia2
		Driver.CerrarSesion();
		Driver.Cerrar();
		
		// Abrimos instancia3
		Driver.Iniciar();
		
		// Vamos a Menu Informes
		PgnInformePendientesInicio.IrDesdePrincipal();
		
		// Ir a  organismo final
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgadoInst3());
		
		// Imprimir Informe Expedientes Pendientes de Inicio (Verficar manualmente que se encuentra el expediente)
		PgnInformePendientesInicio.imprimirInformePendientesInicio();
		
		// Vamos a Cargos
		PgnNuevoCargo.Ir();
		
		// Esperamos un minuto para crear el cargo
		try {
		      Thread.sleep(60000);
		} catch (InterruptedException e) {
		      e.printStackTrace();
		}
		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en la inst3
		//PgnNuevoCargo.CrearCargoCRconCUIJ(CUIJCreado);
		
		PgnCargosBandeja.Ir();
		irAlFramePorDefecto();
		Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
		
		// Vamos al expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		
	}

	public static boolean verificaTransferenciaCambioRadicacionEntreSedes() {
		boolean blnExpedienteNuevo = false;
		
		String orgExcel = GestorDeDatosDePrueba.Cargo.getCorte().toString();
			
		irAlFramePorDefecto();
		
		// Recuperamos datos para informar en Testlink
		String CUIJ =  Driver.Instance.findElement(By.id("form1:cellFormat31")).getText().toString();
		String JuzgadoInicial = GestorDeDatosDePrueba.Cargo.getJuzgado().toString();
		String Corte = orgExcel;
		String JuzgadoFinal = GestorDeDatosDePrueba.Cargo.getJuzgadoInst3().toString();
			
		// Link Actuaciones
        Driver.EsperarDisponible(By.id("form1:commandLink121211"));
        Driver.Instance.findElement(By.id("form1:commandLink121211")).click();
        
        irAlFramePorDefecto();
        
        WebElement orgPagina = Driver.Instance.findElement(By.id("form1:table1:0:outputText61"));
                
        String strOrgPagina = orgPagina.getText().toString();
        
        // El Organismo de la actuacion es un substring del campo Corte del excel
		if (orgExcel.contains(strOrgPagina))
				blnExpedienteNuevo = true;
		
		
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Transferencia del expediente "+CUIJ+" por cambio de radicacion a "
				+Corte+" desde el Organismo "+JuzgadoInicial+" y devuelto al mismo Organismo ","Creado Auto en "+Corte);
			
		
		return blnExpedienteNuevo;
	}

	public static void CargoTrasTransferenciaCambioRadicacion() {
		String CUIJCreado = null;
		String codigoEnvio = null;
		
		// Cambio a Organismo para prueba
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
		
		
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
		
		// Recuperamos el CUIJ generado para enviar al segundo juzgado
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
		
		// Hacemos un cambio de radicacion del expediente generado al segundo juzgado
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarA();
		PgnCambioDeRadicacion.nuevoCambioDeRadicacionParaTransferencias(codigoEnvio);
		
		// Esperamos un minuto opara crear el cargo
		try {
            Thread.sleep(60000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en el segundo juzgado
		PgnNuevoCargo.Ir();
		PgnNuevoCargo.CrearCargoCRconCUIJMismoOrganismo(CUIJCreado);
		
		// Vamos al expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
	}

	public static boolean verificaCargoTrasTransferenciaCambioRadicacion() {
		boolean blnExpedienteNuevo = false;
		
		String literal = "* * *Tiene Escritos SUELTOS* * *";
			
		irAlFramePorDefecto();
	        
        WebElement literalPagina = Driver.Instance.findElement(By.id("form1:outputFormatted32"));
               
        // La ficha del expedeinte contiene el literal de Escritos Sueltos
		if (literalPagina.getText().contains(literal))
				blnExpedienteNuevo = true;
		
		String CUIJ =  Driver.Instance.findElement(By.id("form1:cellFormat31")).getText().toString();
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Creado cargo con relacion en expediente "+CUIJ+" "
				+ "que tiene un cambio de radicación. El cargo aparece correctamente como Escrito suelto",".");
			
		
		return blnExpedienteNuevo;
	}

	
	public static void CrearCargoCRconCUIJMismoOrganismo(String cUIJCreado) {
		irAlFramePorDefecto();
		
		WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
		btnNuevo.click();
		
		WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
		presentante.clear();
		presentante.sendKeys(GestorDeDatosDePrueba.Cargo.getPresentante());
	
		WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
		solicita.clear();
		solicita.sendKeys(GestorDeDatosDePrueba.Cargo.getSolicita());
		
		Select wSelector = null;
		WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
		wSelector = new Select(tipo);
		//wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoInst2());
		wSelector.selectByIndex(1);
					
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
		btnSiguiente.click();
		
		WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
		btnBuscarExpediente.click();
	
		irAlPopup();
		
		WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
		cuij.clear();
		cuij.sendKeys(cUIJCreado);
		
		WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		
		Driver.EsperarDisponible(By.id("commandButton2"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		Driver.EsperarDisponible(By.id("commandButton11"));		
		
		Driver.Instance.findElement(By.id("commandButton11")).click();
		
	}

	// Devoluciones
	public static void devolucionPaseDosOrganismos() {
		String CUIJCreado = null;
		String codigoEnvio = null;
		
		// Cambio a Organismo para prueba
		//GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgado());
		
		
		// Genero un nuevo expediente mediante un cargo
		PgnNuevoCargo.CrearExpedienteNuevo();
		
		// Recuperamos el CUIJ generado para enviar al segundo juzgado
		CUIJCreado = PgnNuevoCargo.getCUIJCreado();
		
		// Hacemos un pase con control del expediente generado al segundo juzgado
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarA();
		//PgnCambioDeRadicacion.nuevoCambioDeRadicacionParaTransferencias(codigoEnvio);
		PgnPaseAOtroOrganismo.nuevoPaseParaDevoluciones(codigoEnvio);
		
		// Esperamos un minuto opara crear el cargo
		try {
            Thread.sleep(60000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
        
		
		
		// Cambio a Segundo Juzgado (usamos el campo Corte por comodidad)
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getCorte());

		
		// Creamos un cargo con relacion al CUIJ creado para recibirlo en el segundo juzgado
		//PgnNuevoCargo.Ir();
		PgnCargosBandeja.Ir();
		PgnNuevoCargo.CrearCargoCRconCUIJDevoluciones(CUIJCreado);
		
		
			
		// Hacemos un pase con controla un organismo no implementado (999999)
		GestorDeCargos.irAExpediente(CUIJCreado);
		codigoEnvio = GestorDeDatosDePrueba.Cargo.getEnviarADevolucion();
		PgnPaseAOtroOrganismo.nuevoPaseParaDevoluciones(codigoEnvio);
				
		// Realizamos la devolucion del expediente
		GestorDeCargos.irAExpediente(CUIJCreado);
		irAlFramePorDefecto();
		
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getTipoDevolucion());

		Driver.EsperarDisponible(By.id("inputText3"));

		observaciones = Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
								
		Driver.Instance.findElement(By.id("commandButton2")).click();
				
		// Vamos a Juzgado original (CyC1) a las radicaciones del expediente
		GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Cargo.getJuzgadoInst3());
		GestorDeCargos.irAExpediente(CUIJCreado);
		
		// Limk Radicaciones
		irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("form1:commandLink121211112"));
		Driver.Instance.findElement(By.id("form1:commandLink121211112")).click();
		
		
	}

	public static boolean verificaDevolucionPaseDosOrganismos() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		// Verificamos que la radicacion esta en el juzagado original y además no esta ubicado en el
		if ((Driver.Instance.findElement(By.className("x9c")).getText().contains("El expediente no se encuentra ingresado en el organismo.")) &&
			(Driver.Instance.findElement(By.id("form2:table1:0:outputText5")).getText().contains("Juzg. 1ra. Inst. Civil y Comercial 1ra. Nom."))
			)
		{
			blnVerificado = true;
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control a dos organismos ", "OK");
		} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control a dos organismos ", "NO OK");
		
		return blnVerificado;
	}

	public static void nuevoPaseParaDevoluciones(String codigoEnvio) {
		
		irAlFramePorDefecto();
	
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		Driver.Instance.findElement(By.id("form2:commandLink12121132")).click();

		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getObservaciones()); // usamos Observaciones para el Tipo
		
		lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
		lupaEnviarA.click();
		
		irAlPopup();
		
		try {	
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			
		}  catch(NoSuchElementException e){
			System.out.println(e.getMessage());
			
			volverDelPopup();
			irAlPopup();
			
			codigo =  Popup.findElement(By.id("form1:inputText11"));
		}
		codigo.clear();
		codigo.sendKeys(codigoEnvio);
		
		lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
		
		//Driver.EsperarDisponible(By.id("selectInputDate1"));
		//fecha = Driver.Instance.findElement(By.id("selectInputDate1"));
		//fecha.clear();
		//fecha.sendKeys(GestorDeDatosDePrueba.Cargo.getFecha());

		
		Driver.EsperarDisponible(By.id("inputText3"));
		observaciones = Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Cargo.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
		
	}

	
	public static void adjuntaCargo() {
		irAlFramePorDefecto();
		/*
		for (int j=9; j>=0; j--) { 
			
			String aidi = "form2:table1:"+j+":tableSelect";
			
			for (int i=1; i<51; i++) {
		
				// Selecciona desde el ultimo cargo de la pagina hasta el primero
				//irAlFramePorDefecto();
				//List<WebElement> rows = Driver.Instance.findElements(By.cssSelector("table.x2f>tbody>tr"));	
				Driver.Instance.findElement(By.id(aidi)).click();
				//Driver.Instance.findElement(By.id("form2:table1:9:tableSelect")).click();
				//Driver.Instance.findElement(By.id("form2:table1:0:commandLink2")).click();
				//Driver.EsperarDisponible(By.xpath("//*[@id='form2:table1:9:tableSelect']"));
				//WebElement boton = Driver.Instance.findElement(By.xpath("//*[@id='form2:table1:9:tableSelect']"));
				//boton.click();
		*/		
				//Adjuntar ( al primer cargo que encuentra, por defecto)
				Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandLink3")).click();
			
				//Descripcion
				WebElement desc =  Driver.Instance.findElement(By.id("inputText1"));
				desc.clear();
			//	String stri = String.valueOf(i);
			//	desc.sendKeys(stri);
				desc.sendKeys("PRUEBA ADJUNTAR ARCHIVO - DESDE DESARROLLO");
			
				//Observaciones
				WebElement obs =  Driver.Instance.findElement(By.id("inputText2"));
				obs.clear();
				//obs.sendKeys(stri);
				obs.sendKeys("PRUEBA ADJUNTAR ARCHIVO - DESDE DESARROLLO");
			
				//Seleccionar archivo
				Driver.Instance.findElement(By.id("inputFile2")).sendKeys("C:\\Actuacion.pdf");
				//Driver.Instance.findElement(By.id("inputFile2")).sendKeys("C:\\archivogrande.doc");
			
				// Guardar
				Driver.Instance.findElement(By.id("menuBar11:commandButton11")).click();
			}


}
