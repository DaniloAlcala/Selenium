package com.indra.pjsf.regresion;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.Test;
//import org.junit.Ignore;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.regresion.RegresionTestBase.msjResultado;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.PgnMovimientoInterno;
import com.indra.pjsf.tf.workflows.RegresionExpedientes;
import com.indra.pjsf.tf.workflows.RegresionExpedientes.campo;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class ExpedientesLotesMovimientoInterno_NF extends RegresionTestBase {

	@Test 
	public void A_GE_003_201_Mov_Interno_Lote_Expediente_Obligatorio(){
		codigo = "GE-003.201";
		prepararDatos(entidades.Expedientes);
	
		//PgnMovimientoInterno.Ir();
		PgnMovimientoInterno.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnMovimientoInterno.movInternoLoteExpObligatorio(); //

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnMovimientoInterno.verificarMovInternoLoteExpObligatorio());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void A_GE_003_202_Mov_Interno_Lote_Pasar_A_Obligatorio(){
		codigo = "GE-003.202";
		prepararDatos(entidades.Expedientes);
	
		PgnMovimientoInterno.Ir();
		//PgnMovimientoInterno.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnMovimientoInterno.movInternoLotePasarAObligatorio(); //

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnMovimientoInterno.verificarDatoIndividual(campo.PasarExpedientesA.toString(), 
							RegresionExpedientes.faltaValor));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_GE_003_203_Mov_Interno_Lote_Siguiente_Expediente_Obligatorio(){
		codigo = "GE-003.203";
		prepararDatos(entidades.Expedientes);
	
		PgnMovimientoInterno.Ir();
		//PgnMovimientoInterno.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnMovimientoInterno.movInternoLoteSiguienteExpedienteObligatorio(); //

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnMovimientoInterno.verificarMovInternoLoteExpObligatorio());
			resultado = true;
			// Si la prueba está OK se creó un movimiento para el CUIJ de la prueba, lo anulamos
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());

		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_GE_003_204_Mov_Interno_Lote_Codbarras_Incompatible(){
		codigo = "GE-003.204";
		prepararDatos(entidades.Expedientes);
	
		PgnMovimientoInterno.Ir();
		//PgnMovimientoInterno.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnMovimientoInterno.movInternoLoteCodbarrasIncompatible(); //

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnMovimientoInterno.verificarDatoIndividual(campo.CodigoBarras.toString(), 
							RegresionExpedientes.valorNoNumerico));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

}
