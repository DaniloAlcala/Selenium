package com.indra.pjsf.pruebas;

import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.pruebas.TestBase.msjResultado;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnBusquedaMenores;
import com.indra.pjsf.tf.paginas.PgnBusquedaNotificaciones;
import com.indra.pjsf.tf.paginas.PgnIngresoExpedienteMenores;
import com.indra.pjsf.tf.paginas.PgnLegajoTutelar;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class MenoresTest extends TestBase {

	@Test
	public void A_GE_007_001_Crear_Parte_Preventivo(){
		codigo = "GE-007.001";
		prepararDatos(entidades.Menores);
						
		PgnIngresoExpedienteMenores.irDesdePrincipal();
		PgnIngresoExpedienteMenores.ingresarPartePreventivo();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnIngresoExpedienteMenores.verificarIngresoPartePreventivo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	
	@Test
	public void A_GE_007_002_Pase_PP_A_Expediente(){
		codigo = "GE-007.002";
		prepararDatos(entidades.Menores);
						
		PgnIngresoExpedienteMenores.irExp();
		//PgnIngresoExpedienteMenores.irDesdePrincipalExp();
		PgnIngresoExpedienteMenores.pasePPAExpediente();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnIngresoExpedienteMenores.verificarPasePPAExpediente());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	// Se cambia el estado del menor de EN TRAMITE a CON SEGUIMIENTO en el expediente generado en la prueba anterior
	@Test
	public void A_GE_007_003_Cambio_Estado_Menor_En_Expediente(){
		codigo = "GE-007.003";
		prepararDatos(entidades.Menores);
						
		PgnIngresoExpedienteMenores.irExp();
		//PgnIngresoExpedienteMenores.irDesdePrincipalExp();
		PgnIngresoExpedienteMenores.cambioEstadoMenorEnExpediente();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnIngresoExpedienteMenores.verificarCambioEstadoMenorEnExpediente());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	
	// Es una prueba manual, para agilizar la ejecución se guarda el archivo pdf y se marca como PASADO en Testlink y Excel.
	// De manera manual se debe verificar que el PDF es correcto, si no lo fuera modificar la ejecución a NOOK en Testlink y Excel.
	
	@Test
	public void A_GE_007_004_Imprimir_Ficha_de_Antecedentes(){
		codigo = "GE-007.004";
		prepararDatos(entidades.Menores);
						
		PgnBusquedaMenores.ir();
		//PgnBusquedaMenores.irDesdePrincipal();
		PgnBusquedaMenores.imprimirFichaAntecedentes();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnBusquedaMenores.verificarImprimirFichaAntecedentes());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	
	// Se crea un Legajo Tutelar para un menor. El menor no debe tener ninguno anteriormente.
	@Test
	public void A_GE_007_005_Crear_Legajo_Tutelar(){
		codigo = "GE-007.005";
		prepararDatos(entidades.Menores);
						
		//PgnLegajoTutelar.ir();
		PgnLegajoTutelar.irDesdePrincipal();
		PgnLegajoTutelar.crearLegajoTutelar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnLegajoTutelar.verificarCrearLegajoTutelar());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	// Se crea, firma y legaliza un seguimiento social en el legajo creado anteriormente.
	// El menor debe tener unicamente un expediente para que el helper de expediente devuelva ese por defecto
	@Test
	public void A_GE_007_006_Crear_Seguimiento_Social(){
		codigo = "GE-007.006";
		prepararDatos(entidades.Menores);
						
		PgnLegajoTutelar.ir();
		//PgnLegajoTutelar.irDesdePrincipal();
		PgnLegajoTutelar.crearSeguimientoSocial();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnLegajoTutelar.verificarCrearSeguimientoSocial());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	
	@Test
	public void A_GE_007_007_Notificar_Actuacion(){
		codigo = "GE-007.007";
		prepararDatos(entidades.Menores);
						
		PgnLegajoTutelar.ir();
		//PgnLegajoTutelar.irDesdePrincipal();
		PgnLegajoTutelar.notificarActuacion();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnBusquedaNotificaciones.verificarNotificarActuacion());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	
	
	@Test
	public void A_GE_007_008_Eliminar_Legajo_Tutelar(){
		codigo = "GE-007.008";
		prepararDatos(entidades.Menores);
						
		PgnLegajoTutelar.ir();
		//PgnLegajoTutelar.irDesdePrincipal();
		PgnLegajoTutelar.eliminarLegajoTutelar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnLegajoTutelar.verificarEliminarLegajoTutelar());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

}
