package com.indra.pjsf.pruebas;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnDependencias;
import com.indra.pjsf.tf.paginas.PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.PgnRelaciones;

import org.junit.Test;
//import org.junit.Ignore;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class ExpedientesABMTest extends TestBase {
	
	@Test
	public void G_GE_003_014_CrearDependencia(){
		
		codigo = "GE-003.014";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrDesdePrincipal(); 
		PgnDependencias.crearDependencia();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnDependencias.verificarCreacionDependencia());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void G_GE_003_015_ModificarDependencia(){
		
		codigo = "GE-003.015";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrAExpediente();
		//PgnFichaExpediente.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnDependencias.modificarDependencia();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnDependencias.verificarModificacionDependencia());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void G_GE_003_016_EliminarDependencia(){
		
		codigo = "GE-003.016";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrAExpediente();
		//PgnFichaExpediente.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnDependencias.eliminarDependencia();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnDependencias.verificarEliminacionDependencia());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void G_GE_003_017_CrearRelacion(){
		
		codigo = "GE-003.017";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrAExpediente();
		//PgnFichaExpediente.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnRelaciones.crearRelacion();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnRelaciones.verificarCreacionRelacion());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void G_GE_003_018_ModificarRelacion(){
		
		codigo = "GE-003.018";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrAExpediente();
		//PgnFichaExpediente.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnRelaciones.modificarRelacion();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnRelaciones.verificarModificacionRelacion());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void G_GE_003_019_EliminarRelacion(){
		
		codigo = "GE-003.019";
		prepararDatos(entidades.Expedientes); 
		
		PgnFichaExpediente.IrAExpediente();
		//PgnFichaExpediente.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnRelaciones.eliminarRelacion();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnRelaciones.verificarEliminacionRelacion());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}	
}
