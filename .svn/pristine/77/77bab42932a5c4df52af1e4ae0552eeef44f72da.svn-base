package com.indra.pjsf.tf.paginas;

import com.indra.pjsf.tf.navegacion.GE_Menu_Cargos;
import com.indra.pjsf.tf.navegacion.MenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE;
import com.indra.pjsf.tf.navegacion.GE_Menu_Cargos.OpcionesGEMenuCargos;
import com.indra.pjsf.tf.navegacion.MenuPrincipal.OpcionesMenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE.OpcionesMenuSGE;
import com.indra.pjsf.tf.workflows.GestorDeCargos;
import com.indra.pjsf.tf.workflows.RegresionCargos;

public class PgnNuevoCargo {
	
	
	public static void Ir() {
			
			MenuSGE.Abrir(OpcionesMenuSGE.CARGOS);
			GE_Menu_Cargos.Abrir(OpcionesGEMenuCargos.LIBRO_DE_CARGOS_ESCRITOS);	
	}

	public static void IrDesdePrincipal()
	{
		MenuPrincipal.Abrir(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.CARGOS);
		GE_Menu_Cargos.Abrir(OpcionesGEMenuCargos.LIBRO_DE_CARGOS_ESCRITOS);
		
	}
	
	public static void CrearCargoSR() {
		GestorDeCargos.NuevoCargoSR();
	}
	
	public static void CrearCargoCR() {
		GestorDeCargos.NuevoCargoCR();
	}

	public static void CrearExpedienteNuevo() {
		GestorDeCargos.CrearExpedienteNuevo();
	}

	public static void ModificarCargo() {
		GestorDeCargos.ModificarCargo();
	}
	
	public static void eliminarCargo() {
		GestorDeCargos.eliminarCargo();
		
	}
	
	public static void CrearExpedienteEnBandeja() {
		GestorDeCargos.CrearExpedienteEnBandeja();
	}


	public static boolean verificarCargoCreado() {
		return GestorDeCargos.verificarCargoCreado();
	}
	
	public static boolean verificarExpedienteNuevoCreado() {
		return GestorDeCargos.verificarExpedienteNuevoCreado();

	}

	public static boolean verificaCargoModificado() {
		return GestorDeCargos.verificarCargoModificado();
	}

	
	public static boolean verificarCargoEliminado() {
		return GestorDeCargos.verificarCargoEliminado();
	}

	public static void CrearCargoSRSinGrabar() {
		/*Navegación de Nuevo Cargo Sin Relación*/
		RegresionCargos.nuevoCargoValidacionesSR();
	}
	
	
	public static void CrearCargoCRSinGrabar() {
		/*Navegación de Nuevo Cargo Con Relación*/
		RegresionCargos.nuevoCargoValidacionesCR();
	}
	
	public static void linkNuevoCargo() {
		/*Click en el link de Nuevo para cargos*/
		RegresionCargos.linkNuevoCargo();
	}
	
	public static void CrearExpedienteNuevoSinGrabarParcial() {
		/*Navegación de Nuevo Cargo Expediente Nuevo hasta Actor*/
		RegresionCargos.nuevoCargoValidacionesExpNuevoParcial();
	}
	
	public static void CrearExpedienteNuevoSinGrabarActor() {
		/*Navegación de Nuevo Cargo Expediente Nuevo hasta Actor*/
		RegresionCargos.nuevoCargoValidacionesExpNuevoActor();
	}
	
	public static void CrearExpedienteNuevoSinGrabar() {
		/*Navegación de Nuevo Cargo Expediente Nuevo con datos del Actor*/
		RegresionCargos.nuevoCargoValidacionesExpNuevo();
	}

	public static boolean verificarDatoIndividual(String campo, String mensaje) {
		return RegresionCargos.verificarDatoIndividual(campo, mensaje);
	}


	public static boolean verificarCrearCargoHoraPosterior() {
		return RegresionCargos.verificarCrearCargoHoraPosterior();
	}

	public static boolean verificarCrearCargoHoraAnterior() {
		return RegresionCargos.verificarCrearCargoHoraAnterior();
	}

	
	public static boolean verificarModificarCargoObservacionesObligatorio() {
		return RegresionCargos.verificaModificarCargoObservacionesObligatorio();
	}
	
	public static void eliminarCargoObservacionesObligatorio() {
		RegresionCargos.eliminarCargoObservacionesObligatorio();
		
	}

	public static boolean verificarEliminarCargoObservacionesObligatorio() {
		return RegresionCargos.verificaEliminarCargoObservacionesObligatorio();
	}
	
	public static String getCUIJCreado() {
		return GestorDeCargos.getCUIJCreado();
	}
	
	public static String getCUIJCreadoEnBandeja() {
		return GestorDeCargos.getCUIJCreadoEnBandeja();
	}
	
	// Desde aqui intento generar codigo para abrir varios entornos en la misma prueba con un mismo Driver
	public static void IrDesdePrincipalInst2()
	{
		MenuPrincipal.AbrirInst2(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		//MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.CARGOS);
		GE_Menu_Cargos.Abrir(OpcionesGEMenuCargos.LIBRO_DE_CARGOS_ESCRITOS);
		
		
	}
	
	public static void IrDesdePrincipalInst2Bandeja()
	{
		MenuPrincipal.AbrirInst2(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		//MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.CARGOS);
		GE_Menu_Cargos.Abrir(OpcionesGEMenuCargos.BANDEJA_ENTRADA);	
		
	}
	
	public static void CrearCargoCRconCUIJ(String CUIJ) {
		GestorDeCargos.NuevoCargoCRconCUIJ(CUIJ);
	}
	
	public static void CrearCargoCRconCUIJBandeja(String CUIJ) {
		GestorDeCargos.NuevoCargoCRconCUIJ(CUIJ);
	}
	
	public static void CrearCargoCRconCUIJDevoluciones(String CUIJ) {
		GestorDeCargos.NuevoCargoCRconCUIJDevoluciones(CUIJ);
	}

	public static void TransferenciaElevacionCorteDisintoOrganismo() {
		GestorDeCargos.TransferenciaElevacionCorteDisintoOrganismo();
		
	}
	
	public static boolean verificaTransferenciaDistintoOrganismo() {
		return GestorDeCargos.verificaTransferenciaDistintoOrganismo();
	}

	public static void TransferenciaElevacionCorteMismoOrganismo() {
		GestorDeCargos.TransferenciaElevacionCorteMismoOrganismo();
	}

	public static boolean verificaTransferenciaMismoOrganismo() {
		return GestorDeCargos.verificaTransferenciaMismoOrganismo();
	}

	public static void CrearCargoCRconCUIJInst3(String CUIJ) {
		GestorDeCargos.NuevoCargoCRconCUIJInst3(CUIJ);
	}

	public static void TransferenciaAMesa() {
		GestorDeCargos.TransferenciaAMesa();
	}

	public static void TransferenciaCambioRadicacionEntreSedes() {
		GestorDeCargos.TransferenciaCambioRadicacionEntreSedes();
	}

	public static boolean verificaTransferenciaCambioRadicacionEntreSedes() {
		return GestorDeCargos.verificaTransferenciaCambioRadicacionEntreSedes();
	}

	public static void CargoTrasTransferenciaCambioRadicacion() {
		GestorDeCargos.CargoTrasTransferenciaCambioRadicacion();
	}

	public static boolean verificaCargoTrasTransferenciaCambioRadicacion() {
		return GestorDeCargos.verificaCargoTrasTransferenciaCambioRadicacion();
	}

	public static void CrearCargoCRconCUIJMismoOrganismo(String cUIJCreado) {
		GestorDeCargos.CrearCargoCRconCUIJMismoOrganismo(cUIJCreado);
	}
	
	public static void devolucionPaseDosOrganismos() {
		GestorDeCargos.devolucionPaseDosOrganismos();
		
	}

	public static boolean verificaDevolucionPaseDosOrganismos() {
		return GestorDeCargos.verificaDevolucionPaseDosOrganismos();
	}

}
