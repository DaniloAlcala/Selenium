package com.indra.pjsf.pruebas;



import org.junit.Test;
import org.junit.Ignore;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.tf.paginas.PgnNuevoCargo;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnExpRegistradosMEU;
import com.indra.pjsf.tf.paginas.PgnInformeControlCargos;
import com.indra.pjsf.tf.paginas.PgnInformeEscritosSueltos;
import com.indra.pjsf.tf.paginas.PgnListaDeCargos;
import com.indra.pjsf.tf.paginas.PgnAperturaCierreCargos;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class CargosTests extends TestBase {

	@Test
	public void A_GE_002_001_Abrir_Libro_Cargos(){
		codigo = "GE-002.001";
		prepararDatos(entidades.Cargo);
						
		PgnAperturaCierreCargos.irDesdePrincipal();
		PgnAperturaCierreCargos.abrirLibroCargos();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarCargoAbierto());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Ignore
	public void G_GE_002_002_Cerrar_Libro_Cargos(){
		codigo = "GE-002.002";
		prepararDatos(entidades.Cargo);
		
		PgnAperturaCierreCargos.ir();
		//PgnAperturaCierreCargos.irDesdePrincipal(); //Tempo por prueba unitaria
		PgnAperturaCierreCargos.cerrarLibroCargos();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnAperturaCierreCargos.verificarCargoCerrado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
			
	}

	@Test
	public void D_GE_002_003_Crear_Cargo_SR(){
		codigo = "GE-002.003";
		prepararDatos(entidades.Cargo);
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); //Tempo por prueba unitaria
		PgnNuevoCargo.CrearCargoSR();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificarCargoCreado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
			
	}
 
	@Test
	public void D_GE_002_004_Crear_Cargo_CR(){
		codigo = "GE-002.004";
		prepararDatos(entidades.Cargo);
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.CrearCargoCR();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificarCargoCreado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void D_GE_002_006_Consultar_Cargos_PF(){
		codigo = "GE-002.006";
		prepararDatos(entidades.Cargo);
		
		PgnListaDeCargos.Ir();
		//PgnListaDeCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnListaDeCargos.ConsultarCargoPF();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnListaDeCargos.verificarListadoOK());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void D_GE_002_007_Consultar_Cargos_PFYE(){
		codigo = "GE-002.007";
		prepararDatos(entidades.Cargo);
		
		PgnListaDeCargos.Ir();
		//PgnListaDeCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnListaDeCargos.ConsultarCargoPFYE();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnListaDeCargos.verificarListadoOK());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
			
	@Test
	public void D_GE_002_005_Crear_Expediente_Nuevo(){
		codigo = "GE-002.005";
		prepararDatos(entidades.Cargo);
				
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.CrearExpedienteNuevo();
				
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificarExpedienteNuevoCreado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
    	
	@Test
    public void D_GE_002_010_Iniciar_Expediente_MEU() {
		codigo = "GE-002.010";
		prepararDatos(entidades.Cargo);

		
		PgnExpRegistradosMEU.Ir();
		//PgnExpRegistradosMEU.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnExpRegistradosMEU.Iniciar_Expediente_MEU();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnExpRegistradosMEU.verificarExpedienteMEUIniciado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
    }
		
	@Test
	public void D_GE_002_011_Modificar_Cargos() {
		codigo = "GE-002.011";
		prepararDatos(entidades.Cargo);

		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.ModificarCargo();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificaCargoModificado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	} 
	
	@Test
	public void D_GE_002_012_Eliminar_Cargos() { // Caso de Prueba DEPENDIENTE DE GE-002.003
		codigo = "GE-002.012";
		prepararDatos(entidades.Cargo);

		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.eliminarCargo();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificarCargoEliminado());
			resultado = true;
						
		}  catch(Exception e){
			resultado = false;
		} 
	
	}
			    
	@Ignore
	public void G_GE_002_008_Informe_Control_Cargos() { 
		codigo = "GE-002.008";
		prepararDatos(entidades.Cargo);

		PgnInformeControlCargos.Ir();
		//PgnInformeControlCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnInformeControlCargos.imprimirControlCargos();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnInformeControlCargos.verificarImprimirControlCargos());
			resultado = true;
						
		}  catch(Exception e){
			resultado = false;
		} 
	
	}
	
	@Ignore
	public void G_GE_002_009_Informe_Cargos_Escritos_Sueltos() { 
		codigo = "GE-002.009";
		prepararDatos(entidades.Cargo);

		PgnInformeEscritosSueltos.Ir();
		//PgnInformeControlCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnInformeEscritosSueltos.imprimirInformeEscritosSueltos();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnInformeEscritosSueltos.verificarImprimirInformeEscritosSueltos());
			resultado = true;
						
		}  catch(Exception e){
			resultado = false;
		} 
	
	}
}
