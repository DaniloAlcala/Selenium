package com.indra.pjsf.tf.paginas;

import com.indra.pjsf.tf.navegacion.GE_Menu_Expedientes;
import com.indra.pjsf.tf.navegacion.MenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE;
import com.indra.pjsf.tf.navegacion.GE_Menu_Expedientes.OpcionesGEMenuExpedientes;
import com.indra.pjsf.tf.navegacion.MenuPrincipal.OpcionesMenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE.OpcionesMenuSGE;
import com.indra.pjsf.tf.workflows.GestorDeExpedientes;
import com.indra.pjsf.tf.workflows.RegresionExpedientes;

public class PgnPrestamoProfesional {

	public static void Ir() {
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.PRESTAMO_PROFESIONAL);	
	
	}

	public static void IrDesdePrincipal() {
		MenuPrincipal.Abrir(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.PRESTAMO_PROFESIONAL);	
		
	}

	public static void IrNueva() {
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.PRESTAMO_PROFESIONAL_LOTE);	
	
	}

	public static void IrDesdePrincipalNueva() {
		MenuPrincipal.Abrir(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.PRESTAMO_PROFESIONAL_LOTE);	
		
	}
	public static void nuevoPrestamoProfesionalLOTE() {
		GestorDeExpedientes.nuevoPrestamoProfesionalLOTE();
		
	}

	public static boolean verificarPrestamoProfesional() {
		return GestorDeExpedientes.verificarPrestamoRealizado();

	}

	public static void nuevoPrestamoProfesional() {
		GestorDeExpedientes.nuevoPrestamoProfesional();
		
	}

	public static void prestamoLoteExpedienteObligatorio() {
		RegresionExpedientes.prestamoLoteExpedienteObligatorio();
		
	}

	public static void prestamoLoteProfesionalObligatorio() {
		RegresionExpedientes.prestamoLoteProfesionalObligatorio();
	}

	public static boolean verificarPrestamoLoteProfesionalObligatorio() {
		return RegresionExpedientes.verificarPrestamoLoteProfesionalObligatorio();
	}

	public static void prestamoProfesionalLoteSiguienteObligatorio() {
		RegresionExpedientes.prestamoProfesionalLoteSiguienteObligatorio();
	}

	public static void prestamoProfesionalLoteCodbarrasIncompatible() {
		RegresionExpedientes.prestamoProfesionalLoteCodbarrasIncompatible();
	}

	public static void prestamoProfesionalLoteFojasIncompatible() {
		RegresionExpedientes.prestamoProfesionalLoteFojasIncompatible();
		
	}

	public static boolean verificarPrestamoProfesionalLoteFojasIncompatible() {
		return RegresionExpedientes.verificarPrestamoProfesionalLoteFojasIncompatible();
	}

	public static void prestamoProfesionalLoteCuerposIncompatible() {
		RegresionExpedientes.prestamoProfesionalLoteCuerposIncompatible();
	}

	public static boolean verificarPrestamoProfesionalLoteCuerposIncompatible() {
		return RegresionExpedientes.verificarPrestamoProfesionalLoteCuerposIncompatible();
	}

	public static void prestamoProfesionalLoteAgendaIncompatible() {
		RegresionExpedientes.prestamoProfesionalLoteAgendaIncompatible();
	}

	public static boolean verificarPrestamoProfesionalLoteAgendaIncompatible() {
		return RegresionExpedientes.verificarPrestamoProfesionalLoteAgendaIncompatible();
	}

	public static void nuevoPrestamoProfesionalLOTE_nuevaversion() {
		GestorDeExpedientes.nuevoPrestamoProfesionalLOTE_nuevaversion();
	}

	public static void PrestamoProfesionalConAcumulado() {
		GestorDeExpedientes.PrestamoProfesionalConAcumulado();
		
	}

	public static boolean verificarPrestamoProfesionalConAcumulado() {
		return GestorDeExpedientes.verificarPrestamoProfesionalConAcumulado();
	}

	public static void PrestamoProfesionalDeAcumulado() {
		GestorDeExpedientes.PrestamoProfesionalDeAcumulado();
		
	}

	public static boolean verificarPrestamoProfesionalDeAcumulado() {
		return GestorDeExpedientes.verificarPrestamoProfesionalDeAcumulado();
	}

	public static void PrestamoProfesionalConAcumulado_versionvieja() {
		GestorDeExpedientes.PrestamoProfesionalConAcumulado_versionvieja();
	}

	public static boolean verificarPrestamoProfesionalConAcumulado_versionvieja() {
		return GestorDeExpedientes.verificarPrestamoProfesionalConAcumulado_versionvieja();
	}

	public static void PrestamoProfesionalDeAcumulado_versionvieja() {
		GestorDeExpedientes.PrestamoProfesionalDeAcumulado_versionvieja();
	}

	public static boolean verificarPrestamoProfesionalDeAcumulado_versionvieja() {
		return GestorDeExpedientes.verificarPrestamoProfesionalDeAcumulado_versionvieja();
	}

	public static boolean verificarLoteFojasIncompatible() {
		return RegresionExpedientes.verificarLoteFojasIncompatible();
	}

	public static boolean verificarLoteCuerposIncompatible() {
		return RegresionExpedientes.verificarLoteCuerposIncompatible();
	}

}
