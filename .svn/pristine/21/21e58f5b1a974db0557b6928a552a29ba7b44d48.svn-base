package com.indra.pjsf.tf.resultados;

import java.net.MalformedURLException;
import java.net.URL;

import org.apache.commons.lang.exception.NestableRuntimeException;



import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;

import br.eti.kinoshita.testlinkjavaapi.TestLinkAPI;
import br.eti.kinoshita.testlinkjavaapi.constants.ExecutionStatus;
import br.eti.kinoshita.testlinkjavaapi.model.Build;
import br.eti.kinoshita.testlinkjavaapi.model.TestPlan;


public class RegistrarTestLink {

	public static String DEVKEY=null;
	public static String URL=null;
	
	public static String testProject = null;
	public static String testPlan = null;
	public static String build = null;
	public static String testCase = null;
	public static String notes=null;
	
	public static ExecutionStatus result=null;
	public static Integer testPlanID = null;
	public static Integer buildID = null;
	public static Integer testCaseID = null;
	
	public static TestLinkAPI api = null;
	

	public static void registrarResultado()
	{
		try  { 
			testCaseID = api.getTestCaseIDByName(testCase, null, testProject, null);
			
			api.reportTCResult(testCaseID, null, testPlanID, result, buildID, null, notes, 
					null, null, null, null, null, null);
		
		} catch (Exception e) {
			System.out.println(e.toString());
			System.out.println("Error al ejecutar el registro de resultado en TestLink");
		}
	}
	
	
	public static void inicializarRegistro() {
		
		// Naming
		DEVKEY=GestorDeDatosDePrueba.Ejecucion.getDevKey();
		URL=GestorDeDatosDePrueba.Ejecucion.getUrlTestlink();
		
		testProject = GestorDeDatosDePrueba.Ejecucion.getTestProject();
		testPlan = GestorDeDatosDePrueba.Ejecucion.getTestPlan();
		build = GestorDeDatosDePrueba.Ejecucion.getBuild();
		
		// Objeto de api Testlink
		try { 
			api = new TestLinkAPI(new URL(URL), DEVKEY);	
				
		} catch (NestableRuntimeException | MalformedURLException  e) 
		{ e.printStackTrace();}
		
		// Obtengo objetos de Plan y Build desde Testlink
		TestPlan objTestPlan = api.getTestPlanByName(testPlan, testProject);
	    Build[] builds = api.getBuildsForTestPlan(objTestPlan.getId());
	    Build objBuild = null;
	    for (Build buildInArray : builds) {
	    	if (buildInArray.getName().equals(build)) {
	     	  objBuild = buildInArray;
	        break;
	      }
	    }
		
	    // Obtengo Ids internos del Plan y Build 
	    testPlanID = objTestPlan.getId();
		buildID = objBuild.getId();

	}


	public static void setResultado(boolean i, String nota) {
	   notes = nota;
	   
	   if (i) result = ExecutionStatus.PASSED;
	   else result = ExecutionStatus.FAILED;
	   
	}
	
	
	public static void setTestCase() {
		testCase = GestorDeDatosDePrueba.obtenerDatosDelCaso.nombreCasoTestlink.toString();		
	}
	
	
}

	
