package com.indra.pjsf.pruebas;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runners.MethodSorters;


import com.indra.pjsf.pruebas.MESA_TestBase.msjResultado;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.MESA_PgnCambioDeRadicacion;
import com.indra.pjsf.tf.paginas.MESA_PgnDevolucion;
import com.indra.pjsf.tf.paginas.MESA_PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.MESA_PgnMovimientoInterno;
import com.indra.pjsf.tf.paginas.MESA_PgnPaseAOtroOrganismo;
import com.indra.pjsf.tf.paginas.MESA_PgnPrestamoProfesional;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class MESA_ExpedientesLotes extends MESA_TestBase {
	
	@Ignore
	public void A_ME_003_020_Prestamo_Profesional(){
		
		codigo = "ME-003.020";
		prepararDatos(entidades.Expedientes); 
		
		//MESA_PgnPrestamoProfesional.Ir();
		MESA_PgnPrestamoProfesional.IrDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnPrestamoProfesional.PrestamoProfesionalLote();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnPrestamoProfesional.verificarPrestamoProfesionalLote());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Test
	public void C_ME_003_021_CambioDeRadicacion(){
		
		codigo = "ME-003.021";
		prepararDatos(entidades.Expedientes); 
		
		//MESA_PgnCambioDeRadicacion.Ir();
		MESA_PgnCambioDeRadicacion.IrDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnCambioDeRadicacion.nuevoCambioDeRadicacionLote();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnCambioDeRadicacion.verificarCambioDeRadicacion());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	
	@Ignore
	public void B_ME_003_022_Movimiento_Interno(){
		
		codigo = "ME-003.022";
		prepararDatos(entidades.Expedientes); 
				
		MESA_PgnMovimientoInterno.Ir();
		//MESA_PgnMovimientoInterno.IrDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnMovimientoInterno.nuevoMovimientoInternoLote();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnMovimientoInterno.verificarMovimientoRealizado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	
	
	@Ignore
	public void B_ME_003_023_PaseAOtroOrganismo(){
	
		codigo = "ME-003.023";
		prepararDatos(entidades.Expedientes); 
	
		MESA_PgnPaseAOtroOrganismo.Ir();
		//MESA_PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLote();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
		
		}  catch(Exception e){
			resultado = false;
		}
	}	
	
	
	@Ignore
	public void B_ME_003_024_Devolucion(){
	
		codigo = "ME-003.024";
		prepararDatos(entidades.Expedientes); 
	
		MESA_PgnDevolucion.Ir();
		//MESA_PgnDevolucion.IrDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnDevolucion.nuevaDevolucionLote();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnDevolucion.verificarDevolucion());
			resultado = true;
		
		}  catch(Exception e){
			resultado = false;
		}
	}	
	

}
