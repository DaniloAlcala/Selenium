package com.indra.pjsf.tf.datos;

import java.util.Random;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.MESA_Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.MESA_PgnNuevoCargo;
import com.indra.pjsf.tf.workflows.MESA_GestorBase;
import com.indra.pjsf.tf.workflows.MESA_GestorDeCargos;
import com.indra.pjsf.tf.workflows.MESA_GestorDeExpedientes;

public class MESA_GeneradorDeDatosDePrueba {
	
	private static Select wSelector;
	
	//IMPORTANTE: LIBRO DE CARGOS DEBE ESTAR ABIERTO
	
	public static void MESA_generarCUIJS () {
		
		int cantidad = 4; 
		
		GestorDeDatosDePrueba.Ejecucion.CargarParametrosDeEjecucion();
		GestorDeDatosDePrueba.Ejecucion.CargaExcelResultados();
		MESA_Driver.Iniciar();
		
		System.out.println("INICIO DE GENERACION DE CUIJS");
		
		GestorDeDatosDePrueba.obtenerDatosDelCaso.obtenerDatos(entidades.Cargo, "ME-001.005");
		MESA_PgnNuevoCargo.irDesdePrincipal(); 
		
		for (int i = 1; i <= cantidad; i++){
			
			MESA_GestorDeCargos.CrearExpedienteNuevo();
			
			if (MESA_verificarExpedienteNuevoCreado()){
				System.out.println(MESA_Driver.Instance.findElement
						(By.id("form1:inputText1")).getText().toString());
				}
			
			MESA_PgnNuevoCargo.ir();
			
			}
		MESA_Driver.CerrarSesion();
		MESA_Driver.Cerrar();
		System.out.println("FIN DE GENERACION DE CUIJS");
	}

	public static boolean MESA_verificarExpedienteNuevoCreado() {
		boolean blnExpedienteNuevo = false;
		final String fraseConfirmaParcial = "correctamente";
		
		MESA_Driver.Instance.switchTo().defaultContent();
		MESA_Driver.Instance.switchTo()
		.frame(MESA_Driver.Instance.findElement(By.name("ge_application_dispatcher")));
		
		WebElement fraseConfirma = MESA_Driver.Instance.findElement(By.xpath("//h1[contains(.,'Nuevo expediente registrado correctamente')]"));
		if (fraseConfirma.getText().contains(fraseConfirmaParcial))
			blnExpedienteNuevo = true;
		
		return blnExpedienteNuevo;
	}
	
	public static String MESA_dimeCUIJ() {
		
		MESA_Driver.Instance.switchTo().defaultContent();
		MESA_Driver.Instance.switchTo().frame(MESA_Driver.Instance.findElement(By.name("ge_application_dispatcher")));
		
		return MESA_Driver.Instance.findElement(By.id("form1:inputText1")).getText().toString();
		
	}
	
	public static void MESA_generarDatosAgrupadosMovimientos() {
		
		/*
		- GE.003.021:
			- Generar exp1
			- Generar exp2
			- Desde exp1? acumular el exp2
	
			exp1 va en ='GE-003.021.001'!C6
			exp2 va en ='GE-003.021.001'!C7

		- GE.003.023:
			- Generar exp3
			- Generar exp4
			- Desde exp3? unir por cuerda el exp4
	
			exp3 va en ='GE-003.023.001'!C7
			exp4 va en ='GE-003.023.001'!C8
	
		- GE.003.024:
			- Generar exp5
			- Asignar mmdd/año como numero/año de ese expediente
			- Crear legajo de copia de exp5
			- Crear incidente de exp5
			- Crear cuaderno de prueba de exp5
			- Generar exp6
			- Desde exp5? crear conexo con exp6
		
			exp5 va en ='GE-003.024.001'!C8
			y asi sucesivamente...
		*/
		
		String exp1 = null,exp2 = null,exp3 = null,exp4 = null,exp5 = null, exp6 = null;
		
		GestorDeDatosDePrueba.Ejecucion.CargarParametrosDeEjecucion();
		GestorDeDatosDePrueba.Ejecucion.CargaExcelResultados();
		MESA_Driver.Iniciar();
		
		System.out.println("INICIO DE GENERACION DE DATOS PARA MOVIMIENTOS DE AGRUPADOS");
		System.out.println("-----------------------------------------------------------");
		
		GestorDeDatosDePrueba.obtenerDatosDelCaso.obtenerDatos(entidades.Cargo, "ME-001.005");
		MESA_PgnNuevoCargo.irDesdePrincipal(); 
		
		// INICIO PARA GE.003.021
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp1 = MESA_dimeCUIJ();
		MESA_PgnNuevoCargo.ir();
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp2 = MESA_dimeCUIJ();
		
		MESA_GestorDeCargos.MESA_irAExpediente(exp1);
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton Acumulados
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink121211121"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink121211121")).click();
		
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton Nuevo
		MESA_Driver.EsperarDisponible(By.id("form1:menuBar1:commandButton1"));
		MESA_Driver.Instance.findElement(By.id("form1:menuBar1:commandButton1")).click();
		
		// Lupa Expediente
		MESA_Driver.EsperarDisponible(By.id("form11:helper1"));
		MESA_Driver.Instance.findElement(By.id("form11:helper1")).click();
		
		// Popup expediente
		MESA_GestorDeExpedientes.MESA_buscarExpedientePopup(exp2);
		
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		MESA_Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
				
		System.out.println("Para GE.003.021");
		System.out.println("Expediente con un acumulado: "+exp1);
		System.out.println("Expediente acumulado del anterior: "+exp2);
		System.out.println(" ");
		// FIN PARA GE.003.021
	
		// INICIO PARA GE.003.023
		MESA_PgnNuevoCargo.ir();
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp3 = MESA_dimeCUIJ();
		MESA_PgnNuevoCargo.ir();
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp4 = MESA_dimeCUIJ();
		
		MESA_GestorDeCargos.MESA_irAExpediente(exp3);
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton Referencias
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink1212123"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
		
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton Nuevo
		MESA_Driver.EsperarDisponible(By.id("form2:menuBar1:commandButton11"));
		MESA_Driver.Instance.findElement(By.id("form2:menuBar1:commandButton11")).click();
		
		// Combo Tipo y elijo Cuerda
		MESA_Driver.EsperarDisponible(By.id("form11:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(MESA_Driver.Instance.findElement(By.id("form11:selectOneChoice1")));
		wSelector.selectByVisibleText("Cuerda");
		
		// Lupa Expediente
		MESA_Driver.EsperarDisponible(By.id("form11:helper"));
		MESA_Driver.Instance.findElement(By.id("form11:helper")).click();
		
		// Popup expediente
		MESA_GestorDeExpedientes.MESA_buscarExpedientePopup(exp4);
		
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		MESA_Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
				
		System.out.println("Para GE.003.023");
		System.out.println(exp3+" esta unido por cuerda con "+exp4);
		System.out.println(" ");
		// FIN PARA GE.003.023

		// INICIO PARA GE.003.025
		MESA_PgnNuevoCargo.ir();
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp5 = MESA_dimeCUIJ();
		
		MESA_GestorDeCargos.MESA_irAExpediente(exp5);
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton otros numeros y caratulas
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink2"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink2")).click();
		
		// Boton otros numeros y caratulas
		MESA_Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton2"));
		MESA_Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
		
		// Numero
		WebElement numero =  MESA_Driver.Instance.findElement(By.id("form111:inputText2"));
		numero.clear();
		// alestring = numero aleatorio de 5 cifras
		Random random = new Random();
		int ale = 10000 + random.nextInt(89999);
		String alestring = String.valueOf(ale);
		numero.sendKeys(alestring.toString());
		
		// Año
		String fecha = MESA_Driver.Instance.findElement(By.id("form111:selectInputDate1")).getText().toString();
		// De la fecha con formato DD/MM/AAAA tomo el substring de 7 a 10.
		String fecha2 = fecha.substring(6, 10);
		WebElement anio =  MESA_Driver.Instance.findElement(By.id("form111:inputText4"));
		anio.clear();
		anio.sendKeys(fecha2);
	
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form111:menuBar11:commandButton112"));
		MESA_Driver.Instance.findElement(By.id("form111:menuBar11:commandButton112")).click();
		
		
		// Boton Ir a Exp
		MESA_Driver.EsperarDisponible(By.id("form2:commandLink2"));
		MESA_Driver.Instance.findElement(By.id("form2:commandLink2")).click();
		
		
		// Boton Crea Legajo de copia
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink1212"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink1212")).click();
		
		
		// Boton Si confirmacion
		MESA_Driver.EsperarDisponible(By.id("form111:commandButton3111"));
		MESA_Driver.Instance.findElement(By.id("form111:commandButton3111")).click();
		
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form111:menuBar111:commandButton1121"));
		MESA_Driver.Instance.findElement(By.id("form111:menuBar111:commandButton1121")).click();
		
		String numanio = alestring+"/"+fecha2;
		MESA_GestorDeCargos.MESA_irAExpediente(numanio);
		MESA_GestorBase.MESA_irAlFramePorDefecto();
	
		/* EN MESA NO HAY INCIDENTES 
		// Boton Incidente
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink122"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink122")).click();
		
		
		// Fecha radicacion
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		MESA_Driver.EsperarDisponible(By.id("form2:selectInputDate11"));
		String rad = MESA_Driver.Instance.findElement(By.id("form2:selectInputDate11")).getAttribute("value").toString();
		MESA_Driver.EsperarDisponible(By.id("form2:selectInputDate2"));
		MESA_Driver.Instance.findElement(By.id("form2:selectInputDate2")).sendKeys(rad);
				
		
		// Combo Modo
		MESA_Driver.EsperarDisponible(By.id("form2:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(MESA_Driver.Instance.findElement(By.id("form2:selectOneChoice1")));
		wSelector.selectByVisibleText("Inicio manual");
		
		// Combo Materia principal
		MESA_Driver.EsperarDisponible(By.id("form2:selectOneChoice21"));
		wSelector = null;
		wSelector = new Select(MESA_Driver.Instance.findElement(By.id("form2:selectOneChoice21")));
		wSelector.selectByVisibleText("APREMIO");
		
		// Combo Ubicacion Actual
		MESA_Driver.EsperarDisponible(By.id("form2:selectOneChoice3"));
		wSelector = null;
		wSelector = new Select(MESA_Driver.Instance.findElement(By.id("form2:selectOneChoice3")));
		wSelector.selectByVisibleText("EN CASILLERO");
		
		// Boton Finalizar
		MESA_Driver.EsperarDisponible(By.id("form2:commandButton3111"));
		MESA_Driver.Instance.findElement(By.id("form2:commandButton3111")).click();
		
		
		// Boton Cerrar
		MESA_Driver.EsperarDisponible(By.id("form2:commandButton311"));
		MESA_Driver.Instance.findElement(By.id("form2:commandButton311")).click();
		
		
		// EN MESA NO HAY CUADERNO DE PRUEBA
		// Boton Crea Cuaderno de prueba
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink12111"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink12111")).click();
				
				
		// Boton Si confirmacion
		MESA_Driver.EsperarDisponible(By.id("form111:commandButton3111"));
		MESA_Driver.Instance.findElement(By.id("form111:commandButton3111")).click();
				
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form111:menuBar111:commandButton1121"));
		MESA_Driver.Instance.findElement(By.id("form111:menuBar111:commandButton1121")).click();
				
		*/
		
		
		/* Creamos un nuevo expediente para conexo */
			
		MESA_PgnNuevoCargo.ir();
		MESA_GestorDeCargos.CrearExpedienteNuevo();
		exp6 = MESA_dimeCUIJ();
		
		/*---*/
		
		MESA_GestorDeCargos.MESA_irAExpediente(numanio);
		MESA_GestorBase.MESA_irAlFramePorDefecto();
		
		// Boton Referencias
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink1212123"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
				
		MESA_GestorBase.MESA_irAlFramePorDefecto();
				
		// Boton Nuevo
		MESA_Driver.EsperarDisponible(By.id("form2:menuBar1:commandButton11"));
		MESA_Driver.Instance.findElement(By.id("form2:menuBar1:commandButton11")).click();
				
		// Combo Tipo y elijo Cuerda
		MESA_Driver.EsperarDisponible(By.id("form11:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(MESA_Driver.Instance.findElement(By.id("form11:selectOneChoice1")));
		wSelector.selectByVisibleText("Conexidad");
				
		// Lupa Expediente
		MESA_Driver.EsperarDisponible(By.id("form11:helper"));
		MESA_Driver.Instance.findElement(By.id("form11:helper")).click();
				
		// Popup expediente
		MESA_GestorDeExpedientes.MESA_buscarExpedientePopup(exp6);
				
		// Boton Guardar
		MESA_Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		MESA_Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
		
		/* --- */
		
		System.out.println("Para GE.003.024");
		System.out.println("Expediente principal: "+exp5);
		System.out.println("Numero/Año: "+alestring+"/"+fecha2);
		System.out.println("Legajo de copia: "+exp5+"/1");
		//System.out.println("Incidente: "+exp5+"/2");
		//System.out.println("Cuaderno de prueba: "+exp5+"/3");
		System.out.println("Conexo: "+exp6);
		
		
		
		
		// FIN PARA GE.003.025

		MESA_Driver.CerrarSesion();
		MESA_Driver.Cerrar();
		System.out.println("-----------------------------------------------------------");
		System.out.println("FIN DE GENERACION DE DATOS PARA MOVIMIENTOS DE AGRUPADOS");
		
		
	}

}
