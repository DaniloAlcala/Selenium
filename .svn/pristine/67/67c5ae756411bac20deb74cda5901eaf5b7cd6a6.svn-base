package com.indra.pjsf.pruebas;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.navegacion.MenuPrincipal;
import com.indra.pjsf.tf.paginas.PgnCambioDeRadicacion;
import com.indra.pjsf.tf.paginas.PgnDevolucion;
import com.indra.pjsf.tf.paginas.PgnElevarACamaraDeApelacion;
import com.indra.pjsf.tf.paginas.PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.PgnMovimientoInterno;
import com.indra.pjsf.tf.paginas.PgnPaseAOtroOrganismo;
import com.indra.pjsf.tf.paginas.PgnPrestamoProfesional;
import com.indra.pjsf.tf.workflows.GestorBase;
import com.indra.pjsf.tf.workflows.RegresionExpedientes;

import org.junit.Test;
import org.junit.Ignore;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class ExpedientesAgrupadosMovimientos extends TestBase {
	
	// Hay dos versiones de 003.021 y 003.022 dependiendo de la version de Prestamo Profesional en Lote
	// Por el momento en RO va la vesion antigua de Prestamo a Partes y en SF la nueva
	// Configurar a @Test e @Test los casos dependiendo de la version

	// Prestamo a partes version nueva
	@Test
	public void A_GE_003_021B_Prestamo_Profesional_Con_Acumulado(){
		
		codigo = "GE-003.021B";
		prepararDatos(entidades.Expedientes); 
		
		PgnPrestamoProfesional.IrDesdePrincipalNueva(); 
		PgnPrestamoProfesional.PrestamoProfesionalConAcumulado();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPrestamoProfesional.verificarPrestamoProfesionalConAcumulado());
			resultado = true;
			// Eliminar movimientos de ambos expedientes
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
									
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	// Prestamo a partes version nueva
	@Test
	public void A_GE_003_022B_Prestamo_Profesional_De_Acumulado(){
		
		codigo = "GE-003.022B";
		prepararDatos(entidades.Expedientes); 
		
		//PgnPrestamoProfesional.IrDesdePrincipalNueva();
		PgnPrestamoProfesional.IrNueva();
		PgnPrestamoProfesional.PrestamoProfesionalDeAcumulado();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPrestamoProfesional.verificarPrestamoProfesionalDeAcumulado());
			resultado = true;
			// Eliminar movimientos de ambos expedientes
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
												
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	// Prestamo a partes version vieja
	@Ignore
	public void A_GE_003_021_Prestamo_Profesional_Con_Acumulado_versionvieja(){
		
		codigo = "GE-003.021";
		prepararDatos(entidades.Expedientes); 
		
		PgnPrestamoProfesional.IrDesdePrincipal();
		//PgnPrestamoProfesional.Ir();
		PgnPrestamoProfesional.PrestamoProfesionalConAcumulado_versionvieja();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPrestamoProfesional.verificarPrestamoProfesionalConAcumulado_versionvieja());
			resultado = true;
			// Eliminar movimientos de ambos expedientes
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
									
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	// Prestamo a partes version vieja
	@Ignore
	public void A_GE_003_022_Prestamo_Profesional_De_Acumulado_versionvieja(){
		
		codigo = "GE-003.022";
		prepararDatos(entidades.Expedientes); 
		
		//PgnPrestamoProfesional.IrDesdePrincipal();
		PgnPrestamoProfesional.Ir();
		PgnPrestamoProfesional.PrestamoProfesionalDeAcumulado_versionvieja();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPrestamoProfesional.verificarPrestamoProfesionalDeAcumulado_versionvieja());
			resultado = true;
			// Eliminar movimientos de ambos expedientes
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
												
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	
	@Test
	public void A_GE_003_023_Movimiento_Interno_Con_Cuerda(){
		
		codigo = "GE-003.023";
		prepararDatos(entidades.Expedientes); 
		
		//PgnMovimientoInterno.IrDesdePrincipal();
		PgnMovimientoInterno.Ir();
		PgnMovimientoInterno.MoviminentoInternoConCuerda();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnMovimientoInterno.verificarMovimientoInternoConCuerda());
			resultado = true;
			// Eliminar movimientos de ambos expedientes
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
									
		}  catch(Exception e){
			resultado = false;
		} 
		
	}


	@Test
	public void A_GE_003_024_Pase_A_Otro_Organismo_Con_Dependendientes(){
		
		codigo = "GE-003.024";
		prepararDatos(entidades.Expedientes); 
		
		//PgnPaseAOtroOrganismo.IrDesdePrincipal();
		PgnPaseAOtroOrganismo.Ir();
		PgnPaseAOtroOrganismo.PaseConDependientes();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseConDependientes());
			resultado = true;
			// Eliminar movimientos de los expedientes (excepto el legajo de copia que no se debe mover (SegundoCUIJ)
			PgnFichaExpediente.anulaUltimoMovimientoNumeroAnio(GestorDeDatosDePrueba.Expediente.getNumeroAnio());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getTercerCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCuartoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getQuintoCUIJ());
									
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	
	@Test
	public void A_GE_003_025_Cambio_Radicacion_Con_Acumulados(){
		
		codigo = "GE-003.025";
		prepararDatos(entidades.Expedientes); 
		
		//PgnCambioDeRadicacion.IrDesdePrincipal();
		PgnCambioDeRadicacion.Ir();
		PgnCambioDeRadicacion.CambioRadicacionConAcumulados();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnCambioDeRadicacion.verificarCambioRadicacionConAcumulados());
			resultado = true;
			
			// En caso de ejecucion correcta
			// En el juzgado destino elimina ultimos movimientos de los 2 CUIJ
			GestorBase.irAlFramePorDefecto();
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			//Vuelta a juzgado origen
			MenuPrincipal.IrAJuzgadoAProbar();
				
			// En el juzgado origen elimina ultimos movimientos de los 2 CUIJ
			GestorBase.irAlFramePorDefecto();
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			PgnFichaExpediente.anulaUltimoMovimientoCUIJ(GestorDeDatosDePrueba.Expediente.getCUIJ());
									
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
}


