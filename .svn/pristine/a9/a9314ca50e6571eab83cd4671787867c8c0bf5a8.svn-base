package com.indra.pjsf.regresion;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.Test;
//import org.junit.Ignore;
import org.junit.runners.MethodSorters;


import com.indra.pjsf.regresion.RegresionTestBase.msjResultado;
//import com.indra.pjsf.regresion.RegresionTestBase.msjResultado;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnFichaActuacion;
import com.indra.pjsf.tf.paginas.PgnListadoActuaciones;
import com.indra.pjsf.tf.paginas.PgnNuevaActuacion;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CrearActuaciones_NF  extends RegresionTestBase {
	
	
	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_201_Actuacion_Expediente_Obligatorio(){
		codigo = "GE-004.201";
		prepararDatos(entidades.Actuaciones);
						
		//PgnListadoActuaciones.ir();
		PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		PgnNuevaActuacion.crearSentenciaExpedienteObligatorio();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaExpedienteObligatorio());
				resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_GE_004_202_Actuacion_Modelo_Obligatorio(){
		codigo = "GE-004.202";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
	
		PgnNuevaActuacion.crearSentenciaSinModelo();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaSinModelo());
				resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_GE_004_203_Actuacion_Modelo_Incompatible(){
		codigo = "GE-004.203";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
	
		PgnNuevaActuacion.crearSentenciaModeloIncompatible();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaModeloIncompatible());
				resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	
	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_204_Actuacion_Fecha_Creacion_Incompatible(){
		codigo = "GE-004.204";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
		PgnNuevaActuacion.crearSentenciaFechaCreacionIncompatible();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaFechaCreacionIncompatible());
				resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_205_Actuacion_Vencimiento_Incompatible(){
		codigo = "GE-004.205";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
		PgnNuevaActuacion.crearSentenciaVencimientoIncompatible();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaVencimientoIncompatible());
				resultado = true;
		
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_206_Actuacion_Fecha_Audiencia_Incompatible(){
		codigo = "GE-004.206";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
		PgnNuevaActuacion.crearSentenciaFechaAudienciaIncompatible();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaFechaAudienciaIncompatible());
				resultado = true;
		
		}  catch(Exception e){
			resultado = false;
		} 
	}

	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_207_Actuacion_Hora_Audiencia_Incompatible(){
		codigo = "GE-004.207";
		prepararDatos(entidades.Actuaciones);
						
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
		PgnNuevaActuacion.crearSentenciaHoraAudienciaIncompatible();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(), 
					PgnNuevaActuacion.verificarSentenciaHoraAudienciaIncompatible());
				resultado = true;
		
		}  catch(Exception e){
			resultado = false;
		} 
	}

	
	// Todavia no ejecutar en Produccion
	@Test
	public void A_GE_004_208_Firmar_Actuacion_Fecha_Incompatible(){
		codigo = "GE-004.208";
		prepararDatos(entidades.Actuaciones);
		
		PgnListadoActuaciones.ir();
		//PgnListadoActuaciones.irDesdePrincipal(); //Tempo por prueba unitaria
		
		PgnFichaActuacion.firmarActuacionFechaIncompatible();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnFichaActuacion.verificarActuacionFirmadaFechaIncompatible());
		resultado = true; 
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	
}
