package com.indra.pjsf.tf.workflows;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.Driver;
import com.indra.pjsf.tf.MESA_Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosTestigo;

public class MESA_GestorDeActuaciones extends MESA_GestorBase {
	
	public static void MESA_buscarActuaciones() {

		MESA_irAlFramePorDefecto();

		WebElement mostrarDetalle = MESA_Driver.Instance.findElement(By.id("form1:showDetail111111__xc_"));
		if (mostrarDetalle.findElement(By.tagName("img")).getAttribute("title").contains("mostrar"))
			mostrarDetalle.click();
			
		MESA_Driver.Instance.findElement(By.id("form1:selectInputDate11")).clear();
		MESA_Driver.Instance.findElement(By.id("form1:selectInputDate11"))
		.sendKeys(GestorDeDatosDePrueba.Actuaciones.getFechaActual());
			
		MESA_Driver.Instance.findElement(By.id("form1:helper")).click();
		MESA_buscarExpedientePopup();	
		
		MESA_Driver.Instance.findElement(By.id("form1:commandLink12")).click();	
	}

	private static void MESA_crearActuacionSinModelo() {
		MESA_irAlFramePorDefecto();
		MESA_Driver.Instance.findElement(By.id("form1:commandLink1212112112")).click();

		WebElement extracto = MESA_Driver.Instance.findElement(By.id("form11:inputText11"));
		extracto.clear();
		extracto.sendKeys(GestorDeDatosDePrueba.Actuaciones.getObservaciones());
		
		MESA_Driver.Instance.findElement(By.id("form11:helper")).click();
		MESA_buscarExpedientePopup();
		
		MESA_Driver.EsperarDisponible(By.id("form11:commandButton31"));
		MESA_Driver.Instance.findElement(By.id("form11:commandButton31")).click();
		
		MESA_Driver.EsperarDisponible(By.id("form2:commandButton3111"));
		MESA_Driver.Instance.findElement(By.id("form2:commandButton3111")).click();
		
	}
	
	public static void MESA_buscarExpedientePopup() {
		MESA_irAlPopupActuaciones();
		
		MESA_Popup.findElement(By.id("inputText1")).clear();
		MESA_Popup.findElement(By.id("inputText1"))
		.sendKeys(GestorDeDatosDePrueba.Actuaciones.getCUIJ().toString());
		
		MESA_Popup.findElement(By.id("commandLink1")).click();
		
		MESA_volverDelPopup();
		
	}
	
	public static void MESA_irAlPopupActuaciones() {
		
		parentWindowHandler = MESA_Driver.Instance.getWindowHandle();
		String subWindowHandler = parentWindowHandler;
		String handlerVentanaFile;
		
		int ventanasAbiertas = GestorDeDatosTestigo.ventanasFilesDeActuaciones.getCantidadDeVentanasAbiertas();
				
		switch (ventanasAbiertas) {	
		case 0:
			try { while (MESA_Driver.Instance.getWindowHandles().size() < 2) Thread.sleep(500);
			} catch (InterruptedException e) {e.printStackTrace();}
			 
			if (MESA_Driver.Instance.getWindowHandles().size() > 1 ) {
				Iterator<String> handles = MESA_Driver.Instance.getWindowHandles().iterator();
				while (handles.hasNext()) {
					String id = handles.next();
					if (!id.toString().trim().equals(parentWindowHandler.trim()))  
						subWindowHandler = id;
					else continue;
				}
			}
			break;
		case 1:
			handlerVentanaFile = GestorDeDatosTestigo.ventanasFilesDeActuaciones.getHandlerVentanaFile();
			
			try { while (MESA_Driver.Instance.getWindowHandles().size() < 3 ) Thread.sleep(500);
			} catch (InterruptedException e) {e.printStackTrace();}
			
			if (MESA_Driver.Instance.getWindowHandles().size() > 2 ) {
				Iterator<String> handles = MESA_Driver.Instance.getWindowHandles().iterator();
				while (handles.hasNext()) {
					String id = handles.next();
					if (!id.toString().trim().equals(parentWindowHandler.trim()) 
							&& !id.toString().trim().equals(handlerVentanaFile.trim())) 
						subWindowHandler = id;
					else continue;
				}
			}
			break;
		}		
		MESA_Popup = MESA_Driver.Instance;
		MESA_Popup.switchTo().window(subWindowHandler);
		MESA_Popup.switchTo().frame(0);
		
	    //Añadido
        try {
               Thread.sleep(2000);
        } catch (InterruptedException e) {
                e.printStackTrace();
        }

	}

	public static void buscarActuacion() {
		MESA_buscarActuaciones();
		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
	}

	public static boolean verificarBusqueda() {
		boolean blnVerificar = false;
		
		if (GestorDeDatosTestigo.getControlCantRowsOrigen() >= 2) blnVerificar = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
				, GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		
		return blnVerificar;
	}

	public static void eliminarActuacion() {
		MESA_buscarActuaciones();
		
		MESA_crearActuacionSinModelo();

		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
						
		MESA_Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton3")).click();
		
		MESA_irAlDialogo();
		Dialogo.accept();
		MESA_volverDelDialogo();		
	}

	public static boolean verificarActuacionEliminada() {
		boolean blnVerificar = false;
		
		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsFinal(allRows.size());
				
		int j = GestorDeDatosTestigo.getControlCantRowsOrigen();
		int i = GestorDeDatosTestigo.getControlCantRowsFinal();
								
		if (j == 2 && i == 2) blnVerificar = true;
		if (i < j ) blnVerificar = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
				, GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		
		return blnVerificar;
	}
	
	public static void MESA_buscarActuacionesporCUIJ() {

		MESA_irAlFramePorDefecto();

		WebElement mostrarDetalle = MESA_Driver.Instance.findElement(By.id("form1:showDetail111111__xc_"));
		if (mostrarDetalle.findElement(By.tagName("img")).getAttribute("title").contains("mostrar"))
			mostrarDetalle.click();
					
		MESA_Driver.Instance.findElement(By.id("form1:helper")).click();
		MESA_buscarExpedientePopup();	
		
		MESA_Driver.Instance.findElement(By.id("form1:commandLink12")).click();	
	}
	

	public static void verTextoActuacion() {
		MESA_buscarActuacionesporCUIJ();
		MESA_Driver.EsperarDisponible(By.id("form1:table1:menuBar2:commandButton211"));
		MESA_Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton211")).click();
		
	}

	public static boolean verificarVerTextoActuacion() {
		boolean blnCargoCerrado = true;
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Ver texto actuacion de Expediente: ", 	GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Se realizó una verificación manual de esta prueba. ", " ");
					
		return blnCargoCerrado;
	}

	public static void modificarTextoActuacion() {
		MESA_buscarActuacionesporCUIJ();
		MESA_Driver.EsperarDisponible(By.id("form1:table1:menuBar2:commandButton2111"));
		MESA_Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton2111")).click();
	}

	public static boolean verificarModificarTextoActuacion() {
		boolean blnCargoCerrado = true;
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Modificar texto actuacion de Expediente: ", 	GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Se realizó una verificación manual de esta prueba. ", " ");
					
		return blnCargoCerrado;
	}

	public static void crearSentencia() {
		
		if (GestorDeDatosTestigo.getControlCantRowsOrigen() ==0)
		{
			MESA_buscarActuaciones();
			List<WebElement> allRows = obtenerFilasTotalesAct();
			GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
		}
		
		MESA_irAlFramePorDefecto();
		MESA_Driver.Instance.findElement(By.id("form1:commandLink2112")).click();

		MESA_crearActuaciones();
			
	}

	public static void crearDecreto() {

		MESA_buscarActuaciones();
		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
		
		MESA_Driver.Instance.findElement(By.id("form1:commandLink113")).click();
		
		MESA_crearActuaciones();
		
	}

	public static void crearAuto() {
		
		MESA_buscarActuaciones();
		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
		
		MESA_Driver.Instance.findElement(By.id("form1:commandLink21212")).click();
		
		MESA_crearActuaciones();
		
	}

	public static boolean verificarActuacionCreada() {
		boolean blnVerificar = false;
		
		MESA_buscarActuaciones();
		List<WebElement> allRows = obtenerFilasTotalesAct();
		GestorDeDatosTestigo.setControlCantRowsFinal(allRows.size());
		
		int j = GestorDeDatosTestigo.getControlCantRowsOrigen();
		int i = GestorDeDatosTestigo.getControlCantRowsFinal();
				
		if (j == 2 && i == 2) blnVerificar = true;
		if (j < i ) blnVerificar = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
				, GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
				, GestorDeDatosDePrueba.Actuaciones.getObservaciones());
		
		return blnVerificar;
	}

	private static void MESA_crearActuaciones(){
		
		MESA_Driver.Instance.findElement(By.id("form11:helper")).click();
		
		MESA_buscarExpedientePopup();
		
		MESA_Driver.EsperarDisponible(By.id("form11:inputText4"));
		WebElement modelo = MESA_Driver.Instance.findElement(By.id("form11:inputText4"));
		modelo.clear();
		modelo.sendKeys(GestorDeDatosDePrueba.Actuaciones.getModelo());
		
		MESA_Driver.Instance.findElement(By.id("form11:commandButton111")).click();
					
		MESA_Driver.EsperarDisponible(By.id("form11:commandButton31"));
		MESA_Driver.Instance.findElement(By.id("form11:commandButton31")).click();
		
		MESA_registrarVentanaFile();
		MESA_Driver.Instance.findElement(By.id("form1:commandButton3111")).click();
	}
	
	private static void MESA_registrarVentanaFile() {
		
		parentWindowHandler = MESA_Driver.Instance.getWindowHandle();
		int ventanasAbiertas = GestorDeDatosTestigo.ventanasFilesDeActuaciones.getCantidadDeVentanasAbiertas();
			
				
		if (ventanasAbiertas == 0) {	
			try { while (MESA_Driver.Instance.getWindowHandles().size() < 2) Thread.sleep(500);
			} catch (InterruptedException e) {e.printStackTrace();}
			 
			if (MESA_Driver.Instance.getWindowHandles().size() > 1 ) {
				Iterator<String> handles = MESA_Driver.Instance.getWindowHandles().iterator();
				while (handles.hasNext()) {
					String id = handles.next();
					if (!id.toString().trim().equals(parentWindowHandler.trim()))  {
						GestorDeDatosTestigo.ventanasFilesDeActuaciones.setHandlerVentanaFile(id);
						GestorDeDatosTestigo.ventanasFilesDeActuaciones.setCantidadDeVentanasAbiertas(1);
					}
				}
			}
		}
	}

	public static void firmarActuaciones() {
					
			MESA_buscarActuaciones();
			MESA_Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton2")).click();
			
			MESA_Driver.EsperarDisponible(By.id("form1:commandLink1"));
			MESA_Driver.Instance.findElement(By.id("form1:commandLink1")).click();
			
			MESA_irAlPopupActuaciones();
			//Popup.findElement(By.id("commandButton1")).click();
			try {
				MESA_Popup.findElement(By.id("commandButton1")).click();	
			
			}  catch(NoSuchElementException e) {
				System.out.println(e.getMessage());
				MESA_Popup.switchTo().frame(0);
				MESA_Popup.findElement(By.id("commandButton1")).click();
			}
			MESA_volverDelPopup();
			
	}

	public static boolean verificarActuacionFirmada() {
		boolean blnVerificar = false;
		String confirmacion = MESA_Driver.Instance.findElement(By.id("form1:outputFormatted3")).getText();
		
		if (confirmacion.contains("Firmada")) blnVerificar = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
				, GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("", confirmacion);
		
		return blnVerificar;
	}

	public static void protocolizarActuaciones() {
		MESA_buscarActuaciones();
		Select wSelector;
		
		MESA_Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton2")).click();
		
		MESA_Driver.EsperarDisponible(By.id("form1:commandLink121211111"));
		MESA_Driver.Instance.findElement(By.id("form1:commandLink121211111")).click();
	
		MESA_Driver.EsperarDisponible(By.id("form11:helper1"));
		MESA_Driver.Instance.findElement(By.id("form11:helper1")).click();
		
		MESA_irAlPopupActuaciones();
		
		if (MESA_Popup.findElements(By.id("form2:table1-nb")).size() != 0)
		{
        	wSelector = null;         
    		wSelector = new Select(MESA_Popup.findElement(By.id("form2:table1-nb__xc_c")));
    		wSelector.selectByValue("all");	
         }
		
		String id;
		Integer fila;
		String fechaActualAnio = GestorDeDatosDePrueba.Actuaciones.getFechaActual().substring(6);
		String anio = fechaActualAnio;
		
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		Date fechaActual = null;
		Date fechaDesde = null;

		//Añadido
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
				e.printStackTrace();
		}
		
		for (fila = 0; anio.trim().equals(fechaActualAnio.trim()); fila++) {
			id = "form2:table1:";
			id = id.concat(fila.toString()).concat(":outputText1");
			anio = MESA_Popup.findElement(By.id(id)).getText();
			
			id = "form2:table1:";
			id = id.concat(fila.toString()).concat(":outputText4");
				
			try {
				fechaDesde = sdf.parse(MESA_Popup.findElement(By.id(id)).getText().substring(0, 10));
				fechaActual = sdf.parse(GestorDeDatosDePrueba.Actuaciones.getFechaActual());
			} catch(Exception e){ System.out.println(e.getMessage()); } 
			
			if (fechaDesde.before(fechaActual)) break;
		}
	
		id = "form2:table1:";
		id = id.concat(fila.toString().concat(":tableSelect"));
		
		WebElement seleccionar = MESA_Popup.findElement(By.id(id));
		seleccionar.click();

		MESA_Popup.findElement(By.id("form2:table1:menuBar2:commandButton31")).click();
		
		MESA_volverDelPopup();
		
		MESA_Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		MESA_Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
		
	}

	public static boolean verificarActuacionProtocolizada() {
		boolean blnVerificar = false;
		String tomo = MESA_Driver.Instance.findElement(By.id("form1:outputText22")).getText();
		String folio = MESA_Driver.Instance.findElement(By.id("form1:outputText351")).getText();
		String resolucion = MESA_Driver.Instance.findElement(By.id("form1:outputText211")).getText();
		
		if (tomo.contains("Tomo")) blnVerificar = true;
		
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
				, GestorDeDatosDePrueba.Actuaciones.getCUIJ());
		GestorDeDatosTestigo.agregarTextoDatosTestigo("Protocolo"
				, tomo.concat(" ").concat(folio).concat(" ").concat(resolucion));
		
		return blnVerificar;
	}

	public static void firmarActuacionesLOTE() {
		MESA_irAlFramePorDefecto();
		
		MESA_Driver.Instance.findElement(By.id("helper1")).click();
		
		MESA_buscarExpedientePopup();
		
		MESA_Driver.EsperarDisponible(By.id("inputText3"));
		WebElement observaciones = MESA_Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Actuaciones.getObservaciones());
		
		MESA_Driver.Instance.findElement(By.id("commandButton1")).click();
		
		MESA_Driver.EsperarDisponible(By.id("helper1"));
		MESA_Driver.Instance.findElement(By.id("helper1")).click();
		
		MESA_irAlPopupActuaciones();
		
		MESA_Popup.findElement(By.id("inputText1")).clear();
		MESA_Popup.findElement(By.id("inputText1"))
		.sendKeys(GestorDeDatosDePrueba.Actuaciones.getSegundoCUIJ().toString());
		
		MESA_Popup.findElement(By.id("commandLink1")).click();
		
		MESA_volverDelPopup();
		
		MESA_Driver.EsperarDisponible(By.id("inputText3"));
		observaciones = MESA_Driver.Instance.findElement(By.id("inputText3"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Actuaciones.getObservaciones());
		
		MESA_Driver.Instance.findElement(By.id("commandButton2")).click();
	}

	public static boolean verificarFirmaDeActuacionesLOTE() {
		boolean blnVerificar = false;
		String texto = "";
		String confirmacion = MESA_Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']")).getText();
				
		if (confirmacion.contains("exitosamente")) {
			blnVerificar = true;
			texto = MESA_Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText();	
		}
			
		GestorDeDatosTestigo.agregarTextoDatosTestigo("", confirmacion);
		GestorDeDatosTestigo.agregarTextoDatosTestigo("", texto);
		
		return blnVerificar;
	}

}
