package com.indra.pjsf.regresion;

import org.junit.Assert;
import org.junit.runners.MethodSorters;
import org.junit.FixMethodOrder;
import org.junit.Test;
//import org.junit.Ignore;

import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnAperturaCierreCargos;
import com.indra.pjsf.tf.workflows.RegresionCargos;
import com.indra.pjsf.tf.workflows.RegresionCargos.campo;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)


public class AbrirLibroCargos_NF extends RegresionTestBase {
		
	@Test
	public void A_GE_002_401_Link_Menu_Apertura_Cierre(){
		codigo = "GE-002.401";
		prepararDatos(entidades.Cargo);
						
		PgnAperturaCierreCargos.irDesdePrincipal();
		//PgnAperturaCierreCargos.ir();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),PgnAperturaCierreCargos.verificarTituloPrincipal());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void A_GE_002_404_Link_Boton_Abrir(){
		codigo = "GE-002.404";
		prepararDatos(entidades.Cargo);
						
		//PgnAperturaCierreCargos.irDesdePrincipal(); 	
		PgnAperturaCierreCargos.ir();
		PgnAperturaCierreCargos.linkAbrirLibroCargos();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarLinkAbrir());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	
	@Test
	public void B_GE_002_201_Apertura_Fecha_Obligatorio(){
		codigo = "GE-002.201";
		prepararDatos(entidades.Cargo);
						
		//PgnAperturaCierreCargos.irDesdePrincipal(); //INICIO
		PgnAperturaCierreCargos.ir();
		PgnAperturaCierreCargos.abrirLibroCargosSinGrabar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarDatoIndividual(campo.Fecha.toString(), 
						RegresionCargos.faltaIntroducirValor));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void B_GE_002_202_Apertura_Hora_Obligatorio(){
		codigo = "GE-002.202";
		prepararDatos(entidades.Cargo);
						
		//PgnAperturaCierreCargos.irDesdePrincipal(); //INICIO
		PgnAperturaCierreCargos.ir();
		PgnAperturaCierreCargos.abrirLibroCargosSinGrabar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarDatoIndividual(campo.Hora.toString(), 
						RegresionCargos.faltaIntroducirValor));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void B_GE_002_203_Apertura_Fecha_Incompatible(){
		codigo = "GE-002.203";
		prepararDatos(entidades.Cargo);
						
		//PgnAperturaCierreCargos.irDesdePrincipal(); //INICIO
		PgnAperturaCierreCargos.ir();
		PgnAperturaCierreCargos.abrirLibroCargosSinGrabar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarDatoIndividual(campo.Fecha.toString(), 
						RegresionCargos.formatoFecha));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void B_GE_002_204_Apertura_Hora_Incompatible(){
		codigo = "GE-002.204";
		prepararDatos(entidades.Cargo);
						
		PgnAperturaCierreCargos.ir();
		//PgnAperturaCierreCargos.irDesdePrincipal(); //INICIAL
		PgnAperturaCierreCargos.abrirLibroCargosSinGrabar();

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				PgnAperturaCierreCargos.verificarDatoIndividual(campo.Hora.toString(), 
						RegresionCargos.formatoHora));
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
}
