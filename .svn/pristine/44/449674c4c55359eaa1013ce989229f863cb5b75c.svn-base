package com.indra.pjsf.tf.workflows;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosTestigo;

public class RegresionExpedientes extends GestorBase {
	
	public static String faltaValor = "Se debe seleccionar un valor.";
	public static String valorNoNumerico = "no es un número.";
	public static String profesionalObligatorio = "Debe seleccionar el profesional al cual se prestará el expediente";
	public static String fechaInvalida = "no es una fecha válida. Ejemplo válido";
	private static WebElement observaciones;
	private static Select wSelector;
	private static WebElement CUIJ;
	private static WebElement lnkBuscar;
	
	public static enum campo {
		PasarExpedientesA,
		CodigoBarras, 
		Fojas
	}
	
	
	public static boolean verificarDatoIndividual(String campo, String mensaje) {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
			
		if (Driver.Instance.findElement(By.className("x3z")).getText()
				.contains(mensaje))
		{
			blnVerificado = true;
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Movimiento Interno - Campo "+ campo, mensaje);
		} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Movimiento Interno - Campo "+ campo, "No valida condición de error");
		
		return blnVerificado;
	}


	public static void movInternoLoteExpObligatorio() {
		
		irAlFramePorDefecto();
		
		Select wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getPasarExpedientesA());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static boolean verificarMovInternoLoteExpObligatorio() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
	
		if (Driver.Instance.findElement(By.className("x3z")).getText().isEmpty() 
				&& Driver.Instance.findElement(By.id("message11")).getText().contains(faltaValor))
		{
			blnVerificado = true;
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - CUIJ", faltaValor);
		
		} else 
			if (Driver.Instance.findElement(By.className("x3z")).getText().contains(faltaValor))
			{	
				blnVerificado = true;
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - CUIJ", faltaValor);
			} else 
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - CUIJ ", "No valida campo individual");
		
		return blnVerificado;
	}


	public static void movInternoLotePasarAObligatorio() {
		
		irAlFramePorDefecto();
		
		
		WebElement lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
		lupaExpediente.click();
		GestorDeExpedientes.buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void movInternoLoteSiguienteExpedienteObligatorio() {
		irAlFramePorDefecto();
		
		Select wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getPasarExpedientesA());
		
		WebElement lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
		lupaExpediente.click();
		GestorDeExpedientes.buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
		Driver.EsperarDisponible(By.id("commandButton1"));
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void movInternoLoteCodbarrasIncompatible() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("inputCodigoBarras"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputCodigoBarras"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void prestamoLoteExpedienteObligatorio() {
		irAlFramePorDefecto();
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void prestamoLoteProfesionalObligatorio() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("helperExpediente"));
		WebElement lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
		lupaExpediente.click();
		GestorDeExpedientes.buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

				
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static boolean verificarPrestamoLoteProfesionalObligatorio() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		if (Driver.Instance.findElement(By.className("x9c")).getText().contains(RegresionExpedientes.profesionalObligatorio))
		{
			blnVerificado = true;
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Profesional Obligatorio - ", "Controla correctamente la obligatoriedad del profesional en el prestamo de expediente.");
		} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Profesion al Obligatorio - ", "NO controla correctamente la obligatoriedad del profesional en el prestamo de expediente.");
		
			
		return blnVerificado;
	}


	public static void prestamoProfesionalLoteSiguienteObligatorio() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("helperExpediente"));
		WebElement lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
		lupaExpediente.click();
		GestorDeExpedientes.buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
		
		Driver.EsperarDisponible(By.id("helper11"));
		
		WebElement lupaProfesional =  Driver.Instance.findElement(By.id("helper11"));
		lupaProfesional.click();
		
		irAlPopup();
		
		WebElement matricula = Popup.findElement(By.id("inputText3"));
		matricula.clear();
		matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
		
		Popup.findElement(By.id("commandLink1")).click();
		
		volverDelPopup();
				
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
		try {
            Thread.sleep(3000);
		} catch (InterruptedException e) {
            e.printStackTrace();
		}
		
		Driver.EsperarDisponible(By.id("commandButton1"));
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void anulaUltimoMovimientoCUIJ(String cuij) {
		irAlFrameBuscador();
		
		WebElement cajaDeBusqueda = Driver.Instance.findElement(By.id("inputText1"));
		cajaDeBusqueda.clear();
		cajaDeBusqueda.sendKeys(cuij);
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
		irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("form1:commandLink12121112"));
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		
		Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton3"));
		Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton3")).click();
		
		irAlDialogo();
		Dialogo.accept();
		volverDelDialogo();	
		
	}

	public static void anulaUltimoMovimientoNumeroAnio(String numeroAnio) {
		irAlFrameBuscador();
		
		WebElement cajaDeBusqueda = Driver.Instance.findElement(By.id("inputText1"));
		cajaDeBusqueda.clear();
		cajaDeBusqueda.sendKeys(numeroAnio);
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
		irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("form1:commandLink12121112"));
		Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
		
		Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton3"));
		Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton3")).click();
		
		irAlDialogo();
		Dialogo.accept();
		volverDelDialogo();	
		
	}

	public static void prestamoProfesionalLoteCodbarrasIncompatible() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("inputCodigoBarras"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputCodigoBarras"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
	}


	public static void prestamoProfesionalLoteFojasIncompatible() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("inputText1"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputText1"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
	}


	public static boolean verificarPrestamoProfesionalLoteFojasIncompatible() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		// No encuentra class x3z. Lo busco por XPath que se obtiene con el F12 del navegador.
		if (Driver.Instance.findElement(By.xpath("//*[@id='tableLayout7']/tbody/tr[2]/td[2]/span")).getText()
				.contains(valorNoNumerico))		{	
				blnVerificado = true;
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fojas", valorNoNumerico);
			} else 
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fojas ", "No valida campo individual");
		
		return blnVerificado;
	}


	public static void prestamoProfesionalLoteCuerposIncompatible() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("inputText2"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputText2"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
	}


	public static boolean verificarPrestamoProfesionalLoteCuerposIncompatible() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		// No encuentra class x3z. Lo busco por XPath que se obtiene con el F12 del navegador.
		if (Driver.Instance.findElement(By.xpath("//*[@id='tableLayout7']/tbody/tr[3]/td[2]/span")).getText()
				.contains(valorNoNumerico))		{	
				blnVerificado = true;
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Cuerpos", valorNoNumerico);
			} else 
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Cuerpos ", "No valida campo individual");
		
		return blnVerificado;
	}


	public static void prestamoProfesionalLoteAgendaIncompatible() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("selectInputDate1"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("selectInputDate1"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
	}


	public static boolean verificarPrestamoProfesionalLoteAgendaIncompatible() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		// No encuentra class x3z. Lo busco por XPath que se obtiene con el F12 del navegador.
		if (Driver.Instance.findElement(By.xpath("//*[@id='tableLayout2']/tbody/tr[3]/td[2]/span")).getText()
				.contains(fechaInvalida))		{	
				blnVerificado = true;
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fecha Agenda", fechaInvalida);
			} else 
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fecha Agenda ", "No valida campo individual");
		
		return blnVerificado;
	}
	
	//***************************************** 003.22X *******************************************************//

	//220
	public static void nuevoCambioDeRadicacionEnviarAExpObligatorio() {
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("selectOneChoice31"));
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
		
		//Popup Expediente
				Driver.EsperarDisponible(By.id("helperExpediente"));
				Driver.Instance.findElement(By.id("helperExpediente")).click();
				buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
				


		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
		btnSiguiente.click();
		Driver.EsperarDisponible(By.id("commandButton1"));
		
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
	}

	//221
	public static void nuevoCambioDeRadicacionMotObligatorio(){
				irAlFramePorDefecto();
				
				
				//Popup Expediente
						Driver.EsperarDisponible(By.id("helperExpediente"));
						Driver.Instance.findElement(By.id("helperExpediente")).click();
						buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
						
			
				WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
				btnSiguiente.click();
			
				Driver.Instance.findElement(By.id("commandButton2")).click();
	}

	//222
	public static void nuevoCambioDeRadicacionExpObligatorio() {
		irAlFramePorDefecto();

		Driver.EsperarDisponible(By.id("selectOneChoice31"));
		
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
		wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
	    
	}

	//223
	public static void nuevoCambioDeRadicacionExpSiguienteObligatorio(){

		irAlFramePorDefecto();
		//Popup Expediente
		Driver.EsperarDisponible(By.id("helperExpediente"));
		Driver.Instance.findElement(By.id("helperExpediente")).click();
		buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();
		
		Driver.EsperarDisponible(By.id("commandButton1"));
		
		Driver.Instance.findElement(By.id("commandButton2")).click();
		
			
	}

	//224

	public static void nuevoCambioLoteCdoBarrasIncompatible(){
		
		irAlFramePorDefecto();
		
		Driver.EsperarDisponible(By.id("inputCodigoBarras"));	
		WebElement observaciones = Driver.Instance.findElement(By.id("inputCodigoBarras"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		Driver.Instance.findElement(By.id("commandButton1")).click();

	}

	//225

	public static void nuevoCambioRadicacionFojasIncompatible(){
		irAlFramePorDefecto();
		
		
		
		//Popup Expediente
		Driver.EsperarDisponible(By.id("helperExpediente"));
		Driver.Instance.findElement(By.id("helperExpediente")).click();
		buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
		
		
		Driver.EsperarDisponible(By.id("inputText1"));	
		observaciones = Driver.Instance.findElement(By.id("inputText1"));
		observaciones.clear();
		observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
		
		
		WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
		btnSiguiente.click();
		


	}

	public static void nuevoCambioRadicacionCuerposDatoIncompatible(){

			
			irAlFramePorDefecto();
						
			
			
			//Popup Expediente
			Driver.EsperarDisponible(By.id("helperExpediente"));
			Driver.Instance.findElement(By.id("helperExpediente")).click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

			Driver.EsperarDisponible(By.id("inputText2"));	
			observaciones = Driver.Instance.findElement(By.id("inputText2"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
		
	}
	
	public static void buscarExpedientePopup(String cuij) {
		irAlPopup();
		CUIJ =  Popup.findElement(By.id("inputText1"));
		CUIJ.clear();
		CUIJ.sendKeys(cuij);
		
		lnkBuscar = Popup.findElement(By.id("commandLink1"));
		lnkBuscar.click();
		
		volverDelPopup();
	}
	
	public static boolean verificarLoteFojasIncompatible() {
		boolean blnVerificado = false;
				
				irAlFramePorDefecto();
				
				// No encuentra class x3z. Lo busco por XPath que se obtiene con el F12 del navegador.
				if (Driver.Instance.findElement(By.xpath("//*[@id='tableLayout7']/tbody/tr[2]/td[2]/span")).getText()
						.contains(valorNoNumerico))		{	
						blnVerificado = true;
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fojas", valorNoNumerico);
					} else 
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Fojas ", "No valida campo individual");
				
				return blnVerificado;
			}
			
	
	public static boolean verificarLoteCuerposIncompatible() {
		boolean blnVerificado = false;
		
		irAlFramePorDefecto();
		
		// No encuentra class x3z. Lo busco por XPath que se obtiene con el F12 del navegador.
		if (Driver.Instance.findElement(By.xpath("//*[@id='tableLayout7']/tbody/tr[3]/td[2]/span")).getText()
				.contains(valorNoNumerico))		{	
				blnVerificado = true;
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Cuerpos", valorNoNumerico);
			} else 
				GestorDeDatosTestigo.agregarTextoDatosTestigo("Expedientes Lotes - Cuerpos ", "No valida campo individual");
		
		return blnVerificado;
	}

		// HASTA ACA



}
