package com.indra.pjsf.tf.paginas;

import com.indra.pjsf.tf.navegacion.MenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE;
import com.indra.pjsf.tf.navegacion.GE_Menu_Expedientes;
import com.indra.pjsf.tf.navegacion.GE_Menu_Expedientes.OpcionesGEMenuExpedientes;
import com.indra.pjsf.tf.navegacion.MenuPrincipal.OpcionesMenuPrincipal;
import com.indra.pjsf.tf.navegacion.MenuSGE.OpcionesMenuSGE;
import com.indra.pjsf.tf.workflows.GestorDeExpedientes;
import com.indra.pjsf.tf.workflows.RegresionExpedientes;


public class PgnMovimientoInterno {

	public static void Ir() {
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.MOVIMIENTO_INTERNO);	
		
	}

	public static void IrDesdePrincipal() {
		MenuPrincipal.Abrir(OpcionesMenuPrincipal.GESTION_DE_EXPEDIENTES);
		MenuPrincipal.IrAJuzgadoAProbar();
		MenuSGE.Abrir(OpcionesMenuSGE.EXPEDIENTES);
		GE_Menu_Expedientes.Abrir(OpcionesGEMenuExpedientes.MOVIMIENTO_INTERNO);	
		
	}

	public static void nuevoMovimientoInternoLOTE() {
		GestorDeExpedientes.nuevoMovimientoInternoLOTE();
		
	}

	public static boolean verificarMovimientoRealizado() {
			
		return GestorDeExpedientes.verificarMovimientoRealizado();
	}

	public static void nuevoMovimientoInterno() {
		GestorDeExpedientes.nuevoMovimientoInterno();
		
	}

	public static boolean verificarDatoIndividual(String campo, String mensaje) {
		/*Verifica el mensaje de texto en color rojo que aparece debajo del campo probado*/
		return RegresionExpedientes.verificarDatoIndividual(campo, mensaje);
	}

	public static void movInternoLoteExpObligatorio() {
		RegresionExpedientes.movInternoLoteExpObligatorio();
		
	}

	
	 public static boolean verificarMovInternoLoteExpObligatorio() {
	 	return RegresionExpedientes.verificarMovInternoLoteExpObligatorio();
	}

	public static void movInternoLotePasarAObligatorio() {
		RegresionExpedientes.movInternoLotePasarAObligatorio();
	}

	public static void movInternoLoteSiguienteExpedienteObligatorio() {
		RegresionExpedientes.movInternoLoteSiguienteExpedienteObligatorio();
	}

	public static void movInternoLoteCodbarrasIncompatible() {
		RegresionExpedientes.movInternoLoteCodbarrasIncompatible();
	}

	public static void MoviminentoInternoConCuerda() {
		GestorDeExpedientes.MoviminentoInternoConCuerda();
	}

	public static boolean verificarMovimientoInternoConCuerda() {
		return GestorDeExpedientes.verificarMovimientoInternoConCuerda();
	}

}
