package com.indra.pjsf.tf.workflows;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba;
import com.indra.pjsf.tf.datos.GestorDeDatosTestigo;
import com.indra.pjsf.tf.navegacion.MenuPrincipal;
import com.indra.pjsf.tf.paginas.PgnCargosBandeja;
import com.indra.pjsf.tf.paginas.PgnFichaExpediente;
import com.indra.pjsf.tf.paginas.PgnListaDeCargos;

public class GestorDeExpedientes extends GestorBase {
	
	private static WebElement CUIJ; 
	private static WebElement lupaProfesional;
	private static WebElement lupaExpediente;
	private static WebElement btnSiguiente;
	private static WebElement lnkBuscar;
	private static WebElement btnFinalizar;
	private static WebElement matricula;
	private static WebElement observaciones;
	private static WebElement fecha;
	private static WebElement lupaEnviarA;
	private static WebElement codigo;
	private static WebElement lupaRemitirA;
	private static WebElement cajaDeBusqueda;
	private static WebElement lnkVer;
	private static WebElement fraseConfirma;
	private static Select wSelector;
	private static final String cadenaParcial = "exitosamente";
	private static boolean blnVerificado;
	private static WebElement NumeroAnio;
				
		public static void nuevoMovimientoInternoLOTE() {
			
			irAlFramePorDefecto();
			
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getPasarExpedientesA());
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
					
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Movimiento"
					, Driver.Instance.findElement(By.id("outputText3")).getText());
						
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnFinalizar =  Driver.Instance.findElement(By.id("commandButton2"));
			btnFinalizar.click();
	
		}	

		public static boolean verificarMovimientoRealizado() {
			blnVerificado = false;
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
			
			return blnVerificado;
		}
		
		public static void nuevoPrestamoProfesionalLOTE() {
			
			irAlFramePorDefecto();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

			Driver.EsperarDisponible(By.id("helper11"));
						
			lupaProfesional =  Driver.Instance.findElement(By.id("helper11"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente =  Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));
			
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static boolean verificarPrestamoRealizado() {
			blnVerificado = false;		
						
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void nuevoPaseAOtroOrganismoLOTE() {
	
			irAlFramePorDefecto();
						
			//Selector Tipo
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			
			//Popup Expediente
			Driver.EsperarDisponible(By.id("helperExpediente"));
			Driver.Instance.findElement(By.id("helperExpediente")).click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			//Popup Enviar A
			lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
			lupaEnviarA.click();
			
			irAlPopup();

			codigo = obtenerPrimerObjetoAUsarEnElPopup("form1:inputText11");
			//codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			WebElement btnBuscarP = Popup.findElement(By.id("form1:commandLink1"));
			btnBuscarP.click();
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			Driver.Instance.findElement(By.id("helperExpediente")).click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

	/*	private static WebElement obtenerPrimerObjetoAUsarEnElPopup(String locator) {
			WebElement objeto;
		
			try {
				objeto =  Popup.findElement(By.id(locator));	
			
			}  catch(NoSuchElementException e) {
				System.out.println(e.getMessage());
				Popup.switchTo().frame(0);
				objeto =  Popup.findElement(By.id(locator));
			}
			return objeto;
		}
*/
		public static boolean verificarPaseAOtroOrganismo() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
			
		}

		public static void nuevoCambioDeRadicacionLOTE() {
			irAlFramePorDefecto();
			
			/* Añadido por inclusion de "PASE A OFICINA DE TRAMITES SUCESORIOS" en combo Tipo */
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			/* ------ */
			
			Driver.EsperarDisponible(By.id("selectOneChoice31"));
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
			lupaRemitirA.click();

			irAlPopup();
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			Popup.findElement(By.id("form1:commandLink1")).click();
			
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
			
		}

		public static boolean verificarCambioDeRadicacion() {
			blnVerificado = false;		
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void nuevaDevolucionLOTE() {
			irAlFramePorDefecto();

			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.EsperarDisponible(By.id("inputText3"));
			
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static boolean verificarDevolucion() {
			boolean blnDevolucion = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnDevolucion = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnDevolucion;
		}

		public static void nuevaElevacionACamaraLOTE() {
			irAlFramePorDefecto();

			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.EsperarDisponible(By.id("helper"));
			lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
			lupaEnviarA.click();
			
			irAlPopup();			
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			Popup.findElement(By.id("form1:commandLink1")).click();
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());

			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static boolean verificarElevacionACamara() {
			boolean blnElevado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			
			if (fraseConfirma.getText().contains(cadenaParcial))
				blnElevado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnElevado;
		}

		public static void irAExpediente() {
			irAlFrameBuscador();
			
			cajaDeBusqueda = Driver.Instance.findElement(By.id("inputText1"));
			cajaDeBusqueda.clear();
			cajaDeBusqueda.sendKeys(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.Instance.findElement(By.id("commandButton1")).click();
			
		}

		public static void consultarClave() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());

			lnkVer =  Driver.Instance.findElement(By.id("form1:commandLink12113"));
			lnkVer.click();
			
		}

		public static boolean verificarClave() {
			blnVerificado = false;
			String clave;
						
			irAlPopup();
			fraseConfirma = Popup.findElement(By.id("form1:outputFormatted1"));
			clave = fraseConfirma.getText().trim();
			
			Popup.close();
			volverDelPopup();
			
			if (clave.equals(GestorDeDatosDePrueba.Expediente.getClave().trim())) 
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Clave", clave);
					
			return blnVerificado;
		}

		public static void nuevoMovimientoInterno() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			// Click botón movimientos
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			// Click botón movimientos internos
			Driver.Instance.findElement(By.id("form2:commandLink2112")).click();

			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getPasarExpedientesA());

			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());

			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static void nuevoPrestamoProfesional() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			Driver.Instance.findElement(By.id("form2:commandLink21212")).click();	
			
			lupaProfesional =  Driver.Instance.findElement(By.id("helper11"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			Driver.EsperarDisponible(By.id("inputText3"));

			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("commandButton2")).click();
		}

		public static void nuevoPaseAOtroOrganismo() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			Driver.Instance.findElement(By.id("form2:commandLink12121132")).click();

			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			
			lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
			lupaEnviarA.click();
			
			irAlPopup();
			
			try {	
				codigo =  Popup.findElement(By.id("form1:inputText11"));
				
			}  catch(NoSuchElementException e){
				System.out.println(e.getMessage());
				
				volverDelPopup();
				irAlPopup();
				
				codigo =  Popup.findElement(By.id("form1:inputText11"));
			}
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
			lnkBuscar.click();
			
			volverDelPopup();
			Driver.EsperarDisponible(By.id("inputText3"));

			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("commandButton2")).click();
		}

		public static void nuevoCambioDeRadicacion() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			Driver.Instance.findElement(By.id("form2:commandLink121211122")).click();
			
			/* Añadido por inclusion de "PASE A OFICINA DE TRAMITES SUCESORIOS" en combo Tipo */
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			/* ------ */

			lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
			lupaRemitirA.click();

			irAlPopup();
			
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			Popup.findElement(By.id("form1:commandLink1")).click();
			
			volverDelPopup();
			Driver.EsperarDisponible(By.id("selectOneChoice31"));
			
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
			
			volverDelPopup();
			Driver.EsperarDisponible(By.id("inputText3"));
			
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
		}

		public static void nuevaElevacionACamara() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			Driver.Instance.findElement(By.id("form2:commandLink121211222")).click();
			
			Driver.EsperarDisponible(By.id("helper"));
			lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
			lupaEnviarA.click();
			
			irAlPopup();
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
			lnkBuscar.click();
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
									
			Driver.Instance.findElement(By.id("commandButton2")).click();

		}

		public static void crearDependencia() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Dependencia Creada"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink121212")).click();
			Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1")).click();
		
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("form111:selectOneChoice21")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());

			observaciones = Driver.Instance.findElement(By.id("form111:inputText1"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			lupaExpediente = Driver.Instance.findElement(By.id("form111:helper"));
			lupaExpediente.click();
			
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form111:menuBar11:commandButton112")).click();
			
		}

		public static void modificarDependencia() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente Modificado"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Dependencia"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink121212")).click();			
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
			
			Driver.EsperarDisponible(By.id("form111:inputText1"));
			observaciones = Driver.Instance.findElement(By.id("form111:inputText1"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("form111:menuBar11:commandButton112")).click();
			
		}

		public static void eliminarDependencia() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Dependencia Eliminada"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink121212")).click();
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton3")).click();
			
			irAlDialogo();
			Dialogo.accept();
			volverDelDialogo();
			
			
		}

		public static boolean verificarCreacionDependencia() {
			blnVerificado = false;		
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.id("form2:table1:0:outputText6"));
			
			if (fraseConfirma.getText().trim().equals(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ().trim()))
				blnVerificado = true;

			return blnVerificado;
		}

		public static boolean verificarModificacionDependencia() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			observaciones = Driver.Instance.findElement(By.id("form2:inputText11"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("form2:commandLink1")).click();
			Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton2"));
			
			fraseConfirma = Driver.Instance.findElement(By.id("form2:table1:0:outputText3"));
				
			if (fraseConfirma.getText().trim().equals(GestorDeDatosDePrueba.Expediente.getObservaciones().trim()))
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
					, GestorDeDatosDePrueba.Expediente.getObservaciones());
		
			return blnVerificado;
		}

		public static boolean verificarEliminacionDependencia() {
			blnVerificado = false;
			irAlFramePorDefecto();
			
			Driver.Instance.findElement(By.id("form2:selectBooleanCheckbox1")).click();
			
			observaciones = Driver.Instance.findElement(By.id("form2:inputText11"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("form2:commandLink1")).click();
			Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButtonActivar"));
			
			
			fraseConfirma = Driver.Instance.findElement(By.id("form2:table1:0:outputText6"));
			
			if (fraseConfirma.getText().trim().equals(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ().trim())) 
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
					, GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			return blnVerificado;
		}

		public static void crearRelacion() {

			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Relación Creada"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
			
			List<WebElement> allRows = obtenerFilasTotales();
			GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
			
			Driver.Instance.findElement(By.id("form2:menuBar1:commandButton11")).click();
		
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("form11:selectOneChoice1")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			
			Driver.EsperarDisponible(By.id("form11:inputText3"));
			
			CUIJ = Driver.Instance.findElement(By.id("form11:inputText3"));
			CUIJ.clear();
			CUIJ.sendKeys(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());

			observaciones = Driver.Instance.findElement(By.id("form11:inputText1"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
					
			Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
			
			allRows = obtenerFilasTotales();
			GestorDeDatosTestigo.setControlCantRowsFinal(allRows.size());
			
		}

		

		public static void modificarRelacion() {
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Relación Modificada"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
			
			Driver.EsperarDisponible(By.id("form11:inputText1"));
			
			observaciones = Driver.Instance.findElement(By.id("form11:inputText1"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			Driver.Instance.findElement(By.id("form11:menuBar11:commandButton12")).click();
			
		}

		public static void eliminarRelacion() {

			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Relación Eliminada"
					, GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
			
			Driver.Instance.findElement(By.id("form2:selectBooleanCheckbox1")).click();
			Driver.Instance.findElement(By.id("form2:commandLink11")).click();
			
			List<WebElement> allRows = obtenerFilasTotales();
			GestorDeDatosTestigo.setControlCantRowsOrigen(allRows.size());
			
			Driver.Instance.findElement(By.id("form2:selectBooleanCheckbox1")).click();
			Driver.Instance.findElement(By.id("form2:commandLink11")).click();
			
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton3")).click();
			
			irAlDialogo();
			Dialogo.accept();
			volverDelDialogo();
			
			
		}

		public static boolean verificarCreacionRelacion() {
			blnVerificado = false;
			
			if (GestorDeDatosTestigo.getControlCantRowsOrigen() == 2) 
				blnVerificado = true;
			if (GestorDeDatosTestigo.getControlCantRowsFinal() > GestorDeDatosTestigo.getControlCantRowsOrigen()) 
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
					, GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			return blnVerificado;
		}

		public static boolean verificarModificacionRelacion() {
			blnVerificado = false;
			irAlFramePorDefecto();
		
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton21")).click();
			Driver.EsperarDisponible(By.id("form11:inputText1"));
						
			fraseConfirma = Driver.Instance.findElement(By.id("form11:inputText1"));
			
			if (fraseConfirma.getText().trim().equals(GestorDeDatosDePrueba.Expediente.getObservaciones().trim())) 
				blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
					, GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			return blnVerificado;
		}

		public static boolean verificarEliminacionRelacion() {
			blnVerificado = false;
			
			irAlFramePorDefecto();
			
			Driver.Instance.findElement(By.id("form2:selectBooleanCheckbox1")).click();
			Driver.Instance.findElement(By.id("form2:commandLink11")).click();
			
			List<WebElement> allRows = obtenerFilasTotales();
			GestorDeDatosTestigo.setControlCantRowsFinal(allRows.size());
				
			if ( GestorDeDatosTestigo.getControlCantRowsFinal() == 2 &&
					GestorDeDatosTestigo.getControlCantRowsOrigen() == 2)
				if (Driver.Instance.findElements(By.id("form2:table1:0:outputText2")).size() != 0)
					blnVerificado = true;
			
			if (GestorDeDatosTestigo.getControlCantRowsFinal() ==
					GestorDeDatosTestigo.getControlCantRowsOrigen()+1)
				blnVerificado = true;
					
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Observaciones"
					, GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			return blnVerificado;
		}

		public static void nuevaDevolucion() {
			irAlFramePorDefecto();
			
			Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
			Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
			
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());

			Driver.EsperarDisponible(By.id("inputText3"));

			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
									
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static void buscarExpedientePopup(String cuij) {
			irAlPopup();
			CUIJ =  Popup.findElement(By.id("inputText1"));
			CUIJ.clear();
			CUIJ.sendKeys(cuij);
			
			lnkBuscar = Popup.findElement(By.id("commandLink1"));
			lnkBuscar.click();
			
			volverDelPopup();
		}
		
		public static void buscarExpedienteNumeroAnioPopup(String numeroAnio) {
			irAlPopup();
			NumeroAnio =  Popup.findElement(By.id("inputText3"));
			NumeroAnio.clear();
			NumeroAnio.sendKeys(numeroAnio);
			
			lnkBuscar = Popup.findElement(By.id("commandLink1"));
			lnkBuscar.click();
			
			volverDelPopup();
		}

		public static void nuevoPrestamoProfesionalLOTE_nuevaversion() {
			irAlFramePorDefecto();
			
			
			// Profesional
			Driver.EsperarDisponible(By.id("helper111"));
			
			lupaProfesional =  Driver.Instance.findElement(By.id("helper111"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			//Observaciones
			Driver.EsperarDisponible(By.id("inputText32"));	
			observaciones = Driver.Instance.findElement(By.id("inputText32"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			// Boton Agregar
			Driver.EsperarDisponible(By.id("table2:commandButton6112"));
			Driver.Instance.findElement(By.id("table2:commandButton6112")).click();
			
			// Primer CUIJ
			Driver.EsperarDisponible(By.id("table2:0:helperExpediente11"));
			lupaExpediente = Driver.Instance.findElement(By.id("table2:0:helperExpediente11"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

			
			// Segundo CUIJ			
			Driver.EsperarDisponible(By.id("table2:1:helperExpediente11"));
			lupaExpediente =  Driver.Instance.findElement(By.id("table2:1:helperExpediente11"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
				
			// Boton Finalizar
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static void PrestamoProfesionalConAcumulado() {
			irAlFramePorDefecto();
			
			
			// Profesional
			Driver.EsperarDisponible(By.id("helper111"));
			
			lupaProfesional =  Driver.Instance.findElement(By.id("helper111"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			//Observaciones
			Driver.EsperarDisponible(By.id("inputText32"));	
			observaciones = Driver.Instance.findElement(By.id("inputText32"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			// Boton Agregar
			Driver.EsperarDisponible(By.id("table2:commandButton6112"));
			Driver.Instance.findElement(By.id("table2:commandButton6112")).click();
			
			// CUIJ del expediente con acumulado
			Driver.EsperarDisponible(By.id("table2:0:helperExpediente11"));
			lupaExpediente = Driver.Instance.findElement(By.id("table2:0:helperExpediente11"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

			
			// Boton Finalizar
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
			
		}

		public static boolean verificarPrestamoProfesionalConAcumulado() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			
			
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ())))
					blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void PrestamoProfesionalDeAcumulado() {
			irAlFramePorDefecto();
			
			
			// Profesional
			Driver.EsperarDisponible(By.id("helper111"));
			
			lupaProfesional =  Driver.Instance.findElement(By.id("helper111"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			//Observaciones
			Driver.EsperarDisponible(By.id("inputText32"));	
			observaciones = Driver.Instance.findElement(By.id("inputText32"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			// Boton Agregar
			Driver.EsperarDisponible(By.id("table2:commandButton6112"));
			Driver.Instance.findElement(By.id("table2:commandButton6112")).click();
			
			// CUIJ del expediente acumulado
			Driver.EsperarDisponible(By.id("table2:0:helperExpediente11"));
			lupaExpediente = Driver.Instance.findElement(By.id("table2:0:helperExpediente11"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());

			
			// Boton Finalizar
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
			
			
		}

		public static boolean verificarPrestamoProfesionalDeAcumulado() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			
			
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ())))
					blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void MoviminentoInternoConCuerda() {
			
			irAlFramePorDefecto();
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
					, GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getPasarExpedientesA());

			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());

			Driver.Instance.findElement(By.id("commandButton2")).click();
		}

		public static boolean verificarMovimientoInternoConCuerda() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ())))
						blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void PaseConDependientes() {
			irAlFramePorDefecto();
			
			//Selector Tipo
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
			
			//Popup Expediente
			Driver.EsperarDisponible(By.id("helperExpediente"));
			Driver.Instance.findElement(By.id("helperExpediente")).click();
			buscarExpedienteNumeroAnioPopup(GestorDeDatosDePrueba.Expediente.getNumeroAnio());
			
			//Popup Enviar A
			lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
			lupaEnviarA.click();
			
			irAlPopup();

			codigo = obtenerPrimerObjetoAUsarEnElPopup("form1:inputText11");
			//codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			WebElement btnBuscarP = Popup.findElement(By.id("form1:commandLink1"));
			btnBuscarP.click();
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("checkIncidentes"));
			Driver.Instance.findElement(By.id("checkIncidentes")).click();
			Driver.EsperarDisponible(By.id("checkCuadernos"));
			Driver.Instance.findElement(By.id("checkCuadernos")).click();
			Driver.EsperarDisponible(By.id("checkConexos"));
			Driver.Instance.findElement(By.id("checkConexos")).click();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
						
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static boolean verificarPaseConDependientes() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			Driver.EsperarDisponible(By.id("form111:outputFormatted1"));
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getTercerCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCuartoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getQuintoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ()))
				&& !(mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ())))
						blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void CambioRadicacionConAcumulados() {
			
			irAlFramePorDefecto();
		
			Driver.EsperarDisponible(By.id("selectOneChoice31"));
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
			
			/* Añadido por inclusion de "PASE A OFICINA DE TRAMITES SUCESORIOS" en combo Tipo */
			wSelector = null;
			wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getClave());
			/* ------ */
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
			lupaRemitirA.click();

			irAlPopup();
			codigo =  Popup.findElement(By.id("form1:inputText11"));
			codigo.clear();
			codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
			
			Popup.findElement(By.id("form1:commandLink1")).click();
			
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			
			Driver.Instance.findElement(By.id("commandButton2")).click(); 
			
			// Hasta aqui cambio de radicacion en lote del primer CUIJ (y en consecuencia su acumulado) , 
						
						
			// Cambio a Juzgado Destino
			GestorBase.CambiaAJuzgado(GestorDeDatosDePrueba.Expediente.getJuzgado());
			
			// El libro de cargos debe estar abierto como prerequisito. De momento lo hacemos manual
			// Apertura Libro de cargos
			
			// Crear cargo con relacion para recibir expediente con movimiento a TRAMITE INTERNO
			
			//Espero 1 minuto para que la hora con la que se crea el cargo sea mayor al cambio de radicacion, sino se produce error
            try {
                Thread.sleep(60000);
            } catch (InterruptedException e) {
                   e.printStackTrace();
            }
            
            // Cambio por inicio de cargos desde bandeja de entrada (desde v4.1.55)
			//PgnListaDeCargos.Ir();
            PgnCargosBandeja.Ir();
                       
			irAlFramePorDefecto();
			
			// Cambio por inicio de cargos desde bandeja de entrada (desde v4.1.55)
			//WebElement btnNuevo =  Driver.Instance.findElement(By.id("form2:menuBar1:commandButton1"));
			//btnNuevo.click();
			Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
			
			// Se podria añadir un minuto a la hora para evitar la espera. Hay que usar una clase para convertir y añadir minutos... 
			/*WebElement hora =  Driver.Instance.findElement(By.id("inputText1"));
			String horaStr = hora.getText().toString();
			
						
			/*Para sumar un minuto
			SimpleDateFormat df = new SimpleDateFormat("HH:mm");
			Date horaDate = null;
			try {
				horaDate = df.parse(horaStr);
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
			Calendar cal = Calendar.getInstance();
			cal.setTime(horaDate);
			cal.add(Calendar.MINUTE, 1);
			String horaFin = df.format(cal.getTime());
			
						
			
			hora.clear();
			hora.sendKeys(horaStr);
						
			*/
				
			
			
			WebElement presentante =  Driver.Instance.findElement(By.id("inputPrimerPresentante"));
			presentante.clear();
			presentante.sendKeys(GestorDeDatosDePrueba.Expediente.getPresentante());
		
			WebElement solicita =  Driver.Instance.findElement(By.id("inputText2"));
			solicita.clear();
			solicita.sendKeys(GestorDeDatosDePrueba.Expediente.getSolicita());
			
			Select wSelector = null;
			WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice3"));
			wSelector = new Select(tipo);
			wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
						
			WebElement btnSiguiente =  Driver.Instance.findElement(By.id("commandButton13"));
			btnSiguiente.click();
			/*
			WebElement btnBuscarExpediente =  Driver.Instance.findElement(By.id("objectImage2"));
			btnBuscarExpediente.click();
		
			irAlPopup();
			
			WebElement cuij =  Popup.findElement(By.xpath("id('inputText1')"));
			cuij.clear();
			cuij.sendKeys(GestorDeDatosDePrueba.Expediente.getCUIJ());
			
			WebElement lnkBuscar = Popup.findElement(By.id("commandLink1"));
			lnkBuscar.click();
			
			volverDelPopup();*/

			Select wSelector2 = null;
			WebElement ubicacion = Driver.Instance.findElement(By.id("selectOneChoice6"));
			wSelector2 = new Select(ubicacion);
			wSelector2.selectByVisibleText("EN TRAMITE INTERNO");
			
					
			Driver.EsperarDisponible(By.id("commandButton2"));
			Driver.Instance.findElement(By.id("commandButton2")).click();
					
			
			Driver.EsperarDisponible(By.id("commandButton11"));		
			Driver.Instance.findElement(By.id("commandButton11")).click();
			
			
			// En Juzgado destino voy al expediente acumulado y en el assert verifico que esta en el Juzgado y en TRAMITE INTERNO
			
			irAlFrameBuscador();
			
			WebElement cajaDeBusqueda = Driver.Instance.findElement(By.id("inputText1"));
			cajaDeBusqueda.clear();
			cajaDeBusqueda.sendKeys(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());
			
			Driver.Instance.findElement(By.id("commandButton1")).click();
			
			
		}

		public static boolean verificarCambioRadicacionConAcumulados() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			Driver.EsperarDisponible(By.id("form1:outputFormatted3"));
			
			WebElement mensaje = Driver.Instance.findElement(By.id("form1:outputFormatted3"));
			
			if ((mensaje.getText().contains("Ultima ubicación en el Organismo"))  
				&& (mensaje.getText().contains("EN TRAMITE INTERNO")))
							blnVerificado = true;
					
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form1:outputFormatted3")).getText());
								
			return blnVerificado;
		}

		public static void imprimirCaratula() {
			irAlFramePorDefecto();
			Driver.EsperarDisponible(By.id("form1:commandLinkCaratula"));
			Driver.Instance.findElement(By.id("form1:commandLinkCaratula")).click();
		}

		public static boolean verificarImprimirCaratula() {
			boolean blnCargoCerrado = true;
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Imprimir Caratula de Eexpediente ", 	GestorDeDatosDePrueba.Expediente.getCUIJ());
			GestorDeDatosTestigo.agregarTextoDatosTestigo("Se realizó una verificación manual de esta prueba. ", " ");			
			return blnCargoCerrado;
		}

		public static void PrestamoProfesionalConAcumulado_versionvieja() {
			irAlFramePorDefecto();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getCUIJ());

			Driver.EsperarDisponible(By.id("helper11"));
						
			lupaProfesional =  Driver.Instance.findElement(By.id("helper11"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			
			Driver.Instance.findElement(By.id("commandButton2")).click();
			
		}

		public static boolean verificarPrestamoProfesionalConAcumulado_versionvieja() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ())))
					blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void PrestamoProfesionalDeAcumulado_versionvieja() {
			irAlFramePorDefecto();
			
			Driver.EsperarDisponible(By.id("helperExpediente"));
			lupaExpediente = Driver.Instance.findElement(By.id("helperExpediente"));
			lupaExpediente.click();
			buscarExpedientePopup(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ());

			Driver.EsperarDisponible(By.id("helper11"));
						
			lupaProfesional =  Driver.Instance.findElement(By.id("helper11"));
			lupaProfesional.click();
			
			irAlPopup();
			
			matricula = Popup.findElement(By.id("inputText3"));
			matricula.clear();
			matricula.sendKeys(GestorDeDatosDePrueba.Expediente.getMatricula());
			
			Popup.findElement(By.id("commandLink1")).click();
			
			volverDelPopup();
			
			Driver.EsperarDisponible(By.id("inputText3"));	
			observaciones = Driver.Instance.findElement(By.id("inputText3"));
			observaciones.clear();
			observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
			
			btnSiguiente =  Driver.Instance.findElement(By.id("commandButton1"));
			btnSiguiente.click();
			
			
			Driver.Instance.findElement(By.id("commandButton2")).click();
					}

		public static boolean verificarPrestamoProfesionalDeAcumulado_versionvieja() {
			blnVerificado = false;		
			
			irAlFramePorDefecto();
			
			fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[@class='x20 AFHeaderAlias']"));
			WebElement mensaje = Driver.Instance.findElement(By.id("form111:outputFormatted1"));
			
			if ((fraseConfirma.getText().contains(cadenaParcial))  
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getSegundoCUIJ()))
				&& (mensaje.getText().contains(GestorDeDatosDePrueba.Expediente.getCUIJ())))
					blnVerificado = true;
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, fraseConfirma.getText());
			
			GestorDeDatosTestigo.agregarTextoDatosTestigo(""
					, Driver.Instance.findElement(By.id("form111:outputFormatted1")).getText());
								
			return blnVerificado;
		}

		public static void creaYFirmaAuto() {
			irAlFramePorDefecto();
			
			// Link Actuaciones
			Driver.EsperarDisponible(By.id("form1:commandLink121211"));
			Driver.Instance.findElement(By.id("form1:commandLink121211")).click();
			
			// Link Crear Auto
			Driver.EsperarDisponible(By.id("form1:commandLink21212"));
			Driver.Instance.findElement(By.id("form1:commandLink21212")).click();
			
			// NUEVO
			// Modelo
			WebElement modelo =  Driver.Instance.findElement(By.id("form11:inputText4"));
			modelo.clear();
			modelo.sendKeys(GestorDeDatosDePrueba.Cargo.getModelo());
			
			// Boton Modelo Buscar
			Driver.EsperarDisponible(By.id("form11:commandButton111"));
			Driver.Instance.findElement(By.id("form11:commandButton111")).click();
			
			// Comentado por modificacion para buscar por "AUTOS VARIOS"
			// Boton Siguiente Modelo
			// El tercer modelo es "AUTO CADUCIDAD DEL PROCESO" que funciona correctamente para la prueba
			//Driver.EsperarDisponible(By.id("form11:botonSiguiente"));
			//Driver.Instance.findElement(By.id("form11:botonSiguiente")).click();
			//Driver.EsperarDisponible(By.id("form11:botonSiguiente"));
			//Driver.Instance.findElement(By.id("form11:botonSiguiente")).click();
			
			
			// Boton Siguiente
			Driver.EsperarDisponible(By.id("form11:commandButton31"));
			Driver.Instance.findElement(By.id("form11:commandButton31")).click();
			
			// Boton Finalizar
			Driver.EsperarDisponible(By.id("form1:commandButton3111"));
			Driver.Instance.findElement(By.id("form1:commandButton3111")).click();
						
			// Boton Ficha de Actuaciones
			Driver.EsperarDisponible(By.id("form1:table1:menuBar2:commandButton2"));
			Driver.Instance.findElement(By.id("form1:table1:menuBar2:commandButton2")).click();
			
			// Boton Firmar
			Driver.EsperarDisponible(By.id("form1:commandLink1"));
			Driver.Instance.findElement(By.id("form1:commandLink1")).click();
			
			// Espera 2 segundos
	        try {
	               Thread.sleep(2000);
	        } catch (InterruptedException e) {
	                e.printStackTrace();
	        }
	        
			 //Popup Datos de firma
	        irAlPopup();
			
	        // Combo Mas acciones/Ver expedientes
	        Select wSelector2 = null;
	        WebElement firmante =  Popup.findElement(By.id("selectOneChoice1"));
			wSelector2 = new Select(firmante);
			wSelector2.selectByVisibleText(GestorDeDatosDePrueba.Cargo.getFirmanteInst3().toString());
			
			WebElement lnkBuscar3 = Popup.findElement(By.id("commandButton1"));
	      	lnkBuscar3.click();
	      		
	      	volverDelPopup();
		}

		// Devoluciones
				public static void devolucionPaseFechaMenor() {
					irAlFramePorDefecto();
					
					GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
							, GestorDeDatosDePrueba.Expediente.getCUIJ());
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink12121132")).click();

					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
					
					lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
					lupaEnviarA.click();
					
					irAlPopup();
					
					try {	
						codigo =  Popup.findElement(By.id("form1:inputText11"));
						
					}  catch(NoSuchElementException e){
						System.out.println(e.getMessage());
						
						volverDelPopup();
						irAlPopup();
						
						codigo =  Popup.findElement(By.id("form1:inputText11"));
					}
					codigo.clear();
					codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
					
					lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
					lnkBuscar.click();
					
					volverDelPopup();
					
					Driver.EsperarDisponible(By.id("selectInputDate1"));
					fecha = Driver.Instance.findElement(By.id("selectInputDate1"));
					fecha.clear();
					fecha.sendKeys(GestorDeDatosDePrueba.Expediente.getFecha());

					
					Driver.EsperarDisponible(By.id("inputText3"));
					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
					
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
					// Hasta aqui Pase
					// Empieza Devolucion
					
					PgnFichaExpediente.IrAExpediente();
					irAlFramePorDefecto();
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());

					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
											
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
					// Hasta aqui Devolucion
					// creamos y firmamos actuacion
					
					//creaYFirmaAuto();
					
					// Se debe verificar que crea y firma correctamente una actuacion
					
					// Vamos a expedietne y radicaciones, debe tener solo la incial (no se debe generar una nueva)
					
					irAExpediente();
					irAlFramePorDefecto();
					
					
					// Limk Radicaciones
					Driver.Instance.findElement(By.id("form1:commandLink121211112")).click();
					
					
				}

				public static boolean verificaDevolucionPaseFechaMenor() {
					boolean blnVerificado = false;
					
					irAlFramePorDefecto();
					// Verificamos que la ultima radicacion es en CyC1, es decir no se genero una nueva radicacion en CyC2
					if (Driver.Instance.findElement(By.id("form2:table1:0:outputText5")).getText()
							.contains("Juzg. 1ra. Inst. Civil y Comercial 1ra. Nom."))
					{
						blnVerificado = true;
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control en organismo implementado con fecha posterior ", "OK");
					} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control  en organismo implementado con fecha posterior ", "NO OK");
					
					return blnVerificado;
					
				}

				public static void devolucionPaseFechaMayor() {
					irAlFramePorDefecto();
					
					GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
							, GestorDeDatosDePrueba.Expediente.getCUIJ());
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink12121132")).click();

					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
					
					lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
					lupaEnviarA.click();
					
					irAlPopup();
					
					try {	
						codigo =  Popup.findElement(By.id("form1:inputText11"));
						
					}  catch(NoSuchElementException e){
						System.out.println(e.getMessage());
						
						volverDelPopup();
						irAlPopup();
						
						codigo =  Popup.findElement(By.id("form1:inputText11"));
					}
					codigo.clear();
					codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
					
					lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
					lnkBuscar.click();
					
					volverDelPopup();
					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
					
					/*// Añadido por cambiar a Organismo Menores en Rosario. Se debe probar en Santa Fe. 
					Select wSelector = null;
					WebElement tipo = Driver.Instance.findElement(By.id("selectOneChoice1"));
					wSelector = new Select(tipo);
					wSelector.selectByIndex(1);*/
					
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
					// Hasta aqui Pase
					// Empieza Devolucion
					
					PgnFichaExpediente.IrAExpediente();
					irAlFramePorDefecto();
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());

					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
											
					Driver.Instance.findElement(By.id("commandButton2")).click();
				}

				public static boolean verificaDevolucionPaseFechaMayor() {
					boolean blnVerificado = false;
					
					irAlFramePorDefecto();
					
					if (Driver.Instance.findElement(By.className("x9c")).getText()
							.contains("No se puede realizar la devolución, el expediente se encuentra en un organismo implementado."))
					{
						blnVerificado = true;
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control ", "OK");
					} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control ", "NO OK");
					
					return blnVerificado;
				}
		/*
				public static void devolucionPaseDosOrganismos() {
					irAlFramePorDefecto();
					
					GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
							, GestorDeDatosDePrueba.Expediente.getCUIJ());
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink12121132")).click();

					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
					
					lupaEnviarA =  Driver.Instance.findElement(By.id("helper"));
					lupaEnviarA.click();
					
					irAlPopup();
					
					try {	
						codigo =  Popup.findElement(By.id("form1:inputText11"));
						
					}  catch(NoSuchElementException e){
						System.out.println(e.getMessage());
						
						volverDelPopup();
						irAlPopup();
						
						codigo =  Popup.findElement(By.id("form1:inputText11"));
					}
					codigo.clear();
					codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
					
					lnkBuscar = Popup.findElement(By.id("form1:commandLink1"));
					lnkBuscar.click();
					
					volverDelPopup();
					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
					
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
					// Pase hasta aqui
					// Cambio a CyC3 y se recibe con un cargo desde bandeja de expedientes pendientes
					
					
					
				}

				public static boolean verificaDevolucionPaseDosOrganismos() {
					// TODO Auto-generated method stub
					return false;
				}
		*/
				public static void devolucionCambioFechaMenor() {
					irAlFramePorDefecto();
					
					GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
							, GestorDeDatosDePrueba.Expediente.getCUIJ());
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink121211122")).click();
					
					/* Añadido por inclusion de "PASE A OFICINA DE TRAMITES SUCESORIOS" en combo Tipo */
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
					/* ------ */
					
					lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
					lupaRemitirA.click();

					irAlPopup();
					
					codigo =  Popup.findElement(By.id("form1:inputText11"));
					codigo.clear();
					codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
					
					Popup.findElement(By.id("form1:commandLink1")).click();
					
					volverDelPopup();
					Driver.EsperarDisponible(By.id("selectOneChoice31"));
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
					
					volverDelPopup();
					
					Driver.EsperarDisponible(By.id("selectInputDate1"));
					fecha = Driver.Instance.findElement(By.id("selectInputDate1"));
					fecha.clear();
					fecha.sendKeys(GestorDeDatosDePrueba.Expediente.getFecha());

					
					Driver.EsperarDisponible(By.id("inputText3"));
					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
								
					Driver.Instance.findElement(By.id("commandButton2")).click();

					// Hasta aqui Pase
					// Empieza Devolucion
					
					PgnFichaExpediente.IrAExpediente();
					irAlFramePorDefecto();
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());

					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
											
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
					// Fin Devolucion
					
					PgnFichaExpediente.IrAExpediente();
					irAlFramePorDefecto();
					
					// Link radicaciones
					Driver.Instance.findElement(By.id("form1:commandLink121211112")).click();
				}

				public static boolean verificaDevolucionCambioFechaMenor() {
					boolean blnVerificado = false;
					
					String fechaRad = GestorDeDatosDePrueba.Expediente.getFecha();
					
					irAlFramePorDefecto();
					// Verificamos que la ultima radicacion es en CyC1 y el Motivo es OTRO (RAD_MOTIVO = 99) falta confirmar que siempre 99 es igual a OTRO en aplicacion.
					// Ademas la radicacion anterior debe tener la Fecha del excel y Motivo DILIGENCIADO
					// Asi confirmamos que se hizo una primera radicacion por cambio de radicacion y una segunda por la devolucion con motivo = OTRO
					if ((Driver.Instance.findElement(By.id("form2:table1:0:outputText5")).getText().contains("Juzg. 1ra. Inst. Civil y Comercial 1ra. Nom.")) && //Organismo
					(Driver.Instance.findElement(By.id("form2:table1:0:outputText9")).getText().contains("OTRO")) &&											//Segundo Motivo
					(Driver.Instance.findElement(By.id("form2:table1:1:outputText4")).getText().contains(fechaRad)) &&										   //Fecha de radicacion
					(Driver.Instance.findElement(By.id("form2:table1:1:outputText9")).getText().contains("DILIGENCIADO")))									  //Primer Motivo
					{
						blnVerificado = true;
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control en organismo implementado con fecha posterior ", "OK");
					} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras pase con control  en organismo implementado con fecha posterior ", "NO OK");
					
					return blnVerificado;
				}

				public static void devolucionCambioFechaMayor() {
					irAlFramePorDefecto();
					
					GestorDeDatosTestigo.agregarTextoDatosTestigo("Expediente"
							, GestorDeDatosDePrueba.Expediente.getCUIJ());
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink121211122")).click();
					
					/* Añadido por inclusion de "PASE A OFICINA DE TRAMITES SUCESORIOS" en combo Tipo */
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getTipo());
					/* ------ */
					
					lupaRemitirA =  Driver.Instance.findElement(By.id("helper"));
					lupaRemitirA.click();

					irAlPopup();
					
					codigo =  Popup.findElement(By.id("form1:inputText11"));
					codigo.clear();
					codigo.sendKeys(GestorDeDatosDePrueba.Expediente.getEnviarA());
					
					Popup.findElement(By.id("form1:commandLink1")).click();
					
					volverDelPopup();
					Driver.EsperarDisponible(By.id("selectOneChoice31"));
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice31")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getMotivo());
					
					volverDelPopup();
					

					Driver.EsperarDisponible(By.id("inputText3"));
					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
								
					Driver.Instance.findElement(By.id("commandButton2")).click();

					// Hasta aqui Pase
					// Empieza Devolucion
					
					PgnFichaExpediente.IrAExpediente();
					irAlFramePorDefecto();
					
					Driver.Instance.findElement(By.id("form1:commandLink12121112")).click();
					Driver.Instance.findElement(By.id("form2:commandLink1212112112")).click();
					
					wSelector = null;
					wSelector = new Select(Driver.Instance.findElement(By.id("selectOneChoice3")));
					wSelector.selectByVisibleText(GestorDeDatosDePrueba.Expediente.getDevolver());

					Driver.EsperarDisponible(By.id("inputText3"));

					observaciones = Driver.Instance.findElement(By.id("inputText3"));
					observaciones.clear();
					observaciones.sendKeys(GestorDeDatosDePrueba.Expediente.getObservaciones());
											
					Driver.Instance.findElement(By.id("commandButton2")).click();
					
				}

				public static boolean verificaDevolucionCambioFechaMayor() {
					boolean blnVerificado = false;
					
					irAlFramePorDefecto();
					
					if (Driver.Instance.findElement(By.className("x9c")).getText()
							.contains("No se puede realizar la devolución, el expediente se encuentra en un organismo implementado."))
					{
						blnVerificado = true;
						GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras cambio de radicación ", "OK");
					} else GestorDeDatosTestigo.agregarTextoDatosTestigo("Devolución tras cambio de radicación ", "NO OK");
					
					return blnVerificado;
				}


	}
