package com.indra.pjsf.tf.datos;

import java.util.Random;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;

import com.indra.pjsf.tf.Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnNuevoCargo;
import com.indra.pjsf.tf.workflows.GestorBase;
import com.indra.pjsf.tf.workflows.GestorDeCargos;
import com.indra.pjsf.tf.workflows.GestorDeExpedientes;


public class GeneradorDeDatosDePrueba {
	
	private static Select wSelector;
	
	//IMPORTANTE: LIBRO DE CARGOS DEBE ESTAR ABIERTO
	
	public static void generarCUIJS () {
		
		int cantidad = 10; 
		
		GestorDeDatosDePrueba.Ejecucion.CargarParametrosDeEjecucion();
		GestorDeDatosDePrueba.Ejecucion.CargaExcelResultados();
		Driver.Iniciar();
		
		System.out.println("INICIO DE GENERACION DE CUIJS");
		
		GestorDeDatosDePrueba.obtenerDatosDelCaso.obtenerDatos(entidades.Cargo, "GE-002.005");
		PgnNuevoCargo.IrDesdePrincipal(); 
		
		for (int i = 1; i <= cantidad; i++){
			
			GestorDeCargos.CrearExpedienteNuevo();
			
			if (verificarExpedienteNuevoCreado()){
				System.out.println(Driver.Instance.findElement
						(By.id("form1:inputText1")).getText().toString());
				}
			
			PgnNuevoCargo.Ir();
			
			}
		Driver.CerrarSesion();
		Driver.Cerrar();
		System.out.println("FIN DE GENERACION DE CUIJS");
	}

	public static boolean verificarExpedienteNuevoCreado() {
		boolean blnExpedienteNuevo = false;
		final String fraseConfirmaParcial = "correctamente";
		
		Driver.Instance.switchTo().defaultContent();
		Driver.Instance.switchTo()
		.frame(Driver.Instance.findElement(By.name("ge_application_dispatcher")));
		
		WebElement fraseConfirma = Driver.Instance.findElement(By.xpath("//h1[contains(.,'Nuevo expediente registrado correctamente')]"));
		if (fraseConfirma.getText().contains(fraseConfirmaParcial))
			blnExpedienteNuevo = true;
		
		return blnExpedienteNuevo;
	}
	
	public static void generarDatosAgrupadosMovimientos() {
		
		/*
		- GE.003.021:
			- Generar exp1
			- Generar exp2
			- Desde exp1? acumular el exp2
	
			exp1 va en ='GE-003.021.001'!C6
			exp2 va en ='GE-003.021.001'!C7

		- GE.003.023:
			- Generar exp3
			- Generar exp4
			- Desde exp3? unir por cuerda el exp4
	
			exp3 va en ='GE-003.023.001'!C7
			exp4 va en ='GE-003.023.001'!C8
	
		- GE.003.024:
			- Generar exp5
			- Asignar mmdd/año como numero/año de ese expediente
			- Crear legajo de copia de exp5
			- Crear incidente de exp5
			- Crear cuaderno de prueba de exp5
			- Generar exp6
			- Desde exp5? crear conexo con exp6
		
			exp5 va en ='GE-003.024.001'!C8
			y asi sucesivamente...
		*/
		
		String exp1 = null,exp2 = null,exp3 = null,exp4 = null,exp5 = null, exp6 = null;
		
		GestorDeDatosDePrueba.Ejecucion.CargarParametrosDeEjecucion();
		GestorDeDatosDePrueba.Ejecucion.CargaExcelResultados();
		Driver.Iniciar();
		
		System.out.println("INICIO DE GENERACION DE DATOS PARA MOVIMIENTOS DE AGRUPADOS");
		System.out.println("-----------------------------------------------------------");
		
		GestorDeDatosDePrueba.obtenerDatosDelCaso.obtenerDatos(entidades.Cargo, "GE-002.005");
		PgnNuevoCargo.IrDesdePrincipal(); 
		
		// INICIO PARA GE.003.021
		GestorDeCargos.CrearExpedienteNuevo();
		exp1 = dimeCUIJ();
		PgnNuevoCargo.Ir();
		GestorDeCargos.CrearExpedienteNuevo();
		exp2 = dimeCUIJ();
		
		GestorDeCargos.irAExpediente(exp1);
		GestorBase.irAlFramePorDefecto();
		
		// Boton Acumulados
		Driver.EsperarDisponible(By.id("form1:commandLink121211121"));
		Driver.Instance.findElement(By.id("form1:commandLink121211121")).click();
		
		GestorBase.irAlFramePorDefecto();
		
		// Boton Nuevo
		Driver.EsperarDisponible(By.id("form1:menuBar1:commandButton1"));
		Driver.Instance.findElement(By.id("form1:menuBar1:commandButton1")).click();
		
		// Lupa Expediente
		Driver.EsperarDisponible(By.id("form11:helper1"));
		Driver.Instance.findElement(By.id("form11:helper1")).click();
		
		// Popup expediente
		GestorDeExpedientes.buscarExpedientePopup(exp2);
		
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
				
		System.out.println("Para GE.003.021");
		System.out.println("Expediente con un acumulado: "+exp1);
		System.out.println("Expediente acumulado del anterior: "+exp2);
		System.out.println(" ");
		// FIN PARA GE.003.021
	
		// INICIO PARA GE.003.023
		PgnNuevoCargo.Ir();
		GestorDeCargos.CrearExpedienteNuevo();
		exp3 = dimeCUIJ();
		PgnNuevoCargo.Ir();
		GestorDeCargos.CrearExpedienteNuevo();
		exp4 = dimeCUIJ();
		
		GestorDeCargos.irAExpediente(exp3);
		GestorBase.irAlFramePorDefecto();
		
		// Boton Referencias
		Driver.EsperarDisponible(By.id("form1:commandLink1212123"));
		Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
		
		GestorBase.irAlFramePorDefecto();
		
		// Boton Nuevo
		Driver.EsperarDisponible(By.id("form2:menuBar1:commandButton11"));
		Driver.Instance.findElement(By.id("form2:menuBar1:commandButton11")).click();
		
		// Combo Tipo y elijo Cuerda
		Driver.EsperarDisponible(By.id("form11:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("form11:selectOneChoice1")));
		wSelector.selectByVisibleText("Cuerda");
		
		// Lupa Expediente
		Driver.EsperarDisponible(By.id("form11:helper"));
		Driver.Instance.findElement(By.id("form11:helper")).click();
		
		// Popup expediente
		GestorDeExpedientes.buscarExpedientePopup(exp4);
		
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
				
		System.out.println("Para GE.003.023");
		System.out.println(exp3+" esta unido por cuerda con "+exp4);
		System.out.println(" ");
		// FIN PARA GE.003.023

		// INICIO PARA GE.003.025
		PgnNuevoCargo.Ir();
		GestorDeCargos.CrearExpedienteNuevo();
		exp5 = dimeCUIJ();
		
		GestorDeCargos.irAExpediente(exp5);
		GestorBase.irAlFramePorDefecto();
		
		// Boton otros numeros y caratulas
		Driver.EsperarDisponible(By.id("form1:commandLink2"));
		Driver.Instance.findElement(By.id("form1:commandLink2")).click();
		
		// Boton otros numeros y caratulas
		Driver.EsperarDisponible(By.id("form2:table1:menuBar2:commandButton2"));
		Driver.Instance.findElement(By.id("form2:table1:menuBar2:commandButton2")).click();
		
		// Numero
		WebElement numero =  Driver.Instance.findElement(By.id("form111:inputText2"));
		numero.clear();
		// alestring = numero aleatorio de 5 cifras
		Random random = new Random();
		int ale = 10000 + random.nextInt(89999);
		String alestring = String.valueOf(ale);
		numero.sendKeys(alestring.toString());
		
		// Año
		String fecha = Driver.Instance.findElement(By.id("form111:selectInputDate1")).getText().toString();
		// De la fecha con formato DD/MM/AAAA tomo el substring de 7 a 10.
		String fecha2 = fecha.substring(6, 10);
		WebElement anio =  Driver.Instance.findElement(By.id("form111:inputText4"));
		anio.clear();
		anio.sendKeys(fecha2);
	
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form111:menuBar11:commandButton112"));
		Driver.Instance.findElement(By.id("form111:menuBar11:commandButton112")).click();
		
		
		// Boton Ir a Exp
		Driver.EsperarDisponible(By.id("form2:commandLink2"));
		Driver.Instance.findElement(By.id("form2:commandLink2")).click();
		
		
		// Boton Crea Legajo de copia
		Driver.EsperarDisponible(By.id("form1:commandLink1212"));
		Driver.Instance.findElement(By.id("form1:commandLink1212")).click();
		
		
		// Boton Si confirmacion
		Driver.EsperarDisponible(By.id("form111:commandButton3111"));
		Driver.Instance.findElement(By.id("form111:commandButton3111")).click();
		
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form111:menuBar111:commandButton1121"));
		Driver.Instance.findElement(By.id("form111:menuBar111:commandButton1121")).click();
		
		String numanio = alestring+"/"+fecha2;
		GestorDeCargos.irAExpediente(numanio);
		GestorBase.irAlFramePorDefecto();
		
		// Boton Incidente
		Driver.EsperarDisponible(By.id("form1:commandLink122"));
		Driver.Instance.findElement(By.id("form1:commandLink122")).click();
		
		
		// Fecha radicacion
		GestorBase.irAlFramePorDefecto();
		Driver.EsperarDisponible(By.id("form2:selectInputDate11"));
		String rad = Driver.Instance.findElement(By.id("form2:selectInputDate11")).getAttribute("value").toString();
		Driver.EsperarDisponible(By.id("form2:selectInputDate2"));
		Driver.Instance.findElement(By.id("form2:selectInputDate2")).sendKeys(rad);
				
		
		// Combo Modo
		Driver.EsperarDisponible(By.id("form2:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("form2:selectOneChoice1")));
		wSelector.selectByVisibleText("Inicio manual");
		
		// Combo Materia principal
		Driver.EsperarDisponible(By.id("form2:selectOneChoice21"));
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("form2:selectOneChoice21")));
		wSelector.selectByVisibleText("APREMIO");
		
		// Combo Ubicacion Actual
		Driver.EsperarDisponible(By.id("form2:selectOneChoice3"));
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("form2:selectOneChoice3")));
		wSelector.selectByVisibleText("EN CASILLERO");
		
		// Boton Finalizar
		Driver.EsperarDisponible(By.id("form2:commandButton3111"));
		Driver.Instance.findElement(By.id("form2:commandButton3111")).click();
		
		
		// Boton Cerrar
		Driver.EsperarDisponible(By.id("form2:commandButton311"));
		Driver.Instance.findElement(By.id("form2:commandButton311")).click();
		
		/*----*/
		
		// Boton Crea Cuaderno de prueba
		Driver.EsperarDisponible(By.id("form1:commandLink12111"));
		Driver.Instance.findElement(By.id("form1:commandLink12111")).click();
				
				
		// Boton Si confirmacion
		Driver.EsperarDisponible(By.id("form111:commandButton3111"));
		Driver.Instance.findElement(By.id("form111:commandButton3111")).click();
				
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form111:menuBar111:commandButton1121"));
		Driver.Instance.findElement(By.id("form111:menuBar111:commandButton1121")).click();
				
		/*----*/
		/* Creamos un nuevo expediente para conexo */
			
		PgnNuevoCargo.Ir();
		GestorDeCargos.CrearExpedienteNuevo();
		exp6 = dimeCUIJ();
		
		/*---*/
		
		GestorDeCargos.irAExpediente(numanio);
		GestorBase.irAlFramePorDefecto();
		
		// Boton Referencias
		Driver.EsperarDisponible(By.id("form1:commandLink1212123"));
		Driver.Instance.findElement(By.id("form1:commandLink1212123")).click();
				
		GestorBase.irAlFramePorDefecto();
				
		// Boton Nuevo
		Driver.EsperarDisponible(By.id("form2:menuBar1:commandButton11"));
		Driver.Instance.findElement(By.id("form2:menuBar1:commandButton11")).click();
				
		// Combo Tipo y elijo Cuerda
		Driver.EsperarDisponible(By.id("form11:selectOneChoice1"));
		wSelector = null;
		wSelector = new Select(Driver.Instance.findElement(By.id("form11:selectOneChoice1")));
		wSelector.selectByVisibleText("Conexidad");
				
		// Lupa Expediente
		Driver.EsperarDisponible(By.id("form11:helper"));
		Driver.Instance.findElement(By.id("form11:helper")).click();
				
		// Popup expediente
		GestorDeExpedientes.buscarExpedientePopup(exp6);
				
		// Boton Guardar
		Driver.EsperarDisponible(By.id("form11:menuBar1:commandButton1"));
		Driver.Instance.findElement(By.id("form11:menuBar1:commandButton1")).click();
		
		/* --- */
		
		System.out.println("Para GE.003.024");
		System.out.println("Expediente principal: "+exp5);
		System.out.println("Numero/Año: "+alestring+"/"+fecha2);
		System.out.println("Legajo de copia: "+exp5+"/1");
		System.out.println("Incidente: "+exp5+"/2");
		System.out.println("Cuaderno de prueba: "+exp5+"/3");
		System.out.println("Conexo: "+exp6);
		
		
		
		
		// FIN PARA GE.003.025

		Driver.CerrarSesion();
		Driver.Cerrar();
		System.out.println("-----------------------------------------------------------");
		System.out.println("FIN DE GENERACION DE DATOS PARA MOVIMIENTOS DE AGRUPADOS");
		
		
	}
	
	public static String dimeCUIJ() {
		
		Driver.Instance.switchTo().defaultContent();
		Driver.Instance.switchTo().frame(Driver.Instance.findElement(By.name("ge_application_dispatcher")));
		
		return Driver.Instance.findElement(By.id("form1:inputText1")).getText().toString();
		
	}
	
}
