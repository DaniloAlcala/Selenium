package com.indra.pjsf.pruebas;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.Ignore;

import org.junit.runners.MethodSorters;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.MESA_PgnAperturaCierreCargos;
import com.indra.pjsf.tf.paginas.MESA_PgnInformeControlCargos;
import com.indra.pjsf.tf.paginas.MESA_PgnListaDeCargos;
import com.indra.pjsf.tf.paginas.MESA_PgnNuevoCargo;



@FixMethodOrder(MethodSorters.NAME_ASCENDING)


public class MESA_CargosTest extends MESA_TestBase {

	@Test
	public void A_ME_001_001_Abrir_Libro_Cargos(){
		codigo = "ME-001.001";
		prepararDatos(entidades.Cargo);
						
		MESA_PgnAperturaCierreCargos.irDesdePrincipal();
		MESA_PgnAperturaCierreCargos.abrirLibroCargos();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				MESA_PgnAperturaCierreCargos.verificarLibroCargosAbierto());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void G_ME_001_002_Cerrar_Libro_Cargos(){
		codigo = "ME-001.002";
		prepararDatos(entidades.Cargo);
		
		MESA_PgnAperturaCierreCargos.ir();
		//MESA_PgnAperturaCierreCargos.irDesdePrincipal(); //Tempo por prueba unitaria
		MESA_PgnAperturaCierreCargos.cerrarLibroCargos();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnAperturaCierreCargos.verificarLibroCargosCerrado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
			
	}
	
	@Test
	public void A_ME_001_003_Crear_Cargo_SR(){
		codigo = "ME-001.003";
		prepararDatos(entidades.Cargo);
						
		MESA_PgnNuevoCargo.ir();
		//MESA_PgnNuevoCargo.irDesdePrincipal();
		MESA_PgnNuevoCargo.crearCargoSR();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				MESA_PgnNuevoCargo.verificarCrearCargo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}
	
	@Test
	public void A_ME_001_004_Crear_Cargo_CR(){
		codigo = "ME-001.004";
		prepararDatos(entidades.Cargo);
						
		MESA_PgnNuevoCargo.ir();
		//MESA_PgnNuevoCargo.irDesdePrincipal();
		MESA_PgnNuevoCargo.crearCargoCR();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
				MESA_PgnNuevoCargo.verificarCrearCargo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_ME_001_005_Crear_Expediente_Nuevo(){
		codigo = "ME-001.005";
		prepararDatos(entidades.Cargo);
				
		MESA_PgnNuevoCargo.ir();
		//MESA_PgnNuevoCargo.irDesdePrincipal(); // Tempor por prueba unitaria
		MESA_PgnNuevoCargo.CrearExpedienteNuevo();
				
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnNuevoCargo.verificarExpedienteNuevoCreado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	}

	@Test
	public void A_ME_001_006_Consultar_Cargos_PF(){
		codigo = "ME-001.006";
		prepararDatos(entidades.Cargo);
		
		MESA_PgnListaDeCargos.Ir();
		//MESA_PgnListaDeCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		MESA_PgnListaDeCargos.ConsultarCargoPF();
		
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnListaDeCargos.verificarListadoOK());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	
	@Test
	public void A_ME_001_007_Modificar_Cargos() {
		codigo = "ME-001.007";
		prepararDatos(entidades.Cargo);

		MESA_PgnNuevoCargo.ir();
		//MESA_PgnNuevoCargo.irDesdePrincipal(); // Tempor por prueba unitaria
		MESA_PgnNuevoCargo.ModificarCargo();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnNuevoCargo.verificaCargoModificado());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		} 
	} 
	
	@Test
	public void A_ME_001_008_Eliminar_Cargos() { // Caso de Prueba DEPENDIENTE DE ME-001.003
		codigo = "ME-001.008";
		prepararDatos(entidades.Cargo);

		MESA_PgnNuevoCargo.ir();
		//MESA_PgnNuevoCargo.irDesdePrincipal(); // Tempor por prueba unitaria
		MESA_PgnNuevoCargo.eliminarCargo();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnNuevoCargo.verificarCargoEliminado());
			resultado = true;
						
		}  catch(Exception e){
			resultado = false;
		} 
	
	}
			    
	@Test
	public void G_ME_001_009_Informe_Control_Cargos() { 
		codigo = "ME-001.009";
		prepararDatos(entidades.Cargo);

		MESA_PgnInformeControlCargos.ir();
		//MESA_PgnInformeControlCargos.IrDesdePrincipal(); // Tempor por prueba unitaria
		MESA_PgnInformeControlCargos.imprimirControlCargos();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnInformeControlCargos.verificarImprimirControlCargos());
			resultado = true;
						
		}  catch(Exception e){
			resultado = false;
		} 
	
	}

	

}




