package com.indra.pjsf.regresion;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.Test;
//import org.junit.Ignore;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.pruebas.TestBase.msjResultado;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.PgnPaseAOtroOrganismo;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class ExpedientesLotesPase_NF extends RegresionTestBase {
	
	@Test
	public void A_GE_003_212_Pase_Lote_Expediente_Obligatorio(){
		
		codigo = "GE-003.212";
		prepararDatos(entidades.Expedientes); 
		
			//PgnPaseAOtroOrganismo.Ir();
			PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

	@Test
	public void A_GE_003_213_Pase_Lote_Tipo_Obligatorio(){
		
		codigo = "GE-003.213";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

	@Test
	public void A_GE_003_214_Pase_Lote_Enviar_A_Obligatorio(){
		
		codigo = "GE-003.214";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

	@Test
	public void A_GE_003_215_Pase_Lote_Expediente_Siguiente_Obligatorio(){
		
		codigo = "GE-003.215";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

	@Test
	public void A_GE_003_216_Pase_Lote_Codbarras_Incompatible(){
		
		codigo = "GE-003.216";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}
	
	@Test
	public void A_GE_003_217_Pase_Lote_Fojas_Incompatible(){
		
		codigo = "GE-003.217";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}


	@Test
	public void A_GE_003_218_Pase_Lote_Cuerpos_Incompatible(){
		
		codigo = "GE-003.218";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

	@Test
	public void A_GE_003_219_Pase_Lote_Fecha_Agenda_Incompatible(){
		
		codigo = "GE-003.219";
		prepararDatos(entidades.Expedientes); 
		
			PgnPaseAOtroOrganismo.Ir();
			//PgnPaseAOtroOrganismo.IrDesdePrincipal(); //Tempo por prueba unitaria
			PgnPaseAOtroOrganismo.nuevoPaseAOtroOrganismoLOTE();
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnPaseAOtroOrganismo.verificarPaseAOtroOrganismo());
			resultado = true;
			
		}  catch(Exception e){
			resultado = false;
		}
		
	}

}
