package com.indra.pjsf.pruebas;

import org.junit.Assert;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.indra.pjsf.tf.MESA_Driver;
import com.indra.pjsf.tf.datos.GestorDeDatosDePrueba.entidades;
import com.indra.pjsf.tf.paginas.MESA_PgnNuevoCargo;
import com.indra.pjsf.tf.paginas.PgnNuevoCargo;


import org.junit.Test;
import org.junit.Ignore;



@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class ExpedientesTransferenciasBases extends TestBase {
	
	@Test
	public void A_GE_003_030_Transferencia_Expediente_A_Mesa(){

		codigo = "GE-003.030";
		prepararDatos(entidades.Cargo); 
		
		//PgnNuevoCargo.Ir();
		PgnNuevoCargo.IrDesdePrincipal(); 
		PgnNuevoCargo.TransferenciaAMesa();
		
			
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					MESA_PgnNuevoCargo.MESA_verificarCRCreado());
			resultado = true;
											
		}  catch(Exception e){
			resultado = false;
		} 
		
		MESA_Driver.CerrarSesion();
		MESA_Driver.Cerrar();
	}
	
	
	@Test
	public void A_GE_003_031_Transferencia_Por_Cambio_Radicacion_Entre_Sedes(){
					
		codigo = "GE-003.031";
		prepararDatos(entidades.Cargo); 
		
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal();
		PgnNuevoCargo.TransferenciaCambioRadicacionEntreSedes();
		

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificaTransferenciaCambioRadicacionEntreSedes());
			resultado = true;
											
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
	@Ignore
	public void A_GE_003_032_Transferencia_Por_Elevacion_Corte_Con_Devolucion_Al_Mismo_Organismo(){
	// Esta prueba se ejecuta unicamente en entornos de ROSARIO
					
		codigo = "GE-003.032";
		prepararDatos(entidades.Cargo); 
		
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.TransferenciaElevacionCorteMismoOrganismo();
		
		// La verificación consiste en ir a Actuaciones y comprobar que se visualiza el Auto creado y firmado
		// previamente en la Corte Suprema.
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificaTransferenciaMismoOrganismo());
			resultado = true;
											
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	
	
	@Ignore
	public void A_GE_003_033_Transferencia_Por_Elevacion_Corte_Con_Devolucion_A_Distinto_Organismo(){
	// Esta prueba se ejecuta unicamente en entornos de ROSARIO
					
		codigo = "GE-003.033";
		prepararDatos(entidades.Cargo); 
		
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal(); // Tempor por prueba unitaria
		PgnNuevoCargo.TransferenciaElevacionCorteDisintoOrganismo();
		
		// La verificación consiste en ir a Actuaciones y comprobar que se visualiza el Auto creado y firmado
		// previamente en la Corte Suprema.
		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificaTransferenciaDistintoOrganismo());
			resultado = true;
											
		}  catch(Exception e){
			resultado = false;
		} 
		
	}

	@Test
	public void A_GE_003_034_Cargo_tras_Transferencia_Por_Cambio_Radicacion(){
					
		codigo = "GE-003.034";
		prepararDatos(entidades.Cargo); 
		
		
		PgnNuevoCargo.Ir();
		//PgnNuevoCargo.IrDesdePrincipal();
		PgnNuevoCargo.CargoTrasTransferenciaCambioRadicacion();
		

		try {
			Assert.assertTrue(mensaje + msjResultado.ERROR.toString(),
					PgnNuevoCargo.verificaCargoTrasTransferenciaCambioRadicacion());
			resultado = true;
											
		}  catch(Exception e){
			resultado = false;
		} 
		
	}
	
}
